[{"/home/mrayor/Documents/code/trail-web/src/src/index.js":"1","/home/mrayor/Documents/code/trail-web/src/src/App.js":"2","/home/mrayor/Documents/code/trail-web/src/src/store.js":"3","/home/mrayor/Documents/code/trail-web/src/src/utils/setAuthToken.js":"4","/home/mrayor/Documents/code/trail-web/src/src/views/Impact/Manager.js":"5","/home/mrayor/Documents/code/trail-web/src/src/views/Create/CreateAccount.js":"6","/home/mrayor/Documents/code/trail-web/src/src/views/FormManager/FormManager.js":"7","/home/mrayor/Documents/code/trail-web/src/src/views/Login/Login.js":"8","/home/mrayor/Documents/code/trail-web/src/src/views/FormBuilder/FormBuild.js":"9","/home/mrayor/Documents/code/trail-web/src/src/views/Projects/Projects.js":"10","/home/mrayor/Documents/code/trail-web/src/src/views/ProjectOverview/Overview.js":"11","/home/mrayor/Documents/code/trail-web/src/src/views/Dashboard/Dashboard.js":"12","/home/mrayor/Documents/code/trail-web/src/src/components/ProjectsCard/index.js":"13","/home/mrayor/Documents/code/trail-web/src/src/components/FormIO/Index.js":"14","/home/mrayor/Documents/code/trail-web/src/src/components/FormIO/CreateForm.js":"15","/home/mrayor/Documents/code/trail-web/src/src/components/CreateAcct/Index.js":"16","/home/mrayor/Documents/code/trail-web/src/src/actions/authAuctions.js":"17","/home/mrayor/Documents/code/trail-web/src/src/actions/projectAction.js":"18","/home/mrayor/Documents/code/trail-web/src/src/views/FormPreview/index.jsx":"19","/home/mrayor/Documents/code/trail-web/src/src/components/FormBuilder.js/BuildForm.js":"20","/home/mrayor/Documents/code/trail-web/src/src/views/PublishedForm/index.jsx":"21","/home/mrayor/Documents/code/trail-web/src/src/constants/app.constants.js":"22","/home/mrayor/Documents/code/trail-web/src/src/components/Card/ImageCard.js":"23","/home/mrayor/Documents/code/trail-web/src/src/components/Loader/CatalogMagic.js":"24","/home/mrayor/Documents/code/trail-web/src/src/appHelpers/appHelpers.js":"25","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManager.jsx":"26","/home/mrayor/Documents/code/trail-web/src/src/reducers/index.js":"27","/home/mrayor/Documents/code/trail-web/src/src/components/ActionCard/index.js":"28","/home/mrayor/Documents/code/trail-web/src/src/components/PerformanceIndicators/index.js":"29","/home/mrayor/Documents/code/trail-web/src/src/components/FundingGraph/index.js":"30","/home/mrayor/Documents/code/trail-web/src/src/components/DoughnutChart/index.js":"31","/home/mrayor/Documents/code/trail-web/src/src/components/LoginForm/index.js":"32","/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/menu/index.js":"33","/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/footer/index.js":"34","/home/mrayor/Documents/code/trail-web/src/src/components/IndicatorsCard/index.js":"35","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactMap/index.js":"36","/home/mrayor/Documents/code/trail-web/src/src/actions/alertActions.js":"37","/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/sidebar/index.js":"38","/home/mrayor/Documents/code/trail-web/src/src/actions/formActions.js":"39","/home/mrayor/Documents/code/trail-web/src/src/components/Alert/index.js":"40","/home/mrayor/Documents/code/trail-web/src/src/constants/Types.js":"41","/home/mrayor/Documents/code/trail-web/src/src/appHelpers/constants.js":"42","/home/mrayor/Documents/code/trail-web/src/src/components/FormIO/constants.js":"43","/home/mrayor/Documents/code/trail-web/src/src/components/FormBuilder.js/constants.js":"44","/home/mrayor/Documents/code/trail-web/src/src/components/CustomButton/CustomButton.js":"45","/home/mrayor/Documents/code/trail-web/src/src/reducers/formReducer.js":"46","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManagerSummary.jsx":"47","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManagerForm3.jsx":"48","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManagerForm2.jsx":"49","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManagerForm1.jsx":"50","/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/menu/RightMenu.js":"51","/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/menu/LeftMenu.js":"52","/home/mrayor/Documents/code/trail-web/src/src/components/FundingGraph/data.js":"53","/home/mrayor/Documents/code/trail-web/src/src/components/Loader/CustomCircularProgress.js":"54","/home/mrayor/Documents/code/trail-web/src/src/components/FormPreview/index.jsx":"55","/home/mrayor/Documents/code/trail-web/src/src/components/PublishedForm/index.jsx":"56","/home/mrayor/Documents/code/trail-web/src/src/components/hocs/_Aux/index.js":"57","/home/mrayor/Documents/code/trail-web/src/src/components/Space/TopSpace.js":"58","/home/mrayor/Documents/code/trail-web/src/src/components/Indicators/IndicatorView.jsx":"59","/home/mrayor/Documents/code/trail-web/src/src/components/SvgCard/SvgCard.jsx":"60","/home/mrayor/Documents/code/trail-web/src/src/components/Upload/ImageUpload.jsx":"61","/home/mrayor/Documents/code/trail-web/src/src/components/PublishedForm/Summary.jsx":"62","/home/mrayor/Documents/code/trail-web/src/src/components/PublishedForm/Questions.jsx":"63","/home/mrayor/Documents/code/trail-web/src/src/components/FormPreview/PreviewQuestions.jsx":"64","/home/mrayor/Documents/code/trail-web/src/src/components/FormPreview/ProgrammeSummary.jsx":"65","/home/mrayor/Documents/code/trail-web/src/src/appHelpers/Builder.jsx":"66","/home/mrayor/Documents/code/trail-web/src/src/components/Widgets/RadioInput.jsx":"67","/home/mrayor/Documents/code/trail-web/src/src/components/Widgets/ShortFreeText.jsx":"68","/home/mrayor/Documents/code/trail-web/src/src/components/Widgets/Layout.jsx":"69","/home/mrayor/Documents/code/trail-web/src/src/components/SvgCard/SvgCardView.jsx":"70","/home/mrayor/Documents/code/trail-web/src/src/reducers/authReducer.js":"71","/home/mrayor/Documents/code/trail-web/src/src/reducers/projectReducer.js":"72","/home/mrayor/Documents/code/trail-web/src/src/reducers/alertReducer.js":"73"},{"size":260,"mtime":1615106329208,"results":"74","hashOfConfig":"75"},{"size":1896,"mtime":1615449297999,"results":"76","hashOfConfig":"75"},{"size":371,"mtime":1615106329212,"results":"77","hashOfConfig":"75"},{"size":241,"mtime":1615106329212,"results":"78","hashOfConfig":"75"},{"size":1187,"mtime":1615106329212,"results":"79","hashOfConfig":"75"},{"size":204,"mtime":1615106329212,"results":"80","hashOfConfig":"75"},{"size":1035,"mtime":1615106329212,"results":"81","hashOfConfig":"75"},{"size":225,"mtime":1615106329212,"results":"82","hashOfConfig":"75"},{"size":1096,"mtime":1615106329212,"results":"83","hashOfConfig":"75"},{"size":3378,"mtime":1615449194582,"results":"84","hashOfConfig":"75"},{"size":2752,"mtime":1615449194582,"results":"85","hashOfConfig":"75"},{"size":2521,"mtime":1615449194582,"results":"86","hashOfConfig":"75"},{"size":4706,"mtime":1615449194578,"results":"87","hashOfConfig":"75"},{"size":209,"mtime":1615106329204,"results":"88","hashOfConfig":"75"},{"size":2931,"mtime":1615479567472,"results":"89","hashOfConfig":"75"},{"size":9810,"mtime":1615449194574,"results":"90","hashOfConfig":"75"},{"size":1833,"mtime":1615106329200,"results":"91","hashOfConfig":"75"},{"size":1226,"mtime":1615106329200,"results":"92","hashOfConfig":"75"},{"size":957,"mtime":1615449298003,"results":"93","hashOfConfig":"75"},{"size":16624,"mtime":1615485612516,"results":"94","hashOfConfig":"75"},{"size":841,"mtime":1615449298007,"results":"95","hashOfConfig":"75"},{"size":244,"mtime":1615471278253,"results":"96","hashOfConfig":"75"},{"size":2836,"mtime":1615449194574,"results":"97","hashOfConfig":"75"},{"size":532,"mtime":1615449194578,"results":"98","hashOfConfig":"75"},{"size":6867,"mtime":1615449194574,"results":"99","hashOfConfig":"75"},{"size":23166,"mtime":1615449194574,"results":"100","hashOfConfig":"75"},{"size":250,"mtime":1615449298003,"results":"101","hashOfConfig":"75"},{"size":2304,"mtime":1615106329204,"results":"102","hashOfConfig":"75"},{"size":1032,"mtime":1615106329208,"results":"103","hashOfConfig":"75"},{"size":638,"mtime":1615106329204,"results":"104","hashOfConfig":"75"},{"size":3405,"mtime":1615106329204,"results":"105","hashOfConfig":"75"},{"size":7100,"mtime":1615449194578,"results":"106","hashOfConfig":"75"},{"size":1149,"mtime":1615106329212,"results":"107","hashOfConfig":"75"},{"size":255,"mtime":1615106329212,"results":"108","hashOfConfig":"75"},{"size":1552,"mtime":1615449194578,"results":"109","hashOfConfig":"75"},{"size":1754,"mtime":1615449194574,"results":"110","hashOfConfig":"75"},{"size":323,"mtime":1615106329200,"results":"111","hashOfConfig":"75"},{"size":1750,"mtime":1615449194582,"results":"112","hashOfConfig":"75"},{"size":4940,"mtime":1615484142794,"results":"113","hashOfConfig":"75"},{"size":579,"mtime":1615106329204,"results":"114","hashOfConfig":"75"},{"size":1132,"mtime":1615478918235,"results":"115","hashOfConfig":"75"},{"size":71,"mtime":1615449297999,"results":"116","hashOfConfig":"75"},{"size":1833,"mtime":1615449298003,"results":"117","hashOfConfig":"75"},{"size":321,"mtime":1615449297999,"results":"118","hashOfConfig":"75"},{"size":823,"mtime":1615449194574,"results":"119","hashOfConfig":"75"},{"size":1039,"mtime":1615476046112,"results":"120","hashOfConfig":"75"},{"size":6770,"mtime":1615449194574,"results":"121","hashOfConfig":"75"},{"size":4645,"mtime":1615449194574,"results":"122","hashOfConfig":"75"},{"size":3196,"mtime":1615449194574,"results":"123","hashOfConfig":"75"},{"size":9192,"mtime":1615449194574,"results":"124","hashOfConfig":"75"},{"size":1292,"mtime":1615106329212,"results":"125","hashOfConfig":"75"},{"size":334,"mtime":1615106329212,"results":"126","hashOfConfig":"75"},{"size":432,"mtime":1615106329204,"results":"127","hashOfConfig":"75"},{"size":262,"mtime":1615449194578,"results":"128","hashOfConfig":"75"},{"size":1945,"mtime":1615449298003,"results":"129","hashOfConfig":"75"},{"size":2088,"mtime":1615486431925,"results":"130","hashOfConfig":"75"},{"size":59,"mtime":1615106329208,"results":"131","hashOfConfig":"75"},{"size":161,"mtime":1615449194578,"results":"132","hashOfConfig":"75"},{"size":297,"mtime":1615449194578,"results":"133","hashOfConfig":"75"},{"size":541,"mtime":1615449194578,"results":"134","hashOfConfig":"75"},{"size":1771,"mtime":1615449194578,"results":"135","hashOfConfig":"75"},{"size":1228,"mtime":1615484563446,"results":"136","hashOfConfig":"75"},{"size":245,"mtime":1615484474717,"results":"137","hashOfConfig":"75"},{"size":270,"mtime":1615484510388,"results":"138","hashOfConfig":"75"},{"size":1386,"mtime":1615484548923,"results":"139","hashOfConfig":"75"},{"size":659,"mtime":1615484370813,"results":"140","hashOfConfig":"75"},{"size":1026,"mtime":1615449298003,"results":"141","hashOfConfig":"75"},{"size":969,"mtime":1615449298003,"results":"142","hashOfConfig":"75"},{"size":498,"mtime":1615449298003,"results":"143","hashOfConfig":"75"},{"size":450,"mtime":1615106329208,"results":"144","hashOfConfig":"75"},{"size":1494,"mtime":1615106329212,"results":"145","hashOfConfig":"75"},{"size":3170,"mtime":1615106329212,"results":"146","hashOfConfig":"75"},{"size":361,"mtime":1615106329212,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"vtmo8p",{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"150"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"150"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"150"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"150"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"150"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"150"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"150"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"150"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"150"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"150"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"150"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"150"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"150"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"150"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"150"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"150"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"150"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"150"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"150"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"150"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"150"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"150"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"150"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"150"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"150"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"150"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"150"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"150"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"150"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"150"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"150"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"150"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"150"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"150"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"150"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"150"},"/home/mrayor/Documents/code/trail-web/src/src/index.js",[],["331","332"],"/home/mrayor/Documents/code/trail-web/src/src/App.js",[],"/home/mrayor/Documents/code/trail-web/src/src/store.js",[],"/home/mrayor/Documents/code/trail-web/src/src/utils/setAuthToken.js",[],"/home/mrayor/Documents/code/trail-web/src/src/views/Impact/Manager.js",[],"/home/mrayor/Documents/code/trail-web/src/src/views/Create/CreateAccount.js",[],"/home/mrayor/Documents/code/trail-web/src/src/views/FormManager/FormManager.js",["333","334","335"],"import React, { Fragment } from \"react\";\nimport FormIO from \"../../components/FormIO/Index\";\nimport { Layout, Row, Col } from \"antd\";\n\nimport Navbar from \"../../../src/layouts/layout-components/menu\";\nimport SideBar from \"../../../src/layouts/layout-components/sidebar\";\nimport FooterTab from \"../../../src/layouts/layout-components/footer\";\nimport CreateForm from \"../../components/FormIO/CreateForm\";\n\nconst { Content } = Layout;\n\nconst FormManager = () => {\n  return (\n    <div>\n      <Fragment>\n        <Layout style={{ minHeight: \"100vh\" }}>\n          <SideBar />\n          <Layout className=\"site-layout\">\n            <Navbar />\n            <Content style={{ margin: \"0 16px\" }}>\n              <h1 style={h1}>Form Manager</h1>\n              <CreateForm />\n            </Content>\n            <FooterTab />\n          </Layout>\n        </Layout>\n      </Fragment>\n    </div>\n  );\n};\n\nexport default FormManager;\n\nconst h1 = {\n  fontWeight: \"700\",\n  fontSize: \"23px\",\n  padding: \"16px\",\n  paddingLeft: \"0px\",\n  marginTop: \"80px\",\n};\n","/home/mrayor/Documents/code/trail-web/src/src/views/Login/Login.js",["336","337"],"import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport LoginForm from \"../../../src/components/LoginForm\";\n\nconst Login = () => {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n","/home/mrayor/Documents/code/trail-web/src/src/views/FormBuilder/FormBuild.js",["338","339","340","341"],"import React, { Fragment } from \"react\";\nimport FormIO from \"../../components/FormIO/Index\";\nimport { Layout, Row, Col } from \"antd\";\nimport Navbar from \"../../../src/layouts/layout-components/menu\";\nimport SideBar from \"../../../src/layouts/layout-components/sidebar\";\nimport FooterTab from \"../../../src/layouts/layout-components/footer\";\nimport CreateForm from \"../../components/FormIO/CreateForm\";\nimport BuildForm from \"../../components/FormBuilder.js/BuildForm\";\n\nconst { Content } = Layout;\n\nconst FormBuild = () => {\n  return (\n    <div>\n      <Fragment>\n        <Layout style={{ minHeight: \"100vh\" }}>\n          <SideBar />\n          <Layout className=\"site-layout\">\n            <Navbar />\n            <Content style={{ margin: \"0 16px\" }}>\n              <h1 style={h1}>Form Manager</h1>\n              <BuildForm />\n            </Content>\n            <FooterTab />\n          </Layout>\n        </Layout>\n      </Fragment>\n    </div>\n  );\n};\n\nexport default FormBuild;\n\nconst h1 = {\n  fontWeight: \"700\",\n  fontSize: \"23px\",\n  padding: \"16px\",\n  paddingLeft: \"0px\",\n  marginTop: \"80px\",\n};\n","/home/mrayor/Documents/code/trail-web/src/src/views/Projects/Projects.js",["342","343","344"],"import React, { Component, Fragment } from \"react\";\nimport { Layout } from \"antd\";\nimport Navbar from \"../../../src/layouts/layout-components/menu\";\nimport SideBar from \"../../../src/layouts/layout-components/sidebar\";\nimport FooterTab from \"../../../src/layouts/layout-components/footer\";\nimport ProjectsCard from \"../../components/ProjectsCard/index.js\";\nimport { Grid, Paper, withStyles } from \"@material-ui/core\";\nimport ImageCard from \"../../components/Card/ImageCard\";\nimport axios from \"axios\";\nimport { appConstants } from \"../../constants/app.constants\";\nimport { connect } from \"react-redux\";\nimport CatalogMagic from \"../../components/Loader/CatalogMagic\";\nconst { Content } = Layout;\n\nconst styles = theme => ({\n\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n});\nexport class Projects extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: [],\n      loading: true\n    }\n  }\n\n\n\n  componentDidMount = () => {\n    axios({\n      method: \"GET\",\n      url: `http://trail-api.test.vggdev.com/${appConstants.PROGRAMS}/`,\n      headers: { accessToken: this.props.auth.data.accessToken },\n    })\n      .then(({ data }) => {\n        this.setState({ projects: data.data }, () => {\n          this.setState({ loading: false })\n        })\n      })\n  }\n\n\n  renderProjectList = (projects) => {\n    let projectElem = []\n    for (let i in projects) {\n      projectElem.push(\n        <Grid item xs={12} sm={4} key={projects[i].id}>\n          <ImageCard\n            name={projects[i].name}\n            code={projects[i].code}\n            handleOverview={this.handleOverview}\n            id={projects[i].id}\n            image={projects[i].image}\n            sdgs={projects[i].sdgs}\n          />\n        </Grid>\n      )\n    }\n    return projectElem\n  }\n\n  handleOverview = (id,name) => {\n    this.props.history.push(\"/dashboard/projects/overview\")\n    this.props.history.push({\n      pathname: '/dashboard/projects/overview',\n      state: { detail: id ,name:name }\n    })\n  }\n  render() {\n\n\n    const { classes } = this.props;\n    const { projects, loading } = this.state;\n    return (\n      <div>\n        <Fragment>\n          <Layout style={{ minHeight: \"100vh\" }}>\n            <SideBar />\n            <Layout className=\"site-layout\">\n              <Navbar />\n              <Content style={{ margin: \"0 16px\" }}>\n                <h1 style={h1}>Projects</h1>\n                <Grid container spacing={3}>\n                  {loading &&\n                    [0, 1, 2, 3, 4, 5].map((index) => {\n                      return (\n                        <Grid item xs={12} sm={4} key={index}>\n                          <CatalogMagic />\n                        </Grid>\n                      )\n                    })\n\n                  }\n                  {!loading && this.renderProjectList(projects)}\n\n\n                </Grid>\n              </Content>\n              <FooterTab />\n            </Layout>\n          </Layout>\n        </Fragment>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\n// export default connect(mapStateToProps, {})(ProjectsCard);\n\nexport default withStyles(styles)(connect(mapStateToProps, {})(Projects))\n\n\nconst h1 = {\n  fontWeight: \"700\",\n  fontSize: \"23px\",\n  padding: \"16px\",\n  paddingLeft: \"0px\",\n  marginTop: \"80px\",\n};\n","/home/mrayor/Documents/code/trail-web/src/src/views/ProjectOverview/Overview.js",["345","346"],"import React, { Component, Fragment } from \"react\";\nimport { Layout, Row, Col } from \"antd\";\n\nimport Navbar from \"../../../src/layouts/layout-components/menu\";\nimport SideBar from \"../../../src/layouts/layout-components/sidebar\";\nimport FooterTab from \"../../../src/layouts/layout-components/footer\";\nimport IndicatorsCard from \"../../components/IndicatorsCard\";\nimport Indicators from \"../../components/PerformanceIndicators\";\nimport axios from \"axios\";\nimport { appConstants } from \"../../constants/app.constants\";\nimport { connect } from \"react-redux\";\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\nconst { Content } = Layout;\n\nexport class Overview extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      projectDetails:{},\n      projectName:\"\",\n      loading:true\n    }\n  }\n\n  componentDidMount =() =>{\n    if(this.props.location && this.props.location.state && this.props.location.state.detail){\n      const {detail,name} = this.props.location.state\n      this.setState({projectName:name})\n    axios({\n      method: \"GET\",\n      url:  `http://trail-api.test.vggdev.com/${appConstants.PROGRAMS}/${detail}`,\n       headers: { accessToken: this.props.auth.data.accessToken},\n    })\n    .then(({data})=>{\n      this.setState({projectDetails:data.data},()=>{\n        this.setState({loading:false})\n      })\n    })\n  }else{\n    this.props.history.push(\"/dashboard/projects\")\n  }\n  }\n  render() {\n\n    const {projectDetails,projectName,loading} = this.state\n    return (\n      <div>\n        <Fragment>\n          <Layout style={{ minHeight: \"100vh\" }}>\n            <SideBar />\n            <Layout className=\"site-layout\">\n              <Navbar />\n              <Content style={{ margin: \"0 16px\" }}>\n                <h1 style={h1}>{projectName}</h1>\n                <div>\n                  <IndicatorsCard \n                  sdgCount={projectDetails.sdgs && projectDetails.sdgs.length}\n                  indicatorCount={appHelpers.countProjectIndicators(projectDetails.sdgs && projectDetails.sdgs)}\n                  loading={loading}\n                  />\n                </div>\n                <div\n                  className=\"site-layout-background\"\n                  style={{ padding: 24, minHeight: 360 }}\n                >\n                  <div>\n                    <Indicators />\n                  </div>\n                </div>\n              </Content>\n              <FooterTab />\n            </Layout>\n          </Layout>\n        </Fragment>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, {})(Overview)\n\nconst h1 = {\n  fontWeight: \"700\",\n  fontSize: \"23px\",\n  padding: \"16px\",\n  paddingLeft: \"0px\",\n  marginTop: \"80px\",\n};\n","/home/mrayor/Documents/code/trail-web/src/src/views/Dashboard/Dashboard.js",["347","348","349"],"import React, { Component, Fragment } from \"react\";\nimport { Layout, Row, Col } from \"antd\";\nimport Navbar from \"../../../src/layouts/layout-components/menu\";\nimport SideBar from \"../../../src/layouts/layout-components/sidebar\";\nimport FooterTab from \"../../../src/layouts/layout-components/footer\";\nimport ActionCard from \"../../../src/components/ActionCard\";\nimport ImpactMap from \"../../../src/components/ImpactMap\";\nimport FundingGraph from \"../../../src/components/FundingGraph\";\nimport DoughnutChart from \"../../../src/components/DoughnutChart\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getPrograms } from \"../../actions/projectAction\";\nimport { loadUser } from \"../../actions/authAuctions\";\nimport axios from \"axios\";\n\nconst { Content } = Layout;\n\nexport class Dashboard extends Component {\n  // data = this.props\n  componentDidMount() {\n    getPrograms(this.props.auth.data.accessToken);\n  }\n\n  componentDidMount() {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        accessToken: this.props.auth.data.accessToken,\n      },\n    };\n\n    axios\n      .get(\"http://trail-api.test.vggdev.com/sdgs/all/indicators\", config)\n      .then((res) => {\n        const api = res.data.data;\n      });\n  }\n  render() {\n    return (\n      <div>\n        <Fragment>\n          <Layout\n            style={{\n              minHeight: \"100vh\",\n            }}\n          >\n            <SideBar />\n            <Layout className=\"site-layout\">\n              <Navbar />\n              <Content style={{ margin: \"0 16px\" }}>\n                <h1 style={h1}>Dashboard</h1>\n                <ActionCard />\n                <div>\n                  <Row>\n                    <Col xs={{ span: 24 }} lg={{ span: 14 }}>\n                      <ImpactMap />\n                    </Col>\n                    <Col xs={{ span: 24 }} lg={{ span: 10 }}>\n                      <DoughnutChart />\n                    </Col>\n                  </Row>\n                </div>\n              </Content>\n              <FooterTab />\n            </Layout>\n          </Layout>\n        </Fragment>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  loadUser: PropTypes.func.isRequired,\n  getPrograms: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { loadUser, getPrograms })(Dashboard);\n\nconst h1 = {\n  fontWeight: \"700\",\n  fontSize: \"23px\",\n  padding: \"16px\",\n  paddingLeft: \"0px\",\n  marginTop: \"80px\",\n};\n","/home/mrayor/Documents/code/trail-web/src/src/components/ProjectsCard/index.js",["350","351","352","353","354","355","356"],"import React, { Component } from \"react\";\nimport \"./index.css\";\nimport { Layout, Row, Col, Card, Button, Skeleton } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { appConstants } from \"../../constants/app.constants\";\nconst { Meta } = Card;\n\nexport class ProjectsCard extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      projects:[]\n    }\n  }\n  renderProjects = () => {\n    const { projects } = this.props.project;\n    let string = \"\";\n    projects.map((project, string) => {\n      <>\n        {project.image.fileList.map((image) => {\n          <>{image.thumbUrl}</>;\n        })}\n      </>;\n    });\n  };\n  \n  componentDidMount =() =>{\n    axios({\n      method: \"GET\",\n      url:  `http://trail-api.test.vggdev.com/${appConstants.PROGRAMS}/`,\n       headers: { accessToken: this.props.auth.data.accessToken},\n    })\n    .then(({data})=>{\n      console.log(\"data\".data)\n      debugger\n      this.setState({projects:data.data})\n    })\n  }\n\n  render() {\n    const {projects} = this.state\n    return (\n      <div>\n        {projects.length == 0 ? (\n          <div>\n            <h3>\n              When you add new projects, It would appear here!,{\" \"}\n              <Link to=\"/dashboard/manager\">Click to add</Link>{\" \"}\n            </h3>\n          </div>\n        ) : (\n          <Row>\n            {projects.map((project) => (\n              <div>\n                <Col xs={{ span: 24 }} lg={{ span: 8 }}>\n                  <Card\n                    className={\"projectCard\"}\n                    cover={\n                      <img\n                        alt={project.name}\n                        // src={project.image.fileList.map((image) => {\n                        //   <>{image.thumbUrl}</>;\n                        // })}\n                        src={project.image}\n                        style={{ height: \"200px\" }}\n                      />\n                    }\n                    actions={[\n                      <Link to={\"/dashboard/projects/overview\"}>\n                        <Button\n                          shape=\"round\"\n                          type=\"primary\"\n                          className={\"projectButton\"}\n                        >\n                          Overview\n                        </Button>\n                      </Link>,\n                    ]}\n                  >\n                    <Meta\n                      title={project.name}\n                      description={project.description}\n                    />\n                    <div>\n                      <Row style={{ marginTop: \"10px\" }}>\n                        <Col span={8}>\n                          <span className={\"projectSpan\"}>Location</span>\n                          <p className={\"projectParagraph\"}>\n                            {/* {project.location.description} */}\n                            {project.locations[0].description}\n                          </p>\n                        </Col>\n                        <Col span={8}>\n                          <span className={\"projectSpan\"}>Project Code</span>\n                          <p className={\"projectParagraph\"}>{project.code}</p>\n                        </Col>\n                        <Col span={8}>\n                          <span className={\"projectSpan\"}>Impact</span>\n                          <p className={\"projectParagraph\"}>\n                            <div className=\"gameStatistics\">\n                              {/* {Object.entries(project.sdgs).map(\n                                ([key, val]) => (\n                                  <p className={\"projectParagraph\"} key={key}>\n                                    {\" \"}\n                                    SDG {key}\n                                  </p>\n                                )\n                              )} */}\n                              {project.sdgs.map((val,index)=>{\n                                (\n                                  <p className={\"projectParagraph\"} key={index}>\n                                  {\" \"}\n                                  SDG {val.sdgId}\n                                </p> \n                                )\n                              })\n\n                              }\n                            </div>\n                          </p>\n                        </Col>\n                      </Row>\n                    </div>\n                  </Card>\n                </Col>\n              </div>\n            ))}\n          </Row>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  project: state.projects,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, {})(ProjectsCard);\n","/home/mrayor/Documents/code/trail-web/src/src/components/FormIO/Index.js",["357"],"import React from \"react\";\nimport { FormBuilder } from \"react-formio\";\nimport \"./styles.scss\";\nimport \"./Index.css\";\nconst FormIO = () => {\n  return (\n    <div>\n    \n    </div>\n  );\n};\n\nexport default FormIO;\n","/home/mrayor/Documents/code/trail-web/src/src/components/FormIO/CreateForm.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/CreateAcct/Index.js",["358","359","360"],"import React, { useState, useEffect } from \"react\";\nimport \"./Index.css\";\nimport { Form, Input, Button, Row, Col, Card, Checkbox, Tabs } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport LoginImg from \"../../assets/graphic_login.svg\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { setAlert } from \"../../actions/alertActions\";\nimport { register, clearErrors } from \"../../actions/authAuctions\";\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\nimport { Redirect } from \"react-router\";\nimport AlertInfo from \"../Alert/index\";\n\n/* eslint-disable */\nconst regEx = new RegExp(\n  /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[^\\w\\s]).{8,}$/\n);\n\nconst CreateAcct = (\n  { setAlert, error, register, isAuthenticated, clearErrors, registerSuccess },\n  props\n) => {\n  useEffect(() => {\n    if (error === \"A user with this email already exists\") {\n      setAlert(error, \"error\");\n      clearErrors();\n    } //eslint-disable-next-line\n  }, [error, isAuthenticated, props.history]);\n\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const { firstName, lastName, email, password, password2 } = formData;\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const onFinish = async () => {\n    if (firstName === \"\" || lastName === \"\" || email === \"\") {\n      setAlert(\"Please enter all fields\", \"error\");\n    } else if (password.length < 8) {\n      setAlert(\"Password must be more than 8 characters\", \"warning\");\n    } else if (password != password2) {\n      setAlert(\"Check if passwords are equal\", \"warning\");\n    } else if (regEx.test(password) == false) {\n      setAlert(\"Passwords must contain at least 1 Capital letter, 1 small letter and a special character\", \"warning\");\n    } else {\n      register({ firstName, lastName, email, password });\n    }\n  };\n\n  if (registerSuccess) {\n    appHelpers.successMessageAlert(\"Succesfully Registered, Login here\", 2000);\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div>\n      <div className=\"loginAltBg\" style={{ backgroundColor: \"#064E89\" }}>\n        <Row>\n          <Col xs={{ span: 0 }} lg={{ span: 10 }} className=\"login_container\">\n            <div className=\"left_container\">\n              <div>\n                {\" \"}\n                <h3\n                  className=\"loginH3\"\n                  style={{ color: \"#064E89\", textAlign: \"left\" }}\n                >\n                  Track your objectives using Trails.\n                </h3>\n                <p className=\"loginP\">\n                  Access to the most powerfull tool in the youth and agor\n                  sector.\n                </p>\n              </div>\n              <img src={LoginImg} width=\"350px\" className=\"loginImg\" />\n            </div>\n          </Col>\n          <Col xs={{ span: 20 }} lg={{ span: 14 }} className=\"logins_container\">\n            <div className=\"right_container\">\n              <div className=\"logo\"></div>\n              <div className=\"cardWrap\">\n                <div>\n                  <Link to=\"/\">\n                    <span\n                      style={{\n                        fontSize: \"15px\",\n                        fontWeight: \"400\",\n                        color: \"#5183AD\",\n                        paddingBottom: \"10px\",\n                        marginRight: \"20px\",\n                        borderBottom: \"2px solid #5183AD\",\n                        marginBottom: \"30px\",\n                      }}\n                    >\n                      Login\n                    </span>\n                  </Link>\n                  <Link to=\"/create\">\n                    <span\n                      style={{\n                        fontSize: \"16px\",\n                        fontWeight: \"900\",\n                        color: \"#fff\",\n                        paddingBottom: \"10px\",\n                        marginRight: \"20px\",\n                        borderBottom: \"2px solid white\",\n                        marginBottom: \"30px\",\n                      }}\n                    >\n                      Register\n                    </span>\n                  </Link>\n                </div>\n                <div>\n                  <AlertInfo />\n                  <br />\n                  <Form\n                    name=\"normal_login\"\n                    className=\"login-form\"\n                    initialValues={{ remember: true }}\n                    onFinish={onFinish}\n                  >\n                    <Form.Item\n                      name=\"firstName\"\n                      rules={[\n                        { required: true, message: \"This field is compulsory\" },\n                      ]}\n                      style={{ marginBottom: \"15px\" }}\n                    >\n                      <Input\n                        style={{\n                          height: \"40px\",\n                          borderRadius: \"7px\",\n                          fontSize: \"0.9rem\",\n                          border: \"1px solid rgba(10,46,101,.1)\",\n                        }}\n                        placeholder=\"First Name\"\n                        name=\"firstName\"\n                        type=\"text\"\n                        value={firstName}\n                        onChange={onChange}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      name=\"lastName\"\n                      rules={[\n                        { required: true, message: \"This field is compulsory\" },\n                      ]}\n                      style={{ marginBottom: \"15px\" }}\n                    >\n                      <Input\n                        style={{\n                          height: \"40px\",\n                          borderRadius: \"7px\",\n                          fontSize: \"0.9rem\",\n                          border: \"1px solid rgba(10,46,101,.1)\",\n                        }}\n                        placeholder=\"Last Name\"\n                        name=\"lastName\"\n                        type=\"text\"\n                        value={lastName}\n                        onChange={onChange}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      name=\"email\"\n                      rules={[\n                        { required: true, message: \"Confirm your Input\" },\n                      ]}\n                      style={{ marginBottom: \"15px\" }}\n                    >\n                      <Input\n                        style={{\n                          height: \"40px\",\n                          borderRadius: \"7px\",\n                          fontSize: \"0.9rem\",\n                          border: \"1px solid rgba(10,46,101,.1)\",\n                        }}\n                        placeholder=\"E-mail Address\"\n                        type=\"email\"\n                        name=\"email\"\n                        type=\"text\"\n                        value={email}\n                        onChange={onChange}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      name=\"password\"\n                      rules={[\n                        { required: true, message: \"Confirm your Input\" },\n                      ]}\n                    >\n                      <Input.Password\n                        style={{\n                          height: \"40px\",\n                          borderRadius: \"7px\",\n                          fontSize: \"0.9rem\",\n                          border: \"1px solid rgba(10,46,101,.1)\",\n                        }}\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={onChange}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      name=\"password2\"\n                      rules={[\n                        { required: true, message: \"Confirm your Input\" },\n                      ]}\n                    >\n                      <Input.Password\n                        style={{\n                          height: \"40px\",\n                          borderRadius: \"7px\",\n                          fontSize: \"0.9rem\",\n                          border: \"1px solid rgba(10,46,101,.1)\",\n                        }}\n                        type=\"password\"\n                        name=\"password2\"\n                        placeholder=\"Re-type Password\"\n                        value={password2}\n                        onChange={onChange}\n                      />\n                    </Form.Item>\n                    <Row>\n                      <Col xs={{ span: 12 }} lg={{ span: 6 }}>\n                        {\" \"}\n                        <Form.Item>\n                          <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            className=\"loginBtn\"\n                          >\n                            Register\n                          </Button>\n                        </Form.Item>\n                      </Col>\n                    </Row>\n                  </Form>\n                </div>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nconst textLogin = {\n  textAlign: \"center\",\n  marginBottom: 10,\n  paddingBottom: 10,\n};\n\nCreateAcct.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  error: state.auth.error,\n  isAuthenticated: state.auth.isAuthenticated,\n  registerSuccess: state.auth.registerSuccess,\n});\n\nexport default connect(mapStateToProps, { setAlert, register, clearErrors })(\n  CreateAcct\n);\n","/home/mrayor/Documents/code/trail-web/src/src/actions/authAuctions.js",["361","362","363"],"import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  USER_LOADED,\n  AUTH_ERROR,\n  CLEAR_ERRORS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../constants/Types\";\nimport axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\n\n//Load User\n\nexport const loadUser = () => async (dispatch) => {\n  // setAuthToken(localStorage.token);\n  // try {\n  //   const res = await axios.get(\"http://trail-api.test.vggdev.com/user\");\n  //   dispatch({\n  //     type: USER_LOADED,\n  //     payload: res.data,\n  //   });\n  // } catch (error) {\n  //   dispatch({\n  //     type: AUTH_ERROR,\n  //     payload: error.response,\n  //   });\n  // } \n};\n\n//Register User\n\nexport const register = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    const res = await axios.post(\n      \"http://trail-api.test.vggdev.com/user/\",\n      formData,\n      config\n    );\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n    loadUser();\n  } catch (error) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: error.response,\n    });\n  }\n};\n\n// Login User\n\nexport const login = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    const res = await axios.post(\n      \"http://trail-api.test.vggdev.com/authenticate/\",\n      formData,\n      config\n    );\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n    loadUser();\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response,\n    });\n  }\n};\n\n//Logout\nexport const logout = () => async (dispatch) => {\n  dispatch({ type: LOGOUT });\n};\n\n//Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({ type: CLEAR_ERRORS });\n};\n","/home/mrayor/Documents/code/trail-web/src/src/actions/projectAction.js",["364","365","366"],"import {\n  CREATE_PROJECT,\n  GET_PROJECT,\n  TEST_DISPATCH,\n  GET_INDICATORS,\n  PROJECT_ERROR,\n  GET_PROGRAMS,\n} from \"../constants/Types\";\nimport axios from \"axios\";\n\nexport const getPrograms = (token) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      accessToken: token,\n    },\n  };\n  try {\n    const res = await axios.get(\n      \"http://trail-api.test.vggdev.com/programs\",\n      config\n    );\n    dispatch({\n      type: GET_PROGRAMS,\n      payload: res.data,\n    });\n    console.log(\"Sameerah\", res.data);\n  } catch (err) {\n    dispatch({\n      type: PROJECT_ERROR,\n      payload: err.response,\n    });\n  }\n};\n\nexport const getProject = () => {\n  return {\n    type: GET_PROJECT,\n  };\n};\n\nexport const createProject = (project) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  try {\n    // const res = await axios.post(\n    //   \"/api/plans\",\n    //   project,\n    //   config\n    // );\n    dispatch({\n      type: CREATE_PROJECT,\n      payload: project,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROJECT_ERROR,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\n\n\n\n","/home/mrayor/Documents/code/trail-web/src/src/views/FormPreview/index.jsx",[],"/home/mrayor/Documents/code/trail-web/src/src/components/FormBuilder.js/BuildForm.js",["367","368"],"/home/mrayor/Documents/code/trail-web/src/src/views/PublishedForm/index.jsx",["369","370","371","372","373"],"import Layout, { Content } from 'antd/lib/layout/layout'\nimport React from 'react'\nimport FooterTab from '../../layouts/layout-components/footer'\nimport Navbar from '../../layouts/layout-components/menu'\nimport SideBar from '../../layouts/layout-components/sidebar'\nimport PublishedSection from '../../components/PublishedForm'\nimport { dummyForms } from '../../components/FormIO/constants'\nimport { startCase } from 'lodash'\n\nconst PublishedForm = () => {\n    return (\n        <Layout style={{ minHeight: \"100vh\" }}>\n            <Content className=\"published-section-container\">\n              <PublishedSection />\n            </Content>\n            <FooterTab />\n        </Layout>\n    )\n}\n\nconst h1 = {\n  fontWeight: \"700\",\n  fontSize: \"23px\",\n  padding: \"16px\",\n  paddingLeft: \"0px\",\n  marginTop: \"80px\",\n};\n\n\nexport default PublishedForm\n","/home/mrayor/Documents/code/trail-web/src/src/constants/app.constants.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/Card/ImageCard.js",["374","375","376","377"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Row, Col } from \"antd\";\nimport modulestyle from \"./imagecard.module.css\"\nconst useStyles = makeStyles({\n  root: {\n    // maxWidth: 345,\n  },\n});\n\nconst ImageCard = ({ name, image, code ,handleOverview,id,sdgs}) => {\n  const classes = useStyles();\n\n\n const renderSdgs = (sdgs) =>{\n    let sdgElems = [];\n    for(let i in sdgs){\n      const lastIndex = sdgs.length - 1;\n      sdgElems.push(\n            <>\n        <label className=\"p-0 m-0\">SDG {`${sdgs[i].sdgId} `} {i != (sdgs.length-1) ? ', ' : ''}</label>\n            </>\n        )\n    }\n    return sdgElems;\n}\n  return (\n    <Card className={classes.root}>\n        <CardMedia\n          component=\"img\"\n          alt=\"Contemplative Reptile\"\n          height=\"290\"\n          image={image}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <div>\n              {\" \"}\n              <h3>{name}</h3>\n            </div>\n            <div>\n              {\" \"}\n              <h4 style={{color:\"#53d1be\",fontWeight:\"bold\"}}>{code}</h4>\n            </div>\n          </div>\n          <Row>\n              <Col md=\"3\">\n                <div>\n                  <label className=\"p-0 m-0\">LOCATION</label>\n                </div>\n                <div>\n                  <label className=\"p-0 m-0\">Nigeria</label>\n                </div>\n              </Col>\n              <div className={modulestyle.vl}></div>\n              <Col md=\"5\"style={{marginLeft:\"10px\"}}>\n                <div>\n                  <label className=\"p-0 m-0\">IMPACT</label>\n                </div>\n                <div style={{width:\"max-content\"}}>\n                  <div style={{ display: \"flex\" }}>\n                    {renderSdgs(sdgs)}\n                  </div>\n                </div>\n              </Col>\n            </Row>\n          {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Lizards are a widespread group of squamate reptiles, with over 6,000\n            species, ranging across all continents except Antarctica\n          </Typography> */}\n        </CardContent>\n      <CardActions>\n        <Button size=\"large\" color=\"primary\" onClick={(e)=>handleOverview(id,name)} className=\"projectButton\">\n          Overview\n        </Button>\n        \n      </CardActions>\n    </Card>\n  );\n};\n\nexport default ImageCard;\n","/home/mrayor/Documents/code/trail-web/src/src/components/Loader/CatalogMagic.js",[],"/home/mrayor/Documents/code/trail-web/src/src/appHelpers/appHelpers.js",["378","379","380","381","382","383","384","385","386","387","388","389"],"import swal from \"sweetalert2\";\n\nexport const appHelpers = {\n  returnLabelsforDonut: (arr) => {\n    let label = [];\n    for (let i in arr) {\n      label.push(arr[i][0]);\n    }\n    return label;\n  },\n\n  toCapitalLetters: (value) => {\n    if (typeof value === \"string\") {\n      return value.toLocaleUpperCase();\n    }\n  },\n  formatLargeNumbers: (x) => {\n    if (isNaN(x)) return x;\n\n    if (x < 9999) {\n      return x;\n    }\n\n    if (x < 1000000) {\n      return Math.round(x / 1000) + \"K\";\n    }\n    if (x < 10000000) {\n      return (x / 1000000).toFixed(2) + \"M\";\n    }\n\n    if (x < 1000000000) {\n      return Math.round(x / 1000000) + \"M\";\n    }\n\n    if (x < 1000000000000) {\n      return Math.round(x / 1000000000) + \"B\";\n    }\n\n    return \"1T+\";\n  },\n\n  returnIndicatorsOnly : (indicators)=>{\n    let ind =[]\n    let f = indicators.filter((o) => o.status === true)\n    for(let i in f){\n      ind.push(parseInt(f[i].id))\n    }\n    return ind;\n  },\n  countProjectIndicators : (sdgs) =>{\n    let projectIndicators = [];\n    for(let i in sdgs){\n      const indicators = sdgs[i].indicators\n      projectIndicators.push(indicators)\n    }\n    return projectIndicators.length\n  },\n  formatSdgsIndicatorsPayload : (finalSdgChecks) =>{\n    let sdgs = []\n    for(let i in finalSdgChecks){\n      sdgs.push({\n        indicators:finalSdgChecks[i].indicators,\n        id:finalSdgChecks[i].id\n      })\n    }\n    return sdgs\n  },\n  returnSelectedSdgs: (sdgCheckBoxes, sdgDump) => {\n    Object.entries(sdgCheckBoxes).forEach(([key, value]) => {\n      if (value === false) {\n        delete sdgCheckBoxes[key];\n      }\n    });\n    return Object.keys(sdgCheckBoxes).map((id) =>\n      sdgDump.find((sdg) => sdg.id === id)\n    );\n  },\n\n  addDots: (value) => {\n    let valueCopy = value.substring(0, 20);\n    if (value.length > 15) return (valueCopy += \"...\");\n    else return value;\n  },\n\n  returnIndicators: (sdgCheckBoxes, sdgDump) => {\n    const filtered = appHelpers.returnSelectedSdgs(sdgCheckBoxes, sdgDump);\n    const returnedIndicators = [];\n    filtered.map((filteredItem, index) => {\n      filteredItem.indicators.map((item, index) => {\n        returnedIndicators.push({\n          value: item.description,\n          status: false,\n          sdgId: filteredItem.id,\n        });\n      });\n    });\n    //console.log(\"asjaskj\",filtered)\n    return returnedIndicators;\n  },\n\n  indicatorSummary: (sdgChecks) => {\n    const returnedIndicators = [];\n\n    sdgChecks.map((item, index) => {\n      item.indicators.map((indicator, indicatorIndex) => {\n        if (indicator.status === true) {\n          returnedIndicators.push({\n            description: indicator.description,\n            SdgId: item.id,\n          });\n        }\n      });\n    });\n    return returnedIndicators;\n  },\n\n  formatApiMapData: (apiGeoData) => {\n    const returnedLocations = [];\n    let count = 0;\n\n    apiGeoData.map((geolocation, geolocationIndex) => {\n      returnedLocations.push({\n        id: count++,\n        shelter: geolocation.Area,\n        latitude: parseFloat(geolocation.Latitude),\n        longitude: parseFloat(geolocation.Longitude),\n      });\n    });\n    return returnedLocations;\n  },\n  formatMapData: (dashboardData) => {\n    const returnedLocations = [];\n    let count = 0;\n\n    dashboardData.map((item, index) => {\n      item.GeoLocations.map((geolocation, geolocationIndex) => {\n        returnedLocations.push({\n          id: count++,\n          latitude: parseFloat(geolocation.Latitude),\n          longitude: parseFloat(geolocation.Longitude),\n        });\n      });\n    });\n    return returnedLocations;\n  },\n\n  returnApiMapDefaultCenter: (apiGeoData) => {\n    const defautlCenter = [];\n    let count = 0;\n\n    apiGeoData.map((geolocation, geolocationIndex) => {\n      defautlCenter.push({\n        lat: parseFloat(geolocation.Latitude),\n        lng: parseFloat(geolocation.Longitude),\n      });\n    });\n    return defautlCenter[0];\n  },\n\n  returnMapDefaultCenter: (dashboardData) => {\n    const defautlCenter = [];\n    let count = 0;\n\n    dashboardData.map((item, index) => {\n      item.GeoLocations.map((geolocation, geolocationIndex) => {\n        defautlCenter.push({\n          lat: parseFloat(geolocation.Latitude),\n          lng: parseFloat(geolocation.Longitude),\n        });\n      });\n    });\n    return defautlCenter[0];\n  },\n\n  containsObject: (obj, list) => {\n    var i;\n    for (i = 0; i < list.length; i++) {\n      if (list[i].id === obj.id) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  filterSdgById: (id, allIndicators) => {\n    let filtered = allIndicators.filter((item) => {\n      return item.sdgId === id;\n    });\n    return filtered;\n  },\n  returnSdgNameById: (id, sdgDump) => {\n    let filtered = sdgDump.filter((item) => {\n      return item.id === id;\n    });\n    const filteredObj = Object.assign({}, ...filtered);\n    return filteredObj.description;\n  },\n  setIndicatorCheckBoxes: (indicators, index) => {\n    let isTrue = false;\n    Object.keys(indicators).forEach(function (key) {\n      isTrue = key === index ? true : false;\n    });\n    return isTrue;\n  },\n  validateImpactFormOne: (context) => {\n    let _errs_ = {};\n    let formValid = true;\n    if (context.state.name === \"\") {\n      _errs_[\"name\"] = true;\n      formValid = false;\n    }\n    if (context.state.code === \"\") {\n      _errs_[\"code\"] = true;\n      formValid = false;\n    }\n    if (context.state.description === \"\") {\n      _errs_[\"description\"] = true;\n      formValid = false;\n    }\n    if (context.state.projectLocation === \"\") {\n      _errs_[\"projectLocation\"] = true;\n      formValid = false;\n    }\n\n    context.setState({ formOneErrors: _errs_ });\n    return formValid;\n  },\n\n  validateImpactFormTwo: (context) => {\n    let _errs_ = {};\n    let formValid = true;\n    if (Object.keys(context.state.sdgCheckBoxes).length === 0) {\n      _errs_[\"sdg\"] = true;\n      formValid = false;\n    }\n    context.setState({ formTwoErrors: _errs_ });\n    return formValid;\n  },\n  validateImpactFormThree: (context) => {\n    let _errs_ = {};\n    let formValid = true;\n    if (Object.keys(context.state.indicatorCheckBoxes).length === 0) {\n      _errs_[\"indicator\"] = true;\n      formValid = false;\n    }\n    context.setState({ formThreeErrors: _errs_ });\n    return formValid;\n  },\n\n  failedRequestAlert: (message, timer = 2000) => {\n    swal.fire({\n      titleText: \"Sorry!\",\n      text: message,\n      icon: \"error\",\n      timer: timer,\n      showConfirmButton: true,\n    });\n  },\n\n  canceledRequestAlert: (message, timer = 2000) => {\n    swal.fire({\n      titleText: \"Too bad\",\n      text: message,\n      icon: \"error\",\n      timer: timer,\n      showConfirmButton: true,\n    });\n  },\n\n  successMessageAlert: (message, timer = 2000) => {\n    swal.fire({\n      titleText: \"Success!\",\n      text: message,\n      icon: \"success\",\n      timer: timer,\n      showConfirmButton: true,\n    });\n  },\n};\n","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManager.jsx",["390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411"],"import React from \"react\";\nimport Aux from \"../hocs/_Aux\";\nimport { Button } from \"@material-ui/core\";\nimport { withStore } from \"@spyna/react-store\";\nimport { Row, Col, Card, Form, Divider } from \"antd\";\nimport ImpactManagerForm1 from \"./ImpactManagerForm1\";\nimport ImpactManagerForm2 from \"./ImpactManagerForm2\";\nimport ImpactManagerForm3 from \"./ImpactManagerForm3\";\nimport ImpactManagerSummary from \"./ImpactManagerSummary\";\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\n//import { sdgDump } from \"./sdgDump\";\nimport \"./index.css\";\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\n\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectAction\";\nimport { useDropzone } from \"react-dropzone\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\nimport axios from \"axios\";\nimport { Map, Marker, GoogleApiWrapper } from \"google-maps-react\";\nimport { appConstants } from \"../../constants/app.constants\";\nimport CustomButton from \"../CustomButton/CustomButton\";\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\",\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\",\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\",\n};\n\nconst thumbsContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  marginTop: 16,\n};\n\nconst thumb = {\n  display: \"inline-flex\",\n  borderRadius: 2,\n  border: \"1px solid #eaeaea\",\n  marginBottom: 8,\n  marginRight: 8,\n  width: \"auto\",\n  height: 200,\n  padding: 4,\n  boxSizing: \"border-box\",\n};\n\nconst thumbInner = {\n  display: \"flex\",\n  minWidth: 0,\n  overflow: \"hidden\",\n};\n\nconst img = {\n  display: \"block\",\n  width: \"auto\",\n  height: \"100%\",\n};\n\nconst { Meta } = Card;\n\n// const locationsEnum = [\n//   { label: \"Nigeria\", value: \"ng\" },\n//   { label: \"Ghana\", value: \"gh\" },\n// ];\n\nconst CardTitleForm1 = (\n  <h1 style={{ fontSize: \"25px\", fontWeight: \"normal\", margin: 0 }}>\n    Create your custom impact\n  </h1>\n);\n\nconst CardTitleForm3 = (\n  <h1 style={{ fontSize: \"20px\", fontWeight: \"normal\", margin: 0 }}>\n    Select Indicators\n  </h1>\n);\n\nconst CardTitleForm2 = (\n  <h1 style={{ fontSize: \"25px\", fontWeight: \"normal\", margin: 0 }}>\n    Select the Sustainable Development Goals for this programme\n  </h1>\n);\n\nclass ImpactManager extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      createBtn: (\n        <span>\n          Create Project <i className=\"fa fa-angle-right\" />{\" \"}\n        </span>\n      ),\n      sdgDump: [],\n      name: \"\",\n      code: \"\",\n      programmeLocation: \"\",\n      description: \"\",\n      programmePlaces: \"\",\n      image: {},\n      impactManagerFormOne: true,\n      impactManagerFormTwo: false,\n      impactManagerFormThree: false,\n      impactManagerSummary: false,\n      sdgCheckBoxes: {},\n      sdgChecks: [],\n      indicatorCheckBoxes: {},\n      alert: null,\n      allIndicators: null,\n      mySdg: [],\n      creating:false,\n      indicators: [\n        {\n          id: 1,\n          description: \"No Poverty\",\n        },\n        {\n          id: 2,\n          description: \"No Hunger\",\n        },\n      ],\n      formOneErrors: {\n        name: false,\n        description: false,\n        // projectLocation: false,\n        programmeLocation: false,\n        code: false,\n        programmePlaces: \"\",\n        image: false,\n      },\n      formTwoErrors: {\n        sdg: false,\n      },\n      formThreeErrors: {\n        indicator: false,\n      },\n      imageData:null,\n      files:[],\n      fileForm:null,\n      // for google map places autocomplete\n      address: \"\",\n      showingInfoWindow: false,\n      location: {},\n      selectedPlace: {},\n      mapCenter: {\n        lat: 49.2827291,\n        lng: -123.1207375,\n      },\n    };\n    this.createProject = this.createProject.bind(this);\n    this.cancelProject = this.cancelProject.bind(this);\n  }\n\n  componentDidMount() {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        accessToken: this.props.auth.data.accessToken,\n      },\n    };\n\n    axios\n      .get(\"http://trail-api.test.vggdev.com/sdgs/all/indicators\", config)\n      .then((res) => {\n        const sdgDump = res.data.data;\n        this.setState({ sdgDump });\n      });\n  }\n\n  handleChangePlace = (address) => {\n    this.setState({ address });\n  };\n\n  handleSelectPlace = (address, selectedPlace, location) => {\n    console.log(\"address\",address);\n    console.log(\"selectedPlace\",selectedPlace)\n    console.log(\"location\",location)\n    // const locations = \"{ \"name\" : \"Lagos\", \"description\" : \"yaml, the place of reckoning\", \"lat\" : \"1.02344555\", \"long\" : \"5.9732723878\", \"placeId\" : \"dsdsdscdsfs\"}\"\n    \n    this.setState({ address, selectedPlace, location });\n    geocodeByAddress(address)\n      .then((results) => getLatLng(results[0]))\n      .then((latLng) => {\n        console.log(\"Success\", latLng);\n        // update center state\n        this.setState({ mapCenter: latLng });\n      })\n      .catch((error) => console.error(\"Error\", error));\n  };\n\n  normFile = (e) => {\n    \n    this.setState({ image: e.fileList[0].thumbUrl ,imageData:e.fileList});\n    if (Array.isArray(e)) {\n      return e.fileList[0].thumbUrl;\n    }\n    return e.fileList[0].thumbUrl;\n  };\n\n  handleInputChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSelectChange = (input) => ({ target: { value } }) => {\n    this.setState({ [input]: value });\n  };\n\n  openImageManagerFormTwo = () => {\n    if (appHelpers.validateImpactFormOne(this)) {\n      this.setState({\n        impactManagerFormOne: false,\n        impactManagerFormTwo: true,\n      });\n      const impactManager = {\n        name: this.state.name,\n        code: this.state.code,\n        description: this.state.description,\n        // projectLocation: this.state.projectLocation,\n        programmeLocation: this.state.programmeLocation,\n        image: this.state.image,\n        programmePlaces: this.state.programmePlaces,\n        sdgs: [],\n        indicators: [],\n      };\n    } else {\n      console.log(\"some fields are missing\");\n    }\n  };\n\n  openImageManagerFormThree = (sdgCheckBoxes, sdgNum) => {\n    if (sdgCheckBoxes[sdgNum] !== true) {\n      this.setState({\n        impactManagerFormOne: false,\n        impactManagerFormTwo: true,\n        impactManagerFormThree: false,\n      });\n    }\n    if (appHelpers.validateImpactFormTwo(this)) {\n      this.setState({\n        impactManagerFormOne: false,\n        impactManagerFormTwo: false,\n        impactManagerFormThree: true,\n      });\n    } else {\n      appHelpers.failedRequestAlert(\"Select at least One SDG\");\n    }\n  };\n\n  openImpactManagerSummary = () => {\n    if (appHelpers.validateImpactFormThree(this)) {\n      this.setState({\n        impactManagerFormTwo: false,\n        impactManagerFormThree: false,\n        impactManagerSummary: true,\n      });\n    } else {\n      appHelpers.failedRequestAlert(\"Please Select at least One Indicator\");\n      this.setState({\n        impactManagerFormTwo: false,\n        impactManagerFormThree: false,\n        impactManagerSummary: true,\n      });\n    }\n  };\n  \n  createProject() {\n    const indicatorStrings = [];\n    this.setState({creating:true})\n    const {\n      name,\n      description,\n      code,\n      mySdg,\n      sdgCheckBoxes,\n      indicatorCheckBoxes,\n      image,\n      location,address,\n      mapCenter,imageData\n    } = this.state;\n    const payload = {\n      name,\n      description,\n      code,\n      image,\n      location,\n      mapCenter,\n      sdgCheckBoxes,\n      mySdg,\n      indicatorCheckBoxes,\n    };\n    // this.props.createProject(payload);\n    // appHelpers.successMessageAlert(\"Programme Successfully Created\");\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        accessToken: this.props.auth.data.accessToken,\n      },\n    };\n    const locations ={\n      name: location.formattedSuggestion.mainText,\n      description:location.description,\n      lat:mapCenter.lat,\n      long:mapCenter.lng\n    }\n    const activeMarker ={\n      name: location.formattedSuggestion.mainText,\n      description:location.description,\n      lat:mapCenter.lat,\n      long:mapCenter.lng\n    }\n    // const sdgs = appHelpers.formatSdgsPayload(indicatorCheckBoxes,sdgCheckBoxes,this.state.sdgDump)\n   \n    const finalSdgChecks = this.state.sdgChecks.map((q,i)=>{\n      return {\n        ...q,\n        indicators:appHelpers.returnIndicatorsOnly(q.indicators)\n        \n      }\n    })\n    const sdgs = appHelpers.formatSdgsIndicatorsPayload(finalSdgChecks)\n    let apiPayload = new FormData();\n    apiPayload.append(\"name\", name);\n    apiPayload.append(\"description\", description);\n    apiPayload.append(\"code\", code);\n    apiPayload.append(\"locations\",JSON.stringify(locations))\n    apiPayload.append(\"sdgs\",JSON.stringify(sdgs))\n    apiPayload.append(\"activeMarker\",JSON.stringify(activeMarker))\n    apiPayload.append(\"image\", this.state.fileForm,this.state.fileForm.name);\n\n    console.log(\"payload---\",payload);\n    console.log(\"sdgssdgs---\",sdgs);\n    console.log(\"fileeeForm---\",this.state.fileForm);\n\n    console.log(\"all state---\",this.state);\n\n    axios({\n      method: \"post\",\n      url:  `http://trail-api.test.vggdev.com/${appConstants.PROGRAMS}/`,\n      data: apiPayload,\n      headers: { \"Content-Type\": \"multipart/form-data\",accessToken: this.props.auth.data.accessToken},\n    })\n    .then(({data})=>{\n      if(data){\n        appHelpers.successMessageAlert(data.message)\n        this.setState({creating:false})\n        this.resetPage()\n        }else{\n\n        }\n    })\n    .catch((err)=>{\n      appHelpers.failedRequestAlert(err.response.data.message,3500)\n    })\n     \n  }\n\n  cancelProject() {\n    appHelpers.canceledRequestAlert(\"Project Cancelled!\");\n    window.location.reload();\n  }\n\n\n  resetPage = () =>{\n    this.setState({\n      impactManagerFormOne:true,\n      impactManagerFormTwo:false,\n      impactManagerFormThree:false,\n      impactManagerSummary:false,\n      name:\"\",\n      code:\"\",\n      address:\"\",\n      description:\"\",\n      files:[],\n      fileForm:null,\n      sdgCheckBoxes:{},sdgChecks:[],indicatorCheckBoxes:{},location:{}\n    })\n  }\n\n  goBack = () => {\n    this.setState({ impactManagerFormOne: true, impactManagerFormTwo: false });\n  };\n\n  goBackTwo = () => {\n    this.setState({\n      impactManagerFormTwo: true,\n      impactManagerFormThree: false,\n    });\n  };\n\n  handleCheckboxChange = (\n    indicatorValue,\n    e,\n    indicatorIndex,\n    sdgIndex,\n    indicatorID\n  ) => {\n    const { allIndicators, sdgChecks } = this.state;\n    const newIndicators = allIndicators.map((indicator, id) => {\n      if (indicatorIndex !== id) return indicator;\n      return {\n        ...indicator,\n        status: e.target.checked,\n      };\n    });\n\n    const newSdgChecks = sdgChecks.map((q, i) =>\n      q.id === sdgIndex\n        ? {\n            ...q,\n            indicators: q.indicators.map((o, i) =>\n              i === indicatorIndex\n                ? {\n                    ...o,\n                    status: e.target.checked,\n                  }\n                : o\n            ),\n          }\n        : q\n    );\n    this.setState({\n      indicatorCheckBoxes: {\n        ...this.state.indicatorCheckBoxes,\n        [indicatorID]: indicatorValue,\n      },\n      allIndicators: newIndicators,\n      sdgChecks: newSdgChecks,\n    });\n  };\n\n  updateSvgState = (sdg) => {\n    const { sdgChecks, sdgDump } = this.state;\n\n    let filtered = sdgDump.filter((item) => {\n      return parseInt(item.id) === parseInt(sdg);\n    });\n    const obj = Object.assign({}, ...filtered);\n    const svgExist = appHelpers.containsObject(obj, sdgChecks);\n    if (svgExist === true) {\n      this.setState({\n        sdgCheckBoxes: {\n          ...this.state.sdgCheckBoxes,\n          [sdg]: !this.state.sdgCheckBoxes[sdg],\n        },\n      });\n      this.setState((prevState) => ({\n        sdgChecks: prevState.sdgChecks.filter((SDG) => SDG.id !== obj.id),\n      }));\n    } else {\n      this.setState(\n        {\n          sdgCheckBoxes: {\n            ...this.state.sdgCheckBoxes,\n            [sdg]: !this.state.sdgCheckBoxes[sdg],\n          },\n          sdgChecks: [...this.state.sdgChecks, Object.assign({}, ...filtered)],\n        },\n        () => {\n          //\n          this.setState({\n            allIndicators: appHelpers.returnIndicators(\n              this.state.sdgCheckBoxes,\n              sdgDump\n            ),\n          });\n        }\n      );\n    }\n  };\n\n  handleSdgBoxChange = (sdgNum, event) => {\n    this.updateSvgState(sdgNum);\n  };\n\n  editProjectProfile = () => {\n    this.setState({\n      impactManagerSummary: false,\n      impactManagerFormOne: true,\n      impactManagerFormTwo: false,\n      impactManagerFormThree: false,\n    });\n  };\n  editSdgGoals = () => {\n    this.setState({\n      impactManagerSummary: false,\n      impactManagerFormOne: false,\n      impactManagerFormTwo: true,\n      impactManagerFormThree: false,\n    });\n  };\n  editProjectIndicators = () => {\n    this.setState({\n      impactManagerSummary: false,\n      impactManagerFormOne: false,\n      impactManagerFormTwo: false,\n      impactManagerFormThree: true,\n    });\n  };\n\n  handleDrop = (file) => {\n    this.setState({\n      fileForm:file[0],\n      files: file.map((file) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        })\n      ),\n    });\n  };\n  render() {\n    //this.props.project.projects\n    const { projects } = this.props.project;\n    const {\n      description,\n      code,\n      name,\n      //projectLocation,\n      programmeLocation,\n      programmePlaces,\n      image,\n      impactManagerFormOne,\n      impactManagerFormTwo,\n      impactManagerFormThree,\n      impactManagerSummary,\n      sdgCheckBoxes,\n      indicators,\n      indicatorCheckBoxes,\n      allIndicators,\n      formOneErrors,\n      formTwoErrors,\n      sdgDump,\n      sdgChecks,\n      createBtn,\n      creating\n    } = this.state;\n    return (\n      <Aux>\n        <div>\n          <div\n            className=\"site-layout-background\"\n            style={{ padding: 24, minHeight: 360 }}\n          >\n            {\" \"}\n            <div>\n              {/* Page One */}\n              {impactManagerFormOne && (\n                <Card>\n                  <Meta\n                    title={CardTitleForm1}\n                    description=\"Design your own impact profile based on your programme priorities and needs\"\n                  />\n                  <Divider />\n                  <ImpactManagerForm1\n                    description={description}\n                    name={name}\n                    code={code}\n                    image={image}\n                    programmePlaces={programmePlaces}\n                    programmeLocation={programmeLocation}\n                    files={this.state.files}\n                    handleDrop={this.handleDrop}\n                    // projectLocation={projectLocation}\n                    handleInputChange={this.handleInputChange}\n                    handleSelectChange={this.handleSelectChange}\n                    handleBannerChange={this.handleBannerChange}\n                    normFile={this.normFile}\n                    formOneErrors={formOneErrors}\n                    // locationsEnum={locationsEnum}\n                    address={this.state.address}\n                    handleChangePlace={this.handleChangePlace}\n                    handleSelectPlace={this.handleSelectPlace}\n                  />\n                  <br />\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    onClick={this.openImageManagerFormTwo}\n                    style={{\n                      backgroundColor: \"#53D1BE\",\n                      color: \"white\",\n                      borderRadius: \"2rem\",\n                      textTransform: \"none\",\n                      boxShadow: \"none\",\n                      float: \"right\",\n                    }}\n                  >\n                    Save & Continue\n                  </Button>\n                </Card>\n              )}\n              {/* Page Two */}\n              {impactManagerFormTwo && (\n                <Card title={CardTitleForm2}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n                    {\" \"}\n                  </div>\n                  <div\n                    style={{\n                      backgroundColor: \"#53d1be1a\",\n                      paddingLeft: \".5rem\",\n                      paddingBottom: \".5rem\",\n                      paddingTop: \".5rem\",\n                    }}\n                  >\n                    <p\n                      style={{\n                        fontSize: \"small\",\n                        marginBottom: \"0rem\",\n                      }}\n                    >\n                      First, select the Sustainable Development Goals (SDGs).\n                    </p>\n                    <p\n                      style={{\n                        fontSize: \"small\",\n                        marginBottom: \"0rem\",\n                      }}\n                    >\n                      Next, further specify preferred Indicators that best match\n                      your project goals.\n                    </p>\n                    <p\n                      style={{\n                        fontSize: \"small\",\n                        marginBottom: \"0rem\",\n                      }}\n                    >\n                      Now your priorities are complete. Click Save & View\n                      Questions.\n                    </p>\n                  </div>\n                  <ImpactManagerForm2\n                    handleInputChange={this.handleInputChange}\n                    handleSdgBoxChange={this.handleSdgBoxChange}\n                    sdgCheckBoxes={sdgCheckBoxes}\n                    formTwoErrors={formTwoErrors}\n                    sdgDump={sdgDump}\n                    {...this.props}\n                  />\n\n                  <br />\n\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    onClick={this.goBack}\n                    style={{\n                      backgroundColor: \"white\",\n                      color: \"#53D1BE\",\n                      borderRadius: \"2rem\",\n                      textTransform: \"none\",\n                      boxShadow: \"none\",\n                      borderColor: \"#53D1BE\",\n                    }}\n                  >\n                    <ArrowLeftOutlined />\n                    {\"  \"}Back\n                  </Button>\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.openImageManagerFormThree}\n                    style={{\n                      backgroundColor: \"#53D1BE\",\n                      color: \"white\",\n                      borderRadius: \"2rem\",\n                      textTransform: \"none\",\n                      boxShadow: \"none\",\n                      float: \"right\",\n                    }}\n                  >\n                    Save & Continue\n                  </Button>\n                </Card>\n              )}\n              {impactManagerFormThree && (\n                <Card title={CardTitleForm3}>\n                  <ImpactManagerForm3\n                    handleCheckboxChange={this.handleCheckboxChange}\n                    sdgCheckBoxes={sdgCheckBoxes}\n                    indicators={indicators}\n                    indicatorCheckBoxes={indicatorCheckBoxes}\n                    allIndicators={allIndicators}\n                    sdgDump={sdgDump}\n                    sdgChecks={sdgChecks}\n                  />\n\n                  <br />\n\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    onClick={this.goBackTwo}\n                    style={{\n                      backgroundColor: \"white\",\n                      color: \"#53D1BE\",\n                      borderRadius: \"2rem\",\n                      textTransform: \"none\",\n                      boxShadow: \"none\",\n                      borderColor: \"#53D1BE\",\n                    }}\n                  >\n                    <ArrowLeftOutlined />\n                    {\"  \"}Back\n                  </Button>\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.openImpactManagerSummary}\n                    style={{\n                      backgroundColor: \"#53D1BE\",\n                      color: \"white\",\n                      borderRadius: \"2rem\",\n                      textTransform: \"none\",\n                      boxShadow: \"none\",\n                      float: \"right\",\n                    }}\n                  >\n                    Save & View Answers\n                  </Button>\n\n                  {this.state.alert}\n                </Card>\n              )}\n\n              {impactManagerSummary && (\n                <div>\n                  <ImpactManagerSummary\n                    {...this.state}\n                    {...this.props}\n                    editProjectProfileCallback={this.editProjectProfile}\n                    editSdgGoalsCallback={this.editSdgGoals}\n                    indicatorCheckBoxes={indicatorCheckBoxes}\n                    editProjectIndicatorsCallback={this.editProjectIndicators}\n                  />\n\n                  <br />\n\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={this.cancelProject}\n                    style={{\n                      backgroundColor: \"white\",\n                      color: \"red\",\n                      borderRadius: \"2rem\",\n                      textTransform: \"none\",\n                      boxShadow: \"none\",\n                      borderColor: \"#53D1BE\",\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                  {this.state.alert}\n\n                  <CustomButton \n                  onClick={this.createProject}\n                  content={\n                    createBtn\n                  }\n                  loading={creating}\n                  />\n                  \n                  {this.state.alert}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </Aux>\n    );\n  }\n}\n\n//this.props.project.projects\n\nconst mapStateToProps = (state) => ({\n  project: state.projects,\n  auth: state.auth,\n});\n\nconst WrappedContainer = GoogleApiWrapper({\n  apiKey: \"AIzaSyB5vf0DbG-X2_Qdya9IPHl1ZbhPdn276gQ\",\n})(ImpactManager);\n\nexport default connect(mapStateToProps, { createProject })(WrappedContainer);\n","/home/mrayor/Documents/code/trail-web/src/src/reducers/index.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/ActionCard/index.js",["412","413","414","415","416","417"],"import React, { Component } from \"react\";\nimport { Row, Col, Card, Result } from \"antd\";\nimport \"./index.css\";\nimport { connect } from \"react-redux\";\n\nexport class ActionCard extends Component {\n  renderObjects = () => {\n    const { projects, indicator } = this.props.project;\n    const dataArray = [];\n    let value = 0;\n    const json = projects.map((project) => (\n      <>\n        {\" \"}\n        {Object.entries(project.indicatorCheckBoxes, value).map(\n          ([key, val]) => (\n            <p className={\"projectParagraph\"} key={key}>\n              {\" \"}\n              {val}\n              {value++}\n            </p>\n          )\n        )}\n      </>\n    ));\n    return value;\n  };\n\n  render() {\n    const { projects, awarded, disbursed } = this.props.project;\n\n    return (\n      <div>\n        <Col span={24}>\n          <Card className={\"actionCard\"}>\n            <Row>\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\n                <span className={\"actionItemStyle\"}>Programmes</span>\n                <p className={\"actionItemParagraph\"}>\n                  {projects.length == 0 ? \"0\" : projects.length}\n                </p>\n              </Col>\n\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\n                <span className={\"actionItemStyle\"}>Impact Targets (SDG)</span>\n                <p className={\"actionItemParagraph\"}>\n                  {\" \"}\n                  {this.renderObjects().length == 0\n                    ? \"0\"\n                    : this.renderObjects()}\n                </p>\n              </Col>\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\n                <span className={\"actionItemStyle\"}>Amount Awarded</span>\n                <p className={\"actionItemParagraph\"}>\n                  {awarded == null ? \"-\" : awarded}\n                </p>\n              </Col>\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\n                <span className={\"actionItemStyle\"}>Amount Disbursed</span>\n                <p className={\"actionItemParagraph\"}>\n                  {disbursed == null ? \"-\" : disbursed}\n                </p>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  project: state.projects,\n});\n\nexport default connect(mapStateToProps, {})(ActionCard);\n","/home/mrayor/Documents/code/trail-web/src/src/components/PerformanceIndicators/index.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/FundingGraph/index.js",["418","419","420"],"import React, { Component } from \"react\";\nimport { Card, Skeleton } from \"antd\";\nimport \"./index.css\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport { data } from \"./data\";\n\nexport class FundingGraph extends Component {\n  render() {\n    return (\n      <div className=\"fundingTab\">\n        <Card title={\"Funding Status\"} >\n          <Skeleton active /> \n          {/* <Line\n            data={data}\n            options={{\n              legend: {\n                display: true,\n                position: \"bottom\",\n              },\n            }}\n          /> */}\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default FundingGraph;\n","/home/mrayor/Documents/code/trail-web/src/src/components/DoughnutChart/index.js",["421","422","423","424","425","426","427","428"],"import React, { Component } from \"react\";\nimport { Card, Skeleton } from \"antd\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport \"./index.css\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n\nexport class DoughnutChart extends Component {\n  renderObjects = () => {\n    const { projects, indicator } = this.props.project;\n    const dataArray = [];\n    const json = projects.map((project) => (\n      <>\n        {\" \"}\n        {Object.entries(project.indicatorCheckBoxes, dataArray).map(\n          ([key, val]) => (\n            <p className={\"projectParagraph\"} key={key}>\n              {val}\n              {dataArray.push(val)}\n            </p>\n          )\n        )}\n      </>\n    ));\n    var arr = dataArray;\n    arr = _.uniq(arr);\n    return arr;\n  };\n\n  renderOccurence = () => {\n    const { projects, indicator } = this.props.project;\n    const dataArray = [];\n    let countObj = {};\n    const json = projects.map((project) => (\n      <>\n        {\" \"}\n        {Object.entries(project.indicatorCheckBoxes, dataArray).map(\n          ([key, val]) => (\n            <p className={\"projectParagraph\"} key={key}>\n              {val}\n              {dataArray.push(val)}\n            </p>\n          )\n        )}\n      </>\n    ));\n    const countOccurrences = (arr) =>\n      arr.reduce((prev, curr) => ((prev[curr] = ++prev[curr] || 1), prev), {});\n\n    const counts = countOccurrences(dataArray);\n\n    return Object.values(counts);\n  };\n\n  colorArray = [\n    \"#4DB380\",\n    \"#FF4D4D\",\n    \"#99E6E6\",\n    \"#6666FF\",\n    \"#FF6633\",\n    \"#FFB399\",\n    \"#FF33FF\",\n    \"#FFFF99\",\n    \"#00B3E6\",\n    \"#E6B333\",\n    \"#3366E6\",\n    \"#999966\",\n    \"#99FF99\",\n    \"#B34D4D\",\n    \"#80B300\",\n    \"#809900\",\n    \"#E6B3B3\",\n    \"#6680B3\",\n    \"#66991A\",\n    \"#FF99E6\",\n    \"#CCFF1A\",\n    \"#FF1A66\",\n    \"#E6331A\",\n    \"#33FFCC\",\n    \"#66994D\",\n    \"#B366CC\",\n    \"#4D8000\",\n    \"#B33300\",\n    \"#CC80CC\",\n    \"#66664D\",\n    \"#991AFF\",\n    \"#E666FF\",\n    \"#4DB3FF\",\n    \"#1AB399\",\n    \"#E666B3\",\n    \"#33991A\",\n    \"#CC9999\",\n    \"#B3B31A\",\n    \"#00E680\",\n    \"#4D8066\",\n    \"#809980\",\n    \"#E6FF80\",\n    \"#1AFF33\",\n    \"#999933\",\n    \"#FF3380\",\n    \"#CCCC00\",\n    \"#66E64D\",\n    \"#4D80CC\",\n    \"#9900B3\",\n    \"#E64D66\",\n    \"#4DB380\",\n    \"#FF4D4D\",\n    \"#99E6E6\",\n    \"#6666FF\",\n  ];\n  data = {\n    labels: this.renderObjects(),\n    datasets: [\n      {\n        label: \"SDGs\",\n        backgroundColor: this.colorArray,\n        hoverBackgroundColor: [\n          \"#A21942\",\n          \"#DDA63A\",\n          \"#E5243B\",\n          \"#C5192D\",\n          \"#33991A\",\n          \"#CC9999\",\n          \"#B3B31A\",\n          \"#00E680\",\n        ],\n        data: this.renderOccurence(),\n      },\n    ],\n  };\n\n  render() {\n    const { indicator } = this.props.project;\n    \n    return (\n      <div>\n        <Card title={\"Impact Summary\"} className={\"doughnutCard\"}>\n          {this.renderOccurence().length == 0 ? (\n            <Skeleton active />\n          ) : (\n            <Doughnut\n              data={this.data}\n              width={100}\n              height={100}\n              options={{\n                legend: {\n                  display: true,\n                  position: \"bottom\",\n                },\n              }}\n            />\n          )}\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  project: state.projects,\n});\n\nexport default connect(mapStateToProps, {})(DoughnutChart);\n","/home/mrayor/Documents/code/trail-web/src/src/components/LoginForm/index.js",["429","430","431","432","433","434","435"],"import React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport { Form, Input, Button, Row, Col, Card, Checkbox, Tabs } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport LoginImg from \"../../assets/graphic_login.svg\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { setAlert } from \"../../actions/alertActions\";\nimport { login, clearErrors } from \"../../actions/authAuctions\";\nimport { Redirect } from \"react-router\";\nimport AlertInfo from \"../Alert/index\";\n\nconst LoginForm = (\n  { setAlert, error, login, isAuthenticated, clearErrors, auth },\n  props\n) => {\n  useEffect(() => {\n    if (error) {\n      setAlert(error.data.message, \"error\");\n      clearErrors();\n    } //eslint-disable-next-line\n  }, [error, isAuthenticated, props.history]);\n\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const onFinish = async () => {\n    if (email === \"\") {\n      setAlert(\"Please enter all fields\", \"error\");\n    } else if (password === \"\") {\n      setAlert(\"Please enter all fields\", \"error\");\n    } else {\n      login(formData);\n    }\n  };\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  return (\n    <div>\n      <div className=\"loginAltBg\" style={{ backgroundColor: \"#064E89\" }}>\n        <Row>\n          <Col xs={{ span: 0 }} lg={{ span: 10 }} className=\"login_container\">\n            <div className=\"left_container\">\n              <div>\n                {\" \"}\n                <h3\n                  className=\"loginH3\"\n                  style={{ color: \"#064E89\", textAlign: \"left\" }}\n                >\n                  Track your objectives using Trails.\n                </h3>\n                <p className=\"loginP\">\n                  Access to the most powerfull tool in the youth and agor\n                  sector.\n                </p>\n              </div>\n              <img src={LoginImg} width=\"350px\" className=\"loginImg\" />\n            </div>\n          </Col>\n          <Col xs={{ span: 20 }} lg={{ span: 14 }} className=\"logins_container\">\n            <div className=\"right_container\">\n              <div className=\"logo\"></div>\n              <div className=\"cardWrap\">\n                <div style={{ marginBottom: \"30px\" }}>\n                  <Link to=\"/\">\n                    <span\n                      style={{\n                        fontSize: \"16px\",\n                        fontWeight: \"900\",\n                        color: \"#fff\",\n                        paddingBottom: \"10px\",\n                        marginRight: \"20px\",\n                        borderBottom: \"2px solid white\",\n                        marginBottom: \"30px\",\n                      }}\n                    >\n                      Login\n                    </span>\n                  </Link>\n                  <Link to=\"/create\">\n                    <span\n                      style={{\n                        fontSize: \"15px\",\n                        fontWeight: \"400\",\n                        color: \"#5183AD\",\n                        paddingBottom: \"10px\",\n                        marginRight: \"20px\",\n                        borderBottom: \"2px solid #5183AD\",\n                        marginBottom: \"30px\",\n                      }}\n                    >\n                      Register\n                    </span>\n                  </Link>\n                </div>\n                <div>\n                  <AlertInfo />\n                  <br />\n                  <Form\n                    name=\"normal_login\"\n                    className=\"login-form\"\n                    initialValues={{ remember: true }}\n                    onFinish={onFinish}\n                  >\n                    <Form.Item\n                      name=\"email\"\n                      rules={[\n                        { required: true, message: \"Confirm your Input\" },\n                      ]}\n                      style={{ marginBottom: \"15px\" }}\n                    >\n                      <Input\n                        style={{\n                          height: \"40px\",\n                          borderRadius: \"7px\",\n                          fontSize: \"0.9rem\",\n                          border: \"1px solid rgba(10,46,101,.1)\",\n                        }}\n                        placeholder=\"E-mail Address\"\n                        type=\"email\"\n                        name=\"email\"\n                        value={email}\n                        onChange={onChange}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      name=\"password\"\n                      rules={[\n                        { required: true, message: \"Confirm your Input\" },\n                      ]}\n                    >\n                      <Input.Password\n                        style={{\n                          height: \"40px\",\n                          borderRadius: \"7px\",\n                          fontSize: \"0.9rem\",\n                          border: \"1px solid rgba(10,46,101,.1)\",\n                        }}\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={onChange}\n                      />\n                    </Form.Item>\n                    <Row>\n                      <Col xs={{ span: 12 }} lg={{ span: 6 }}>\n                        {\" \"}\n                        <Form.Item>\n                          <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            className=\"loginBtn\"\n                          >\n                            Login\n                          </Button>\n                        </Form.Item>\n                      </Col>\n                      <Col xs={{ span: 12 }} lg={{ span: 12 }}>\n                        {\" \"}\n                        <Link to=\"/\">\n                          <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            className=\"forgetBtn\"\n                          >\n                            Forgot Password ?\n                          </Button>\n                        </Link>\n                      </Col>\n                    </Row>\n                  </Form>\n                </div>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nconst textLogin = {\n  textAlign: \"center\",\n  marginBottom: 10,\n  paddingBottom: 10,\n};\n\nLoginForm.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  login: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  error: state.auth.error,\n  isAuthenticated: state.auth.isAuthenticated,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { setAlert, login, clearErrors })(\n  LoginForm\n);\n","/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/menu/index.js",[],"/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/footer/index.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/IndicatorsCard/index.js",["436"],"import React, { Component } from \"react\";\nimport { Col, Row, Card } from \"antd\";\nimport \"./index.css\";\nimport CustomCircularProgress from \"../Loader/CustomCircularProgress\";\n\n\nconst IndicatorsCard = ({loading, sdgCount, indicatorCount, totalBeneficiaries, awardedCount, }) => {\n\n  return (\n    <div>\n      <div>\n        <Col span={24}>\n          <Card className={\"cardStyle\"}>\n            <Row>\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\n                <span className={\"spanStyle\"}>No of SDGs</span>\n               { <p className={\"paragraphStyle\"}>{ loading ?<CustomCircularProgress  size={25}/>: sdgCount}</p>}\n              </Col>\n\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\n                <span className={\"spanStyle\"}>Indicators</span>\n                { <p className={\"paragraphStyle\"}>{ loading ?<CustomCircularProgress  size={25}/>: indicatorCount}</p>}\n              </Col>\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\n                <span className={\"spanStyle\"}>Total Beneficiaries</span>\n                { <p className={\"paragraphStyle\"}>{ loading ?<CustomCircularProgress  size={25}/>: totalBeneficiaries}</p>}\n              </Col>\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\n                <span className={\"spanStyle\"}>Awarded</span>\n                { <p className={\"paragraphStyle\"}>{ loading ?<CustomCircularProgress  size={25}/>: awardedCount}</p>}\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n      </div>\n    </div>\n  );\n}\n\nexport default IndicatorsCard;\n","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactMap/index.js",["437","438","439"],"import React, { Component } from \"react\";\nimport { Card, Skeleton } from \"antd\";\nimport \"./index.css\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport { connect } from \"react-redux\";\n\nexport class ImpactMap extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  displayMarkers = () => {\n    return this.props.project.projects.map((project) => {\n      return (\n        <Marker\n          key={project.mapCenter.lng}\n          id={project.mapCenter.lng}\n          position={{\n            lat: project.mapCenter.lat,\n            lng: project.mapCenter.lng,\n          }}\n          onClick={() => console.log(`You clicked me! ${project}`)}\n        />\n      );\n    });\n  };\n\n  render() {\n    {\n      console.log(this.props.google);\n    }\n    return (\n      <div className=\"impactT\">\n        <h4>Impact Map</h4>\n        {this.props.google == undefined ? (\n          <Card>\n            <Skeleton active />\n            <br/>\n          </Card>\n        ) : (\n          <div className=\"map-container\">\n            <Map\n              google={this.props.google}\n              zoom={8}\n              style={mapStyles}\n              initialCenter={{\n                lat: this.props.project.projects[0].mapCenter.lat,\n                lng: this.props.project.projects[0].mapCenter.lng,\n              }}\n            >\n              {this.displayMarkers()}\n            </Map>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStyles = {\n  width: \"100%\",\n  height: \"100%\",\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.projects,\n});\n\nconst WrappedContainer = GoogleApiWrapper({\n  apiKey: \"AIzaSyB5vf0DbG-X2_Qdya9IPHl1ZbhPdn276gQ\",\n})(ImpactMap);\n\nexport default connect(mapStateToProps, {})(WrappedContainer);\n","/home/mrayor/Documents/code/trail-web/src/src/actions/alertActions.js",[],"/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/sidebar/index.js",["440","441"],"import React, { Component } from \"react\";\n\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  FileOutlined,\n  HighlightOutlined,\n  ExportOutlined,\n} from \"@ant-design/icons\";\nimport { Layout, Menu } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport \"./index.css\";\nimport LogoTrail from \"../../../assets/Trail2.svg\";\n\nconst { Sider } = Layout;\n\nexport class SideBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: false,\n    };\n  }\n  onCollapse = (collapsed) => {\n    this.setState({ collapsed: collapsed });\n  };\n  render() {\n    return (\n      <Sider\n        collapsed={this.state.collapsed}\n        onCollapse={this.onCollapse}\n        style={{\n          border: \"none\",\n          backgroundColor: \"#001529\",\n          position: \"fixed\",\n          zIndex: \"999\",\n          height: \"100vh\",\n        }}\n      >\n        <Menu theme=\"dark\" mode=\"inline\" style={{ backgroundColor: \"#001529\" }}>\n          <div style={{ textAlign: \"center\", marginBottom: \"30px\" }}>\n            <img src={LogoTrail} className={\"logoImg\"} />\n          </div>\n          <Menu.Item to=\"/dashboard\" key=\"1\" icon={<PieChartOutlined />}>\n            <Link to=\"/dashboard\">Dashboard</Link>\n          </Menu.Item>\n          <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\n            <Link to=\"/dashboard/projects\">Programme Report</Link>\n          </Menu.Item>\n          <Menu.Item key=\"3\" icon={<HighlightOutlined />}>\n            <Link to=\"/dashboard/manager\">Programme Manager</Link>\n          </Menu.Item>\n          <Menu.Item key=\"4\" icon={<FileOutlined />}>\n            <Link to=\"/dashboard/form\"></Link> Forms Management\n          </Menu.Item>\n        </Menu>\n      </Sider>\n    );\n  }\n}\n\nexport default SideBar;\n","/home/mrayor/Documents/code/trail-web/src/src/actions/formActions.js",["442"],"/home/mrayor/Documents/code/trail-web/src/src/components/Alert/index.js",[],"/home/mrayor/Documents/code/trail-web/src/src/constants/Types.js",[],"/home/mrayor/Documents/code/trail-web/src/src/appHelpers/constants.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/FormIO/constants.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/FormBuilder.js/constants.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/CustomButton/CustomButton.js",[],"/home/mrayor/Documents/code/trail-web/src/src/reducers/formReducer.js",["443"],"/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManagerSummary.jsx",["444","445","446","447","448","449"],"import React from \"react\";\nimport Aux from \"../hocs/_Aux\";\nimport { Button } from \"@material-ui/core\";\nimport { withStore } from \"@spyna/react-store\";\nimport { Row, Col, Card } from \"antd\";\n//import { sdgDump } from \"./sdgDump\";\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\nimport SvgCardView from \"../SvgCard/SvgCardView\";\nimport IndicatorView from \"../Indicators/IndicatorView\";\nimport { EditOutlined } from \"@ant-design/icons\";\n\nclass ImpactManagerSummary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name,\n      code: this.props.code,\n      projectLocation: this.props.projectLocation,\n      image: this.props.image,\n      programmeLocation: this.props.programmeLocation,\n      description: this.props.description,\n      sdgCheckBoxes: this.props.sdgCheckBoxes,\n      programmePlaces: this.props.programmePlaces,\n      indicators: this.props.indicators,\n      allImpacts: this.props.allImpacts,\n      sdgDump: this.props.sdgDump,\n    };\n  }\n\n  componentDidMount() {}\n\n  editProjectProfile = () => {\n    this.props.editProjectProfileCallback();\n  };\n  editSdgGoals = () => {\n    this.props.editSdgGoalsCallback();\n  };\n\n  editProjectIndicators = () => {\n    this.props.editProjectIndicatorsCallback();\n  };\n\n  renderSvgCards = () => {\n    const filtered = appHelpers.returnSelectedSdgs(\n      this.state.sdgCheckBoxes,\n      this.state.sdgDump\n    );\n    const allSdgs = filtered.map((item, index) => {\n      return <SvgCardView key={index} path={item.image} width=\"10%\" />;\n    });\n\n    return allSdgs;\n  };\n\n  renderIndicators = () => {\n    const indicators = appHelpers.indicatorSummary(this.props.sdgChecks);\n    const allIndicators = indicators.map((item, index) => {\n      return <IndicatorView key={index} indicator={item.description} />;\n    });\n    return allIndicators;\n\n    // this.setState({ allImpacts: allIndicators });\n  };\n\n  render() {\n    const {\n      description,\n      code,\n      name,\n      programmeLocation,\n      programmePlaces,\n      //projectLocation,\n      image,\n      sdgChecks,\n      sdgDump,\n    } = this.state;\n    \n    return (\n      <Aux>\n        <Row>\n          <Col md={24}>\n            <div>\n              <Card\n                title={\"Programme Profile\"}\n                headStyle={{\n                  fontSize:\"20px\"\n                }}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                 }}\n              >\n                <Button\n                  size=\"large\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={this.editProjectProfile}\n                  style={{\n                    backgroundColor: \"white\",\n                    color: \"#53D1BE\",\n                    borderRadius: \"2rem\",\n                    textTransform: \"none\",\n                    boxShadow: \"none\",\n                    borderColor: \"#53D1BE\",\n                  }}\n                >\n                  <EditOutlined />\n                  Edit\n                </Button>\n              </Card>\n              <Card>\n                <Row style={{ display: \"flex\" }}>\n                  <Col span={\"12\"}>\n                    <h3>Programme Name</h3>\n                    <h4 style={{ fontWeight: \"normal\", color: \"grey\" }}>\n                      {name}\n                    </h4>\n                  </Col>\n                  <Col span={12}>\n                    <h3>Project Code</h3>\n                    <h4 style={{ fontWeight: \"normal\", color: \"grey\" }}>\n                      {code}\n                    </h4>\n                  </Col>\n                </Row>\n                <br />\n                <Row>\n                  <Col span={12}>\n                    <h3>Programme Description</h3>\n                    <h4 style={{ fontWeight: \"normal\", color: \"grey\" }}>\n                      {description}\n                    </h4>\n                  </Col>\n                </Row>\n                <br />\n                <div>\n                  {/* <h6>Programme Location</h6> */}\n                  <h6 style={{ fontWeight: \"normal\", color: \"grey\" }}>\n                    {/* {programmeLocation} */}\n                    {/* {programmePlaces} */}\n                  </h6>\n                </div>\n              </Card>\n            </div>\n            <br />\n            <div>\n              <Card\n                title={\"Sustainable Development Goals\"}\n                headStyle={{\n                  fontSize:\"20px\"\n                }}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Button\n                  size=\"large\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={this.editSdgGoals}\n                  style={{\n                    backgroundColor: \"white\",\n                    color: \"#53D1BE\",\n                    borderRadius: \"2rem\",\n                    textTransform: \"none\",\n                    boxShadow: \"none\",\n                    borderColor: \"#53D1BE\",\n                  }}\n                >\n                  <EditOutlined />\n                  Edit\n                </Button>\n              </Card>\n              <Card>\n                <Row>\n                  <Col span={\"24\"}>\n                    <div style={{ paddingTop: 0 }}>{this.renderSvgCards()}</div>\n                  </Col>\n                </Row>\n              </Card>\n            </div>\n            <br />\n            <div>\n              <Card\n                title={\"Programme Indicators\"}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n                headStyle={{\n                  fontSize:\"20px\"\n                }}\n              >\n                <Button\n                  size=\"large\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={this.editProjectIndicators}\n                  style={{\n                    backgroundColor: \"white\",\n                    color: \"#53D1BE\",\n                    borderRadius: \"2rem\",\n                    textTransform: \"none\",\n                    boxShadow: \"none\",\n                    borderColor: \"#53D1BE\",\n                  }}\n                >\n                  <EditOutlined />\n                  Edit\n                </Button>\n              </Card>\n              <Card style={{ paddingTop: 0 }}>\n                <h6 style={{ fontWeight: \"normal\", color: \"grey\" }}>\n                  {this.renderIndicators()}\n                </h6>\n              </Card>\n            </div>\n          </Col>\n        </Row>\n      </Aux>\n    );\n  }\n}\n\nexport default ImpactManagerSummary;\n","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManagerForm3.jsx",["450","451","452","453","454","455","456","457","458","459","460","461"],"import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Grid, Checkbox, FormControlLabel } from \"@material-ui/core\";\n//import { sdgDump } from \"./sdgDump\";\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Row, Col, Select } from \"antd\";\nimport SvgCard from \"../SvgCard/SvgCard\";\nimport { DataGrid } from \"@material-ui/data-grid\";\n\nconst { Option } = Select;\nconst styles = (theme) => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginLeft: theme.spacing(),\n    marginRight: theme.spacing(),\n    width: \"100%\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n    display: \"block\",\n    margin: \"50px\",\n  },\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  formRoot: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  formControl: {\n    margin: theme.spacing(),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  searchButton: {\n    backgroundColor: \" #66bb6a\",\n  },\n  select: {\n    marginTop: \"0px\",\n    width: \"100%\",\n  },\n  button: {\n    margin: theme.spacing(),\n    marginTop: \"16px\",\n    color: \"#ffffff\",\n    backgroundColor: theme.palette.secondary.main,\n    paddingTop: \"15px\",\n    paddingBottom: \"15px\",\n    width: \"100%\",\n  },\n});\n\nconst renderIndicators = (indicators, props, sdgIndex) => {\n  const {sdgDump} = props\n  const { allIndicators } = props;\n  const allUIIndicators = indicators.map((item, index) => {\n    return (\n      <FormControlLabel\n        key={index}\n        style={{ width: \"100%\", }}\n        control={\n          <Checkbox\n            checked={item.status}\n            onChange={(e) =>\n              props.handleCheckboxChange(\n                item.description,\n                e,\n                index,\n                sdgIndex,\n                item.id\n              )\n            }\n            value={item.description}\n          />\n        }\n        label={item.description}\n      />\n    );\n  });\n  return allUIIndicators;\n};\n\nconst returnSdgPanels = (sdgChecks, classes, props, sdgDump) => {\n  const { allIndicators } = props;\n  const sdgPanels = sdgChecks.map((opt, index) => {\n    return (\n      <ExpansionPanel key={index}>\n        <Grid container spacing={1}>\n          <ExpansionPanelSummary\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <SvgCard\n              key={index}\n              path={opt.image}\n              alt={opt.image}\n              height={150}\n              opacity={\"1\"}\n              style={{ height: \"10px\" }}\n            />\n            <Grid item xs={3} sm={3}>\n              <Typography className={classes.heading}>{opt.description}</Typography>\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <div\n                style={{\n                  overflowX: \"auto\",\n                  width: \"100%\",\n                  height: \"200px\",\n                }}\n                className=\"impact\"\n              >\n                <form\n                  className={classes.container}\n                  style={{ width: \"100%\" }}\n                  noValidate\n                >\n                  {renderIndicators(opt.indicators, props, opt.id)}\n                </form>\n              </div>\n            </Grid>\n          </ExpansionPanelSummary>\n        </Grid>\n      </ExpansionPanel>\n    );\n  });\n\n  return sdgPanels;\n};\n\nfunction ImpactManagerForm3(props) {\n  const { classes } = props;\n  const {sdgDump} = props\n  const { allIndicators, sdgChecks } = props;\n\n  return (\n    <div className={`flex items-center ${classes.root}`}>\n      <Grid container spacing={8}>\n        {/* <Grid item sm={4} md={12}>\n          <form className={classes.container} noValidate>\n            {renderIndicators(allIndicators, props)}\n          </form>\n        </Grid> */}\n\n        <Grid item sm={4} md={12}>\n          <div className={classes.root}>\n            {returnSdgPanels(sdgChecks, classes, props, sdgDump)}\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default withStyles(styles, { withTheme: true })(ImpactManagerForm3);\n","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManagerForm2.jsx",["462","463","464","465","466","467","468","469","470","471"],"import React, { useState, useEffect } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { withStore } from \"@spyna/react-store\";\nimport {\n  TextField,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  MenuItem,\n} from \"@material-ui/core\";\n//import { sdgDump } from \"./sdgDump\";\nimport SvgCard from \"../SvgCard/SvgCard\";\nimport axios from \"axios\";\nconst styles = (theme) => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginLeft: theme.spacing(),\n    marginRight: theme.spacing(),\n    width: \"100%\",\n  },\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  formRoot: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  formControl: {\n    margin: theme.spacing(),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  searchButton: {\n    backgroundColor: \" #66bb6a\",\n  },\n  select: {\n    marginTop: \"0px\",\n    width: \"100%\",\n  },\n  button: {\n    margin: theme.spacing(),\n    marginTop: \"16px\",\n    color: \"#ffffff\",\n    backgroundColor: theme.palette.secondary.main,\n    paddingTop: \"15px\",\n    paddingBottom: \"15px\",\n    width: \"100%\",\n  },\n});\n\n\n\nconst ImpactManagerForm2 = (props) => {\n  const [sdgDumping, setSdgDumping] = useState(\"\");\n\n\n  console.log(\"props in form 2\",props)\n  // useEffect(() => {\n  //   async function fetchSdgDump() {\n  //    const config = {\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         accessToken: props.auth.data.accessToken,\n  //       },\n  //     };\n  //     let result = await axios.get(\n  //       \"http://trail-api.test.vggdev.com/sdgs/all/indicators\",\n  //       config\n  //     );\n  //     setSdgDumping(result.data.data);\n  //   }\n\n  //   fetchSdgDump();\n  // }, []); \n  \n  const { classes } = props;\n\n  const setOpacity = (sdgCheckBoxes, sdgNum) => {\n    let opacity = \"\";\n    if (sdgCheckBoxes[sdgNum] === true) {\n      opacity = \"1\";\n    } else {\n      opacity = \"0.3\";\n    }\n    return opacity;\n  };\n\n  const {\n    handleInputChange,\n    handleSdgBoxChange,\n    sdgCheckBoxes,\n    formTwoErrors,\n    sdgDump,\n  } = props;\n\n  const renderSdgs = () => {\n    const allSdgs =props.sdgDump&& props.sdgDump.map((item, index) => {\n      return (\n        <SvgCard\n          key={index}\n          path={item.image}\n          width={120}\n          height={120}\n          sdgCheckBoxes={sdgCheckBoxes}\n          opacity={setOpacity(sdgCheckBoxes, item.id)}\n          onClick={handleSdgBoxChange.bind(this, item.id)}\n        />\n      );\n    });\n\n    return allSdgs;\n  };\n\n  return (\n    <div className={`flex items-center ${classes.root}`}>\n      <Grid>\n        <Grid item sm={4} md={12}>\n          <p\n            style={{\n              color: formTwoErrors.svg === true ? \"red\" : \"black\",\n              marginTop: \"15px\",\n            }}\n          >\n            Which SDGs aligns with your impact priorities?\n          </p>\n\n          <Grid item sm={12} md={12}>\n            {renderSdgs(sdgDump)}\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles, { withTheme: true })(ImpactManagerForm2);\n","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManagerForm1.jsx",["472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505"],"import React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {\n  TextField,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  MenuItem,\n  FormControl,\n} from \"@material-ui/core\";\nimport { Upload, Form, Row, Col, Button } from \"antd\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport { useDropzone } from \"react-dropzone\";\nimport ImpactManagerSummary from \"./ImpactManagerSummary\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\nimport ImageUpload from \"../Upload/ImageUpload\";\nimport TopSpace from \"../Space/TopSpace\";\n\nconst { Option } = Select;\n\nconst styles = (theme) => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginLeft: 0,\n    marginRight: theme.spacing(),\n    marginTop: 0,\n    width: \"100%\",\n  },\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  formRoot: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  formControl: {\n    margin: theme.spacing(),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  searchButton: {\n    backgroundColor: \" #66bb6a\",\n  },\n  select: {\n    marginTop: \"0px\",\n    width: \"100%\",\n  },\n  button: {\n    margin: theme.spacing(),\n    marginTop: \"16px\",\n    color: \"#ffffff\",\n    backgroundColor: theme.palette.secondary.main,\n    paddingTop: \"15px\",\n    paddingBottom: \"15px\",\n    width: \"100%\",\n  },\n});\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\",\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\",\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\",\n};\n\nconst thumbsContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  marginTop: 16,\n};\n\nconst thumb = {\n  display: \"inline-flex\",\n  borderRadius: 2,\n  border: \"1px solid #eaeaea\",\n  marginBottom: 8,\n  marginRight: 8,\n  width: \"auto\",\n  height: 200,\n  padding: 4,\n  boxSizing: \"border-box\",\n};\n\nconst thumbInner = {\n  display: \"flex\",\n  minWidth: 0,\n  overflow: \"hidden\",\n};\n\nconst img = {\n  display: \"block\",\n  width: \"auto\",\n  height: \"100%\",\n};\n\nfunction ImpactManagerForm1(props) {\n  const {\n    classes,\n    description,\n    code,\n    name,\n    //projectLocation,\n    programmeLocation,\n    formOneErrors,\n    //locationsEnum,\n    image,\n    programmePlaces,\n    address,\n    handleDrop,\n    files\n  } = props;\n\n  const {\n    handleInputChange,\n    handleSelectChange,\n    handleBannerChange,\n    handleChangePlace,\n    handleSelectPlace,\n    normFile,\n  } = props;\n\n  return (\n    <div className={`flex items-center ${classes.root}`}>\n      <Row>\n        <Col span={5}>\n        <h4 className=\"m-0 p-0\"  >\n              Banner Image\n            </h4>\n           <TopSpace length={6}/>\n        <ImageUpload handleDrop={handleDrop} files={files} />\n\n        </Col>\n      </Row>\n      <TopSpace length={10}/>\n      <Row>\n\n      \n        <Col span={8}>\n          <form className={classes.container} noValidate>\n            <h4 for=\"project-name\" style={{ margin: 0 }}>\n              Programme Name\n            </h4>\n            <TextField\n              id=\"project-name\"\n              error={formOneErrors.name}\n              name={\"name\"}\n              value={name}\n              className={classes.textField}\n              margin=\"normal\"\n              variant=\"outlined\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={handleInputChange}\n            />\n          </form>\n        </Col>\n        <Col span={1}></Col>\n        <Col span={4}>\n          <form className={classes.container} noValidate>\n            <h4 for=\"project-code\" style={{ margin: 0 }}>\n              Programme Code\n            </h4>\n            <TextField\n              id=\"project-code\"\n              name={\"code\"}\n              error={formOneErrors.code}\n              value={code}\n              className={classes.textField}\n              margin=\"normal\"\n              variant=\"outlined\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={handleInputChange}\n            />\n          </form>\n        </Col>\n        <Col span={1}></Col>\n        <Col span={5}>\n          <form className={classes.container} noValidate>\n            <h4 for=\"outlined-select-currency\" style={{ margin: 0 }}>\n              Programme Location\n            </h4>\n            <FormControl fullWidth required>\n              <PlacesAutocomplete\n                className={classes.textField}\n                variant=\"outlined\"\n                value={address}\n                onChange={handleChangePlace}\n                onSelect={handleSelectPlace}\n              >\n                {({\n                  getInputProps,\n                  suggestions,\n                  getSuggestionItemProps,\n                  loading,\n                }) => (\n                  <div>\n                    <input\n                      style={{ padding: \"15px\",width:\"100%\", border:\"1px solid rgba(0, 0, 0, 0.23)\", borderRadius:\"4px\" }}\n                      {...getInputProps({\n                        placeholder: \"Search Location\",\n                        className: \"location-search-input\",\n                      })}\n                    />\n                    <div className=\"autocomplete-dropdown-container\">\n                      {loading && <div>...</div>}\n                      {suggestions.map((suggestion) => {\n                        const className = suggestion.active\n                          ? \"suggestion-item--active\"\n                          : \"suggestion-item\";\n                        // inline style for demonstration purpose\n                        const style = suggestion.active\n                          ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                          : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                        return (\n                          <div\n                            {...getSuggestionItemProps(suggestion, {\n                              className,\n                              style,\n                            })}\n                          >\n                            <span>{suggestion.description}</span>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                )}\n              </PlacesAutocomplete>\n            </FormControl> \n          </form>\n        </Col>\n        <Col span={1}></Col>\n        {/* No Longer supported */}\n        {/* <Col span={3}>\n          <form className={classes.container} noValidate>\n            <label for=\"outlined-select-currency\" style={{ margin: 0 }}>\n              Banner\n            </label>\n            <FormControl fullWidth required margin=\"normal\">\n              <Form.Item\n                name=\"upload\"\n                valuePropName=\"fileList\"\n                getValueFromEvent={normFile}\n              >\n                <Upload name=\"logo\" action=\"/\" listType=\"picture\">\n                  <Button icon={<UploadOutlined />} type=\"dashed\" size=\"large\">\n                    Click to upload\n                  </Button>\n                </Upload>\n              </Form.Item>\n            </FormControl>\n          </form>\n        </Col> */}\n      </Row>\n      \n      <Grid container spacing={3}>\n        {/* Project Name */}\n\n        {/* Project Banner */}\n        <Grid item sm={3} md={3}></Grid>\n\n        {/* Project Location */}\n        <Grid item sm={3} md={3}></Grid>\n      </Grid>\n\n      {/* Second Row */}\n\n      <Grid container spacing={8}>\n        {/* Project Description */}\n        <Grid item sm={4} md={12}>\n          <form className={classes.container} noValidate>\n            <h4 for=\"project-description\" style={{ margin: 0 }}>\n              Programme Description\n            </h4>\n            <TextField\n              id=\"project-description\"\n              name={\"description\"}\n              value={description}\n              error={formOneErrors.description}\n              multiline\n              rows={4}\n              rowsMax={6}\n              className={classes.textField}\n              margin=\"normal\"\n              variant=\"outlined\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={handleInputChange}\n            />\n          </form>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default withStyles(styles, { withTheme: true })(ImpactManagerForm1);\n\n// export default GoogleApiWrapper({\n//   apiKey: \"AIzaSyB5vf0DbG-X2_Qdya9IPHl1ZbhPdn276gQ\",\n// })(MapContainer);\n","/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/menu/RightMenu.js",["506","507"],"import React, { useEffect } from \"react\";\nimport \"./index.css\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { logout, loadUser } from \"../../../actions/authAuctions\";\nimport { Redirect } from \"react-router\";\n\nimport { Menu, Grid } from \"antd\";\nimport { Link } from \"@material-ui/core\";\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nconst { useBreakpoint } = Grid;\n\nexport const RightMenu = (\n  { logout, user, loadUser, isAuthenticated, auth },\n  props\n) => {\n  const { data } = auth;\n  useEffect(() => {\n   // loadUser();\n    //eslint-disable-next-line\n  }, []);\n\n  const onLogout = () => {\n    return <Redirect to=\"/\" />;\n  };\n\n  const { md } = useBreakpoint();\n  return (\n    <Menu mode={md ? \"horizontal\" : \"inline\"}>\n      <SubMenu key=\"sub1\" title={`${data.firstName} ${data.lastName}`}>\n        <Menu.Item key=\"setting:1\">Settings</Menu.Item>\n        <Menu.Item key=\"setting:2\">\n          <Link to=\"/\">Logout</Link>\n        </Menu.Item>\n      </SubMenu>\n    </Menu>\n  );\n};\n\nRightMenu.propTypes = {\n  logout: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout, loadUser })(RightMenu);\n","/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/menu/LeftMenu.js",["508","509"],"import \"./index.css\";\nimport React from \"react\";\nimport { Menu, Grid } from \"antd\";\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nconst { useBreakpoint } = Grid;\n\nconst LeftMenu = () => {\n  const { md } = useBreakpoint();\n  return <Menu mode={md ? \"horizontal\" : \"inline\"}></Menu>;\n};\n\nexport default LeftMenu;\n","/home/mrayor/Documents/code/trail-web/src/src/components/FundingGraph/data.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/Loader/CustomCircularProgress.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/FormPreview/index.jsx",["510"],"import React, {useEffect} from 'react'\nimport { ProgrammeSummary } from './ProgrammeSummary'\nimport {PreviewQuestions} from './PreviewQuestions'\nimport { Button, Col, Row, Skeleton, Typography } from 'antd'\nimport './styles.scss'\nimport {dummyForms} from '../FormIO/constants'\nimport { appHelpers } from '../../appHelpers/appHelpers'\nimport { getForm } from '../../actions/formActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, useParams } from 'react-router-dom'\n\nconst FormPreview = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { token } = useSelector(state => state.auth)\n    const { id } = useParams()\n    const {form,loading} = useSelector(state => state.form)\n\n    const handleSubmit = () => {\n         appHelpers.successMessageAlert(\"Form Successfully Created\", 2000)\n         history.push('/dashboard/form')\n    } \n\n    useEffect(() => {\n        dispatch(getForm(id,token))\n    },[id,dispatch,token])\n\n    if(loading) return <Skeleton />\n\n    return (\n        <section className=\"form-preview-section\" >\n            <Row gutter={[20, 20]}>\n                <Col span={24}>\n                    <Typography.Paragraph className=\"form-preview-section-link\">Generated Link: <a target=\"_blank\" rel=\"noreferrer\" href={form?.formlink}>{form?.formlink}</a></Typography.Paragraph>\n                </Col>\n            <Col span={24}>\n                <ProgrammeSummary form={form} />\n            </Col>\n             <Col span={24}>\n                <Typography.Text className=\"form-preview-section-title\">Preview Questions</Typography.Text>\n            </Col>\n             <Col span={24}>\n               <PreviewQuestions form={form} />\n            </Col>\n            <Col span={12}>\n                <Button type=\"primary\" size=\"large\" shape=\"round\" onClick={handleSubmit}>Submit</Button>\n            </Col>\n        </Row>\n        </section>\n    )\n}\n\nexport default FormPreview","/home/mrayor/Documents/code/trail-web/src/src/components/PublishedForm/index.jsx",[],"/home/mrayor/Documents/code/trail-web/src/src/components/hocs/_Aux/index.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/Space/TopSpace.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/Indicators/IndicatorView.jsx",["511"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst IndicatorView = props => {\n  return (\n      <>\n<label style={{fontSize:\"15px\"}}>{\" - \"}{props.indicator}</label>\n      </>\n  );\n};\n\nIndicatorView.defaultProps = {};\n\nIndicatorView.propTypes = {};\n\nexport default IndicatorView;\n","/home/mrayor/Documents/code/trail-web/src/src/components/SvgCard/SvgCard.jsx",[],"/home/mrayor/Documents/code/trail-web/src/src/components/Upload/ImageUpload.jsx",["512"],"import React from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport \"./style.css\";\n// for profile picture\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={}\n  }\n\n  render() {\n    const thumbsContainer = {\n      width: \"250px\",\n      height: \"250px\",\n      borderRadius: \"5%\",\n      objectFit: \"cover\",\n      objectPosition: \"center\",\n    };\n    const thumbs = this.props.files.map((file) => (\n      <img\n        src={file.preview}\n        style={thumbsContainer}\n        alt=\"profile\"\n        key={file.size}\n      />\n    ));\n    const render =\n    Object.keys(this.props.files).length !== 0 ? (\n      this.props.files.map(file => <aside>{thumbs}</aside>)\n    ) : (\n      <p className=\"hello\">+ image here to prompt users to click</p>\n    );\n    return (\n      <div className=\"App\">\n        <Dropzone\n          onDrop={this.props.handleDrop}\n          multiple={false}\n          style={{\n            width: \"10px\",\n            height: \"100px\",\n            borderRadius: \"50%\",\n            objectFit: \"cover\",\n            objectPosition: \"center\",\n            border: \" 1px dashed\",\n          }}\n          accept=\"image/*\"\n        >\n          {({ getRootProps, getInputProps }) => (\n            <>\n              <div {...getRootProps({ className: \"dropzone\" })}>\n                <input {...getInputProps()} />\n                <p>Drag'n'drop You logo, or browse</p>\n                {thumbs}\n              </div>\n            </>\n          )}\n        </Dropzone>\n        {/* <div>\n        <strong>Files:</strong>\n        <ul>\n          {this.props.files.map(fileName => (\n            <li key={fileName}>{fileName}</li>\n          ))}\n        </ul>\n      </div> */}\n      </div>\n    );\n  }\n}\n\nexport default ImageUpload;","/home/mrayor/Documents/code/trail-web/src/src/components/PublishedForm/Summary.jsx",[],"/home/mrayor/Documents/code/trail-web/src/src/components/PublishedForm/Questions.jsx",[],"/home/mrayor/Documents/code/trail-web/src/src/components/FormPreview/PreviewQuestions.jsx",[],"/home/mrayor/Documents/code/trail-web/src/src/components/FormPreview/ProgrammeSummary.jsx",[],"/home/mrayor/Documents/code/trail-web/src/src/appHelpers/Builder.jsx",[],"/home/mrayor/Documents/code/trail-web/src/src/components/Widgets/RadioInput.jsx",[],"/home/mrayor/Documents/code/trail-web/src/src/components/Widgets/ShortFreeText.jsx",["513","514","515"],"import { Typography, InputNumber, Form } from 'antd'\nimport { camelCase, isEmpty, startCase } from 'lodash'\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { buildAnswers } from '../../actions/formActions'\nimport { Layout } from './Layout'\n\nexport const ShortFreeText = ({ content }) => {\n    const dispatch = useDispatch()\n\n    const handleChange = (value) => dispatch(buildAnswers({\n        value: value?.toString(),\n        answer: value?.toString(),\n        questionId:  content?.questionid\n    }))\n\n    return (\n        <Layout isPreview={content?.isPreview} id={content?.id} question={content?.question} >\n            <Form.Item rules={[\n                      { required: true, message: \"This field is required\" },\n                    ]}>\n                <InputNumber onChange={handleChange} style={{width:'100%'}} name={camelCase(content?.key)} placeholder={content?.placeholder}  />\n            </Form.Item>\n        </Layout>\n    )\n}\n","/home/mrayor/Documents/code/trail-web/src/src/components/Widgets/Layout.jsx",[],"/home/mrayor/Documents/code/trail-web/src/src/components/SvgCard/SvgCardView.jsx",["516"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SvgCardView = props => {\n  const {width} = props;\n  return (\n    <>\n      <img href=\"svg\" src={props.path} style={{ width: `${width}`,padding:\".2rem\" }} />\n    </>\n  );\n};\n\nSvgCardView.defaultProps = {\n  path: \"/sdgs/E_SDG_PRINT-01.svg\",\n  opacity:\"1\",\n  width:\"20%\"\n};\n\nSvgCardView.propTypes = {\n  path: PropTypes.string,\n  width:PropTypes.string\n};\n\nexport default SvgCardView;\n","/home/mrayor/Documents/code/trail-web/src/src/reducers/authReducer.js",["517"],"import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  USER_LOADED,\n  AUTH_ERROR,\n  CLEAR_ERRORS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../constants/Types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  registerSuccess: false,\n  isAuthenticated: null,\n  loading: true,\n  user: {},\n  data: {},\n  programs:[]\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload,\n      };\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        registerSuccess: true,\n        loading: false,\n      };\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.data.accessToken);\n      return {\n        ...state,\n        user: action.payload.data,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n        token: action.payload.data.accessToken\n      };\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        error: action.payload,\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n    default:\n      return state;\n  }\n}\n","/home/mrayor/Documents/code/trail-web/src/src/reducers/projectReducer.js",["518","519"],"import {\n  CREATE_PROJECT,\n  GET_PROJECT,\n  TEST_DISPATCH,\n  GET_PROGRAMS,\n} from \"../constants/Types\";\n\nconst initialState = {\n  projects: [\n    {\n      name: \"Home Grown School Feeding\",\n      image:\n        \"https://tdma.info/assets/uploads/2017/12/Using_sunlight_to_clean_water_Featured_Image-1.jpg\",\n      code: \"HGSF\",\n      projectLocation: \"ng\",\n      description:\n        \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Non, sint!\",\n      sdgCheckBoxes: { 3: true, 13: true },\n      indicatorCheckBoxes: { 0: \"Good Health\", 2: \"Food Security\" },\n      location: {\n        active: true,\n        description: \"Aspen, CO, USA\",\n        formattedSuggestion: { mainText: \"Aspen\", secondaryText: \"CO, USA\" },\n        id: undefined,\n        index: 1,\n        placeId: \"ChIJfTxB93w5QIcRcvYseNxCK8E\",\n        types: (3)[(\"locality\", \"political\", \"geocode\")],\n      },\n      mapCenter: { lat: 7.3775355, lng: 3.9470396 },\n    },\n    {\n      name: \"World Reduced Inequalities\",\n      image:\n        \"https://media.pri.org/s3fs-public/styles/open_graph/public/migration/PriMigrationsDamanticWordpressAttachmentsImagesMigration/www.theworld.org/wp-content/uploads/IMG_4297.jpg?itok=iB8n0R4j\",\n      code: \"FEC\",\n      projectLocation: \"gh\",\n      description:\n        \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Non, sint!\",\n      sdgCheckBoxes: { 12: true, 8: true },\n      indicatorCheckBoxes: { 0: \"Small Agriculture\", 1: \"Financial Literacy\" },\n      location: {\n        active: true,\n        description: \"Ottawa, OT, CAD\",\n        formattedSuggestion: { mainText: \"Aspen\", secondaryText: \"CO, USA\" },\n        id: undefined,\n        index: 1,\n        placeId: \"ChIJfTxB93w5QIcRcvYseNxCK8E\",\n        types: (3)[(\"locality\", \"political\", \"geocode\")],\n      },\n      mapCenter: { lat: 6.334986, lng: 5.6037465 },\n    },\n    {\n      name: \"National Woman Rights\",\n      image:\n        \"https://politicalyouthnetwork.org/wp-content/uploads/2019/01/Womens-rights-are-human-rights.jpg\",\n      code: \"NWR\",\n      projectLocation: \"ng\",\n      description:\n        \"National lorem ipsum dolor sit amet consectetur adipisicing elit. Non, sint!\",\n      sdgCheckBoxes: { 5: true, 2: true },\n      indicatorCheckBoxes: { 0: \"Small Agriculture\", 1: \"Financial Literacy\" },\n      location: {\n        active: true,\n        description: \"Accra, GH, Ghana\",\n        formattedSuggestion: { mainText: \"Aspen\", secondaryText: \"CO, USA\" },\n        id: undefined,\n        index: 1,\n        placeId: \"ChIJfTxB93w5QIcRcvYseNxCK8E\",\n        types: (3)[(\"locality\", \"political\", \"geocode\")],\n      },\n      mapCenter: { lat: 47.3084488, lng: -122.2140121 },\n    },\n  ],\n  awarded: null,\n  disbursed: null,\n  loading: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_PROGRAMS:\n      return {\n        ...state,\n        ...action.payload,\n        loading: false,\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n      };\n    case CREATE_PROJECT:\n      return {\n        ...state,\n        ...action.payload,\n        projects: [...state.projects, action.payload],\n      };\n    default:\n      return state;\n  }\n};\n","/home/mrayor/Documents/code/trail-web/src/src/reducers/alertReducer.js",["520"],"import { SET_ALERT, REMOVE_ALERT } from \"../constants/Types\";\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state, action.payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== action.payload);\n    default:\n      return state;\n  }\n}\n",{"ruleId":"521","replacedBy":"522"},{"ruleId":"523","replacedBy":"524"},{"ruleId":"525","severity":1,"message":"526","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":14},{"ruleId":"525","severity":1,"message":"529","line":3,"column":18,"nodeType":"527","messageId":"528","endLine":3,"endColumn":21},{"ruleId":"525","severity":1,"message":"530","line":3,"column":23,"nodeType":"527","messageId":"528","endLine":3,"endColumn":26},{"ruleId":"525","severity":1,"message":"529","line":2,"column":10,"nodeType":"527","messageId":"528","endLine":2,"endColumn":13},{"ruleId":"525","severity":1,"message":"530","line":2,"column":15,"nodeType":"527","messageId":"528","endLine":2,"endColumn":18},{"ruleId":"525","severity":1,"message":"526","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":14},{"ruleId":"525","severity":1,"message":"529","line":3,"column":18,"nodeType":"527","messageId":"528","endLine":3,"endColumn":21},{"ruleId":"525","severity":1,"message":"530","line":3,"column":23,"nodeType":"527","messageId":"528","endLine":3,"endColumn":26},{"ruleId":"525","severity":1,"message":"531","line":7,"column":8,"nodeType":"527","messageId":"528","endLine":7,"endColumn":18},{"ruleId":"525","severity":1,"message":"532","line":6,"column":8,"nodeType":"527","messageId":"528","endLine":6,"endColumn":20},{"ruleId":"525","severity":1,"message":"533","line":7,"column":16,"nodeType":"527","messageId":"528","endLine":7,"endColumn":21},{"ruleId":"525","severity":1,"message":"534","line":78,"column":13,"nodeType":"527","messageId":"528","endLine":78,"endColumn":20},{"ruleId":"525","severity":1,"message":"529","line":2,"column":18,"nodeType":"527","messageId":"528","endLine":2,"endColumn":21},{"ruleId":"525","severity":1,"message":"530","line":2,"column":23,"nodeType":"527","messageId":"528","endLine":2,"endColumn":26},{"ruleId":"525","severity":1,"message":"535","line":8,"column":8,"nodeType":"527","messageId":"528","endLine":8,"endColumn":20},{"ruleId":"536","severity":1,"message":"537","line":24,"column":3,"nodeType":"538","messageId":"539","endLine":37,"endColumn":4},{"ruleId":"525","severity":1,"message":"540","line":35,"column":15,"nodeType":"527","messageId":"528","endLine":35,"endColumn":18},{"ruleId":"525","severity":1,"message":"541","line":3,"column":10,"nodeType":"527","messageId":"528","endLine":3,"endColumn":16},{"ruleId":"525","severity":1,"message":"542","line":3,"column":42,"nodeType":"527","messageId":"528","endLine":3,"endColumn":50},{"ruleId":"525","severity":1,"message":"543","line":19,"column":9,"nodeType":"527","messageId":"528","endLine":19,"endColumn":15},{"ruleId":"544","severity":1,"message":"545","line":20,"column":36,"nodeType":"546","messageId":"547","endLine":20,"endColumn":38},{"ruleId":"544","severity":1,"message":"545","line":22,"column":45,"nodeType":"546","messageId":"547","endLine":22,"endColumn":47},{"ruleId":"548","severity":1,"message":"549","line":46,"column":26,"nodeType":"550","messageId":"539","endLine":46,"endColumn":28},{"ruleId":"544","severity":1,"message":"545","line":111,"column":60,"nodeType":"546","messageId":"547","endLine":111,"endColumn":62},{"ruleId":"525","severity":1,"message":"551","line":2,"column":10,"nodeType":"527","messageId":"528","endLine":2,"endColumn":21},{"ruleId":"525","severity":1,"message":"552","line":3,"column":41,"nodeType":"527","messageId":"528","endLine":3,"endColumn":45},{"ruleId":"525","severity":1,"message":"553","line":3,"column":47,"nodeType":"527","messageId":"528","endLine":3,"endColumn":55},{"ruleId":"525","severity":1,"message":"554","line":3,"column":57,"nodeType":"527","messageId":"528","endLine":3,"endColumn":61},{"ruleId":"525","severity":1,"message":"555","line":5,"column":3,"nodeType":"527","messageId":"528","endLine":5,"endColumn":14},{"ruleId":"525","severity":1,"message":"556","line":6,"column":3,"nodeType":"527","messageId":"528","endLine":6,"endColumn":13},{"ruleId":"525","severity":1,"message":"557","line":12,"column":8,"nodeType":"527","messageId":"528","endLine":12,"endColumn":20},{"ruleId":"525","severity":1,"message":"558","line":4,"column":3,"nodeType":"527","messageId":"528","endLine":4,"endColumn":16},{"ruleId":"525","severity":1,"message":"559","line":5,"column":3,"nodeType":"527","messageId":"528","endLine":5,"endColumn":17},{"ruleId":"525","severity":1,"message":"560","line":43,"column":9,"nodeType":"527","messageId":"528","endLine":43,"endColumn":15},{"ruleId":"525","severity":1,"message":"561","line":21,"column":10,"nodeType":"527","messageId":"528","endLine":21,"endColumn":19},{"ruleId":"525","severity":1,"message":"562","line":71,"column":9,"nodeType":"527","messageId":"528","endLine":71,"endColumn":17},{"ruleId":"525","severity":1,"message":"563","line":4,"column":8,"nodeType":"527","messageId":"528","endLine":4,"endColumn":14},{"ruleId":"525","severity":1,"message":"564","line":5,"column":8,"nodeType":"527","messageId":"528","endLine":5,"endColumn":15},{"ruleId":"525","severity":1,"message":"565","line":7,"column":10,"nodeType":"527","messageId":"528","endLine":7,"endColumn":20},{"ruleId":"525","severity":1,"message":"566","line":8,"column":10,"nodeType":"527","messageId":"528","endLine":8,"endColumn":19},{"ruleId":"525","severity":1,"message":"567","line":21,"column":7,"nodeType":"527","messageId":"528","endLine":21,"endColumn":9},{"ruleId":"525","severity":1,"message":"568","line":4,"column":8,"nodeType":"527","messageId":"528","endLine":4,"endColumn":22},{"ruleId":"525","severity":1,"message":"569","line":9,"column":8,"nodeType":"527","messageId":"528","endLine":9,"endColumn":18},{"ruleId":"525","severity":1,"message":"570","line":25,"column":13,"nodeType":"527","messageId":"528","endLine":25,"endColumn":22},{"ruleId":"548","severity":1,"message":"571","line":28,"column":65,"nodeType":"550","messageId":"539","endLine":28,"endColumn":67},{"ruleId":"544","severity":1,"message":"545","line":88,"column":40,"nodeType":"546","messageId":"547","endLine":88,"endColumn":42},{"ruleId":"544","severity":1,"message":"545","line":89,"column":49,"nodeType":"546","messageId":"547","endLine":89,"endColumn":51},{"ruleId":"544","severity":1,"message":"545","line":104,"column":33,"nodeType":"546","messageId":"547","endLine":104,"endColumn":35},{"ruleId":"544","severity":1,"message":"545","line":105,"column":55,"nodeType":"546","messageId":"547","endLine":105,"endColumn":57},{"ruleId":"544","severity":1,"message":"545","line":121,"column":52,"nodeType":"546","messageId":"547","endLine":121,"endColumn":54},{"ruleId":"544","severity":1,"message":"545","line":135,"column":37,"nodeType":"546","messageId":"547","endLine":135,"endColumn":39},{"ruleId":"544","severity":1,"message":"545","line":136,"column":61,"nodeType":"546","messageId":"547","endLine":136,"endColumn":63},{"ruleId":"525","severity":1,"message":"572","line":149,"column":9,"nodeType":"527","messageId":"528","endLine":149,"endColumn":14},{"ruleId":"544","severity":1,"message":"545","line":151,"column":52,"nodeType":"546","messageId":"547","endLine":151,"endColumn":54},{"ruleId":"525","severity":1,"message":"572","line":162,"column":9,"nodeType":"527","messageId":"528","endLine":162,"endColumn":14},{"ruleId":"544","severity":1,"message":"545","line":164,"column":37,"nodeType":"546","messageId":"547","endLine":164,"endColumn":39},{"ruleId":"544","severity":1,"message":"545","line":165,"column":61,"nodeType":"546","messageId":"547","endLine":165,"endColumn":63},{"ruleId":"525","severity":1,"message":"573","line":4,"column":10,"nodeType":"527","messageId":"528","endLine":4,"endColumn":19},{"ruleId":"525","severity":1,"message":"529","line":5,"column":10,"nodeType":"527","messageId":"528","endLine":5,"endColumn":13},{"ruleId":"525","severity":1,"message":"530","line":5,"column":15,"nodeType":"527","messageId":"528","endLine":5,"endColumn":18},{"ruleId":"525","severity":1,"message":"574","line":5,"column":26,"nodeType":"527","messageId":"528","endLine":5,"endColumn":30},{"ruleId":"525","severity":1,"message":"575","line":17,"column":10,"nodeType":"527","messageId":"528","endLine":17,"endColumn":21},{"ruleId":"525","severity":1,"message":"576","line":18,"column":8,"nodeType":"527","messageId":"528","endLine":18,"endColumn":26},{"ruleId":"525","severity":1,"message":"577","line":23,"column":10,"nodeType":"527","messageId":"528","endLine":23,"endColumn":13},{"ruleId":"525","severity":1,"message":"578","line":23,"column":15,"nodeType":"527","messageId":"528","endLine":23,"endColumn":21},{"ruleId":"525","severity":1,"message":"579","line":27,"column":7,"nodeType":"527","messageId":"528","endLine":27,"endColumn":16},{"ruleId":"525","severity":1,"message":"580","line":43,"column":7,"nodeType":"527","messageId":"528","endLine":43,"endColumn":18},{"ruleId":"525","severity":1,"message":"581","line":47,"column":7,"nodeType":"527","messageId":"528","endLine":47,"endColumn":18},{"ruleId":"525","severity":1,"message":"582","line":51,"column":7,"nodeType":"527","messageId":"528","endLine":51,"endColumn":18},{"ruleId":"525","severity":1,"message":"583","line":55,"column":7,"nodeType":"527","messageId":"528","endLine":55,"endColumn":22},{"ruleId":"525","severity":1,"message":"584","line":62,"column":7,"nodeType":"527","messageId":"528","endLine":62,"endColumn":12},{"ruleId":"525","severity":1,"message":"585","line":74,"column":7,"nodeType":"527","messageId":"528","endLine":74,"endColumn":17},{"ruleId":"525","severity":1,"message":"586","line":80,"column":7,"nodeType":"527","messageId":"528","endLine":80,"endColumn":10},{"ruleId":"525","severity":1,"message":"587","line":240,"column":13,"nodeType":"527","messageId":"528","endLine":240,"endColumn":26},{"ruleId":"525","severity":1,"message":"588","line":293,"column":11,"nodeType":"527","messageId":"528","endLine":293,"endColumn":27},{"ruleId":"525","severity":1,"message":"589","line":303,"column":16,"nodeType":"527","messageId":"528","endLine":303,"endColumn":23},{"ruleId":"525","severity":1,"message":"590","line":304,"column":17,"nodeType":"527","messageId":"528","endLine":304,"endColumn":26},{"ruleId":"525","severity":1,"message":"560","line":319,"column":11,"nodeType":"527","messageId":"528","endLine":319,"endColumn":17},{"ruleId":"525","severity":1,"message":"562","line":538,"column":13,"nodeType":"527","messageId":"528","endLine":538,"endColumn":21},{"ruleId":"525","severity":1,"message":"591","line":2,"column":26,"nodeType":"527","messageId":"528","endLine":2,"endColumn":32},{"ruleId":"525","severity":1,"message":"592","line":8,"column":23,"nodeType":"527","messageId":"528","endLine":8,"endColumn":32},{"ruleId":"525","severity":1,"message":"593","line":9,"column":11,"nodeType":"527","messageId":"528","endLine":9,"endColumn":20},{"ruleId":"525","severity":1,"message":"594","line":11,"column":11,"nodeType":"527","messageId":"528","endLine":11,"endColumn":15},{"ruleId":"548","severity":1,"message":"549","line":39,"column":36,"nodeType":"550","messageId":"539","endLine":39,"endColumn":38},{"ruleId":"548","severity":1,"message":"549","line":47,"column":48,"nodeType":"550","messageId":"539","endLine":47,"endColumn":50},{"ruleId":"525","severity":1,"message":"595","line":4,"column":10,"nodeType":"527","messageId":"528","endLine":4,"endColumn":13},{"ruleId":"525","severity":1,"message":"596","line":4,"column":15,"nodeType":"527","messageId":"528","endLine":4,"endColumn":19},{"ruleId":"525","severity":1,"message":"597","line":5,"column":10,"nodeType":"527","messageId":"528","endLine":5,"endColumn":14},{"ruleId":"525","severity":1,"message":"592","line":10,"column":23,"nodeType":"527","messageId":"528","endLine":10,"endColumn":32},{"ruleId":"525","severity":1,"message":"594","line":12,"column":11,"nodeType":"527","messageId":"528","endLine":12,"endColumn":15},{"ruleId":"525","severity":1,"message":"592","line":31,"column":23,"nodeType":"527","messageId":"528","endLine":31,"endColumn":32},{"ruleId":"525","severity":1,"message":"598","line":33,"column":9,"nodeType":"527","messageId":"528","endLine":33,"endColumn":17},{"ruleId":"525","severity":1,"message":"594","line":34,"column":11,"nodeType":"527","messageId":"528","endLine":34,"endColumn":15},{"ruleId":"599","severity":1,"message":"600","line":48,"column":67,"nodeType":"601","messageId":"602","endLine":48,"endColumn":68},{"ruleId":"525","severity":1,"message":"592","line":133,"column":13,"nodeType":"527","messageId":"528","endLine":133,"endColumn":22},{"ruleId":"548","severity":1,"message":"549","line":138,"column":42,"nodeType":"550","messageId":"539","endLine":138,"endColumn":44},{"ruleId":"525","severity":1,"message":"552","line":3,"column":41,"nodeType":"527","messageId":"528","endLine":3,"endColumn":45},{"ruleId":"525","severity":1,"message":"553","line":3,"column":47,"nodeType":"527","messageId":"528","endLine":3,"endColumn":55},{"ruleId":"525","severity":1,"message":"554","line":3,"column":57,"nodeType":"527","messageId":"528","endLine":3,"endColumn":61},{"ruleId":"525","severity":1,"message":"603","line":4,"column":10,"nodeType":"527","messageId":"528","endLine":4,"endColumn":22},{"ruleId":"525","severity":1,"message":"604","line":4,"column":24,"nodeType":"527","messageId":"528","endLine":4,"endColumn":36},{"ruleId":"605","severity":1,"message":"606","line":66,"column":15,"nodeType":"607","endLine":66,"endColumn":72},{"ruleId":"525","severity":1,"message":"608","line":192,"column":7,"nodeType":"527","messageId":"528","endLine":192,"endColumn":16},{"ruleId":"525","severity":1,"message":"609","line":1,"column":17,"nodeType":"527","messageId":"528","endLine":1,"endColumn":26},{"ruleId":"610","severity":1,"message":"611","line":8,"column":3,"nodeType":"538","messageId":"612","endLine":10,"endColumn":4},{"ruleId":"613","severity":1,"message":"614","line":29,"column":5,"nodeType":"615","messageId":"616","endLine":31,"endColumn":6},{"ruleId":"548","severity":1,"message":"549","line":35,"column":28,"nodeType":"550","messageId":"539","endLine":35,"endColumn":30},{"ruleId":"525","severity":1,"message":"617","line":8,"column":3,"nodeType":"527","messageId":"528","endLine":8,"endColumn":17},{"ruleId":"605","severity":1,"message":"606","line":42,"column":13,"nodeType":"607","endLine":42,"endColumn":58},{"ruleId":"525","severity":1,"message":"618","line":4,"column":27,"nodeType":"527","messageId":"528","endLine":4,"endColumn":34},{"ruleId":"619","severity":1,"message":"620","line":13,"column":1,"nodeType":"621","endLine":39,"endColumn":2},{"ruleId":"525","severity":1,"message":"573","line":4,"column":10,"nodeType":"527","messageId":"528","endLine":4,"endColumn":19},{"ruleId":"525","severity":1,"message":"622","line":70,"column":7,"nodeType":"527","messageId":"528","endLine":70,"endColumn":24},{"ruleId":"525","severity":1,"message":"623","line":71,"column":7,"nodeType":"527","messageId":"528","endLine":71,"endColumn":22},{"ruleId":"525","severity":1,"message":"624","line":73,"column":7,"nodeType":"527","messageId":"528","endLine":73,"endColumn":12},{"ruleId":"525","severity":1,"message":"625","line":74,"column":7,"nodeType":"527","messageId":"528","endLine":74,"endColumn":16},{"ruleId":"525","severity":1,"message":"626","line":75,"column":7,"nodeType":"527","messageId":"528","endLine":75,"endColumn":14},{"ruleId":"525","severity":1,"message":"627","line":5,"column":10,"nodeType":"527","messageId":"528","endLine":5,"endColumn":20},{"ruleId":"525","severity":1,"message":"628","line":8,"column":8,"nodeType":"527","messageId":"528","endLine":8,"endColumn":29},{"ruleId":"525","severity":1,"message":"629","line":10,"column":8,"nodeType":"527","messageId":"528","endLine":10,"endColumn":22},{"ruleId":"525","severity":1,"message":"630","line":11,"column":8,"nodeType":"527","messageId":"528","endLine":11,"endColumn":20},{"ruleId":"525","severity":1,"message":"529","line":12,"column":10,"nodeType":"527","messageId":"528","endLine":12,"endColumn":13},{"ruleId":"525","severity":1,"message":"530","line":12,"column":15,"nodeType":"527","messageId":"528","endLine":12,"endColumn":18},{"ruleId":"525","severity":1,"message":"631","line":14,"column":10,"nodeType":"527","messageId":"528","endLine":14,"endColumn":18},{"ruleId":"525","severity":1,"message":"632","line":16,"column":9,"nodeType":"527","messageId":"528","endLine":16,"endColumn":15},{"ruleId":"525","severity":1,"message":"626","line":71,"column":10,"nodeType":"527","messageId":"528","endLine":71,"endColumn":17},{"ruleId":"525","severity":1,"message":"633","line":72,"column":11,"nodeType":"527","messageId":"528","endLine":72,"endColumn":24},{"ruleId":"525","severity":1,"message":"633","line":101,"column":11,"nodeType":"527","messageId":"528","endLine":101,"endColumn":24},{"ruleId":"525","severity":1,"message":"633","line":151,"column":11,"nodeType":"527","messageId":"528","endLine":151,"endColumn":24},{"ruleId":"525","severity":1,"message":"634","line":1,"column":27,"nodeType":"527","messageId":"528","endLine":1,"endColumn":36},{"ruleId":"525","severity":1,"message":"573","line":3,"column":10,"nodeType":"527","messageId":"528","endLine":3,"endColumn":19},{"ruleId":"525","severity":1,"message":"635","line":5,"column":3,"nodeType":"527","messageId":"528","endLine":5,"endColumn":12},{"ruleId":"525","severity":1,"message":"553","line":7,"column":3,"nodeType":"527","messageId":"528","endLine":7,"endColumn":11},{"ruleId":"525","severity":1,"message":"636","line":8,"column":3,"nodeType":"527","messageId":"528","endLine":8,"endColumn":19},{"ruleId":"525","severity":1,"message":"637","line":9,"column":3,"nodeType":"527","messageId":"528","endLine":9,"endColumn":11},{"ruleId":"525","severity":1,"message":"638","line":13,"column":8,"nodeType":"527","messageId":"528","endLine":13,"endColumn":13},{"ruleId":"525","severity":1,"message":"639","line":64,"column":10,"nodeType":"527","messageId":"528","endLine":64,"endColumn":20},{"ruleId":"525","severity":1,"message":"640","line":64,"column":22,"nodeType":"527","messageId":"528","endLine":64,"endColumn":35},{"ruleId":"525","severity":1,"message":"641","line":99,"column":5,"nodeType":"527","messageId":"528","endLine":99,"endColumn":22},{"ruleId":"525","severity":1,"message":"642","line":1,"column":17,"nodeType":"527","messageId":"528","endLine":1,"endColumn":25},{"ruleId":"525","severity":1,"message":"634","line":1,"column":27,"nodeType":"527","messageId":"528","endLine":1,"endColumn":36},{"ruleId":"525","severity":1,"message":"643","line":1,"column":38,"nodeType":"527","messageId":"528","endLine":1,"endColumn":44},{"ruleId":"525","severity":1,"message":"644","line":1,"column":46,"nodeType":"527","messageId":"528","endLine":1,"endColumn":53},{"ruleId":"525","severity":1,"message":"553","line":6,"column":3,"nodeType":"527","messageId":"528","endLine":6,"endColumn":11},{"ruleId":"525","severity":1,"message":"636","line":7,"column":3,"nodeType":"527","messageId":"528","endLine":7,"endColumn":19},{"ruleId":"525","severity":1,"message":"637","line":8,"column":3,"nodeType":"527","messageId":"528","endLine":8,"endColumn":11},{"ruleId":"525","severity":1,"message":"645","line":11,"column":10,"nodeType":"527","messageId":"528","endLine":11,"endColumn":16},{"ruleId":"525","severity":1,"message":"574","line":11,"column":18,"nodeType":"527","messageId":"528","endLine":11,"endColumn":22},{"ruleId":"525","severity":1,"message":"646","line":11,"column":34,"nodeType":"527","messageId":"528","endLine":11,"endColumn":40},{"ruleId":"525","severity":1,"message":"647","line":13,"column":8,"nodeType":"527","messageId":"528","endLine":13,"endColumn":18},{"ruleId":"525","severity":1,"message":"648","line":14,"column":8,"nodeType":"527","messageId":"528","endLine":14,"endColumn":32},{"ruleId":"525","severity":1,"message":"649","line":15,"column":10,"nodeType":"527","messageId":"528","endLine":15,"endColumn":22},{"ruleId":"525","severity":1,"message":"575","line":16,"column":10,"nodeType":"527","messageId":"528","endLine":16,"endColumn":21},{"ruleId":"525","severity":1,"message":"650","line":17,"column":8,"nodeType":"527","messageId":"528","endLine":17,"endColumn":28},{"ruleId":"525","severity":1,"message":"651","line":19,"column":3,"nodeType":"527","messageId":"528","endLine":19,"endColumn":19},{"ruleId":"525","severity":1,"message":"652","line":20,"column":3,"nodeType":"527","messageId":"528","endLine":20,"endColumn":12},{"ruleId":"525","severity":1,"message":"653","line":22,"column":10,"nodeType":"527","messageId":"528","endLine":22,"endColumn":24},{"ruleId":"525","severity":1,"message":"654","line":22,"column":26,"nodeType":"527","messageId":"528","endLine":22,"endColumn":39},{"ruleId":"525","severity":1,"message":"632","line":26,"column":9,"nodeType":"527","messageId":"528","endLine":26,"endColumn":15},{"ruleId":"525","severity":1,"message":"579","line":76,"column":7,"nodeType":"527","messageId":"528","endLine":76,"endColumn":16},{"ruleId":"525","severity":1,"message":"580","line":92,"column":7,"nodeType":"527","messageId":"528","endLine":92,"endColumn":18},{"ruleId":"525","severity":1,"message":"581","line":96,"column":7,"nodeType":"527","messageId":"528","endLine":96,"endColumn":18},{"ruleId":"525","severity":1,"message":"582","line":100,"column":7,"nodeType":"527","messageId":"528","endLine":100,"endColumn":18},{"ruleId":"525","severity":1,"message":"583","line":104,"column":7,"nodeType":"527","messageId":"528","endLine":104,"endColumn":22},{"ruleId":"525","severity":1,"message":"584","line":111,"column":7,"nodeType":"527","messageId":"528","endLine":111,"endColumn":12},{"ruleId":"525","severity":1,"message":"585","line":123,"column":7,"nodeType":"527","messageId":"528","endLine":123,"endColumn":17},{"ruleId":"525","severity":1,"message":"586","line":129,"column":7,"nodeType":"527","messageId":"528","endLine":129,"endColumn":10},{"ruleId":"525","severity":1,"message":"622","line":142,"column":5,"nodeType":"527","messageId":"528","endLine":142,"endColumn":22},{"ruleId":"525","severity":1,"message":"624","line":145,"column":5,"nodeType":"527","messageId":"528","endLine":145,"endColumn":10},{"ruleId":"525","severity":1,"message":"623","line":146,"column":5,"nodeType":"527","messageId":"528","endLine":146,"endColumn":20},{"ruleId":"525","severity":1,"message":"655","line":154,"column":5,"nodeType":"527","messageId":"528","endLine":154,"endColumn":23},{"ruleId":"525","severity":1,"message":"656","line":155,"column":5,"nodeType":"527","messageId":"528","endLine":155,"endColumn":23},{"ruleId":"525","severity":1,"message":"657","line":158,"column":5,"nodeType":"527","messageId":"528","endLine":158,"endColumn":13},{"ruleId":"525","severity":1,"message":"658","line":11,"column":7,"nodeType":"527","messageId":"528","endLine":11,"endColumn":20},{"ruleId":"525","severity":1,"message":"659","line":25,"column":9,"nodeType":"527","messageId":"528","endLine":25,"endColumn":17},{"ruleId":"525","severity":1,"message":"660","line":4,"column":7,"nodeType":"527","messageId":"528","endLine":4,"endColumn":14},{"ruleId":"525","severity":1,"message":"658","line":5,"column":7,"nodeType":"527","messageId":"528","endLine":5,"endColumn":20},{"ruleId":"525","severity":1,"message":"565","line":6,"column":9,"nodeType":"527","messageId":"528","endLine":6,"endColumn":19},{"ruleId":"525","severity":1,"message":"661","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":17},{"ruleId":"525","severity":1,"message":"662","line":27,"column":11,"nodeType":"527","messageId":"528","endLine":27,"endColumn":17},{"ruleId":"525","severity":1,"message":"569","line":1,"column":10,"nodeType":"527","messageId":"528","endLine":1,"endColumn":20},{"ruleId":"525","severity":1,"message":"663","line":2,"column":21,"nodeType":"527","messageId":"528","endLine":2,"endColumn":28},{"ruleId":"525","severity":1,"message":"566","line":2,"column":30,"nodeType":"527","messageId":"528","endLine":2,"endColumn":39},{"ruleId":"605","severity":1,"message":"606","line":8,"column":7,"nodeType":"607","endLine":8,"endColumn":88},{"ruleId":"619","severity":1,"message":"664","line":22,"column":1,"nodeType":"621","endLine":70,"endColumn":2},{"ruleId":"525","severity":1,"message":"558","line":4,"column":3,"nodeType":"527","messageId":"528","endLine":4,"endColumn":16},{"ruleId":"619","severity":1,"message":"620","line":79,"column":1,"nodeType":"621","endLine":100,"endColumn":3},{"ruleId":"619","severity":1,"message":"664","line":5,"column":1,"nodeType":"621","endLine":14,"endColumn":2},"no-native-reassign",["665"],"no-negated-in-lhs",["666"],"no-unused-vars","'FormIO' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'CreateForm' is defined but never used.","'ProjectsCard' is defined but never used.","'Paper' is defined but never used.","'classes' is assigned a value but never used.","'FundingGraph' is defined but never used.","no-dupe-class-members","Duplicate name 'componentDidMount'.","MethodDefinition","unexpected","'api' is assigned a value but never used.","'Layout' is defined but never used.","'Skeleton' is defined but never used.","'string' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'FormBuilder' is defined but never used.","'Card' is defined but never used.","'Checkbox' is defined but never used.","'Tabs' is defined but never used.","'USER_LOADED' is defined but never used.","'AUTH_ERROR' is defined but never used.","'setAuthToken' is defined but never used.","'TEST_DISPATCH' is defined but never used.","'GET_INDICATORS' is defined but never used.","'config' is assigned a value but never used.","'camelCase' is defined but never used.","'projects' is assigned a value but never used.","'Navbar' is defined but never used.","'SideBar' is defined but never used.","'dummyForms' is defined but never used.","'startCase' is defined but never used.","'h1' is assigned a value but never used.","'CardActionArea' is defined but never used.","'Typography' is defined but never used.","'lastIndex' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'count' is assigned a value but never used.","'withStore' is defined but never used.","'Form' is defined but never used.","'useDropzone' is defined but never used.","'PlacesAutocomplete' is defined but never used.","'Map' is defined but never used.","'Marker' is defined but never used.","'baseStyle' is assigned a value but never used.","'activeStyle' is assigned a value but never used.","'acceptStyle' is assigned a value but never used.","'rejectStyle' is assigned a value but never used.","'thumbsContainer' is assigned a value but never used.","'thumb' is assigned a value but never used.","'thumbInner' is assigned a value but never used.","'img' is assigned a value but never used.","'impactManager' is assigned a value but never used.","'indicatorStrings' is assigned a value but never used.","'address' is assigned a value but never used.","'imageData' is assigned a value but never used.","'Result' is defined but never used.","'indicator' is assigned a value but never used.","'dataArray' is assigned a value but never used.","'json' is assigned a value but never used.","'Bar' is defined but never used.","'Line' is defined but never used.","'data' is defined but never used.","'countObj' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'textLogin' is assigned a value but never used.","'Component' is defined but never used.","no-useless-constructor","Useless constructor.","noUselessConstructor","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'ExportOutlined' is defined but never used.","'message' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'programmeLocation' is assigned a value but never used.","'programmePlaces' is assigned a value but never used.","'image' is assigned a value but never used.","'sdgChecks' is assigned a value but never used.","'sdgDump' is assigned a value but never used.","'appHelpers' is defined but never used.","'ExpansionPanelDetails' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Autocomplete' is defined but never used.","'DataGrid' is defined but never used.","'Option' is assigned a value but never used.","'allIndicators' is assigned a value but never used.","'useEffect' is defined but never used.","'TextField' is defined but never used.","'FormControlLabel' is defined but never used.","'MenuItem' is defined but never used.","'axios' is defined but never used.","'sdgDumping' is assigned a value but never used.","'setSdgDumping' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'useMemo' is defined but never used.","'Upload' is defined but never used.","'Button' is defined but never used.","'InputLabel' is defined but never used.","'GooglePlacesAutocomplete' is defined but never used.","'DropzoneArea' is defined but never used.","'ImpactManagerSummary' is defined but never used.","'geocodeByAddress' is defined but never used.","'getLatLng' is defined but never used.","'UploadOutlined' is defined but never used.","'InboxOutlined' is defined but never used.","'handleSelectChange' is assigned a value but never used.","'handleBannerChange' is assigned a value but never used.","'normFile' is assigned a value but never used.","'MenuItemGroup' is assigned a value but never used.","'onLogout' is assigned a value but never used.","'SubMenu' is assigned a value but never used.","'PropTypes' is defined but never used.","'render' is assigned a value but never used.","'isEmpty' is defined but never used.","Unexpected default export of anonymous function","no-global-assign","no-unsafe-negation"]