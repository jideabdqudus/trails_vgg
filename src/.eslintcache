[{"/home/mrayor/Documents/code/trail-web/src/src/index.js":"1","/home/mrayor/Documents/code/trail-web/src/src/store.js":"2","/home/mrayor/Documents/code/trail-web/src/src/history.js":"3","/home/mrayor/Documents/code/trail-web/src/src/configuration.js":"4","/home/mrayor/Documents/code/trail-web/src/src/Constants.js":"5","/home/mrayor/Documents/code/trail-web/src/src/Services.js":"6","/home/mrayor/Documents/code/trail-web/src/src/components/hocs/Layout.jsx":"7","/home/mrayor/Documents/code/trail-web/src/src/appHelpers/appHelpers.js":"8","/home/mrayor/Documents/code/trail-web/src/src/App.js":"9","/home/mrayor/Documents/code/trail-web/src/src/components/Loader/Loader.js":"10","/home/mrayor/Documents/code/trail-web/src/src/views/Create/CreateAccount.js":"11","/home/mrayor/Documents/code/trail-web/src/src/views/Login/Login.js":"12","/home/mrayor/Documents/code/trail-web/src/src/reducers/index.js":"13","/home/mrayor/Documents/code/trail-web/src/src/components/ScrollToTop/index.js":"14","/home/mrayor/Documents/code/trail-web/src/src/components/hocs/_Aux/index.js":"15","/home/mrayor/Documents/code/trail-web/src/src/views/Projects/Projects.js":"16","/home/mrayor/Documents/code/trail-web/src/src/views/ProjectOverview/Overview.js":"17","/home/mrayor/Documents/code/trail-web/src/src/views/Impact/Manager.js":"18","/home/mrayor/Documents/code/trail-web/src/src/utils/setAuthToken.js":"19","/home/mrayor/Documents/code/trail-web/src/src/views/FormManager/FormManager.js":"20","/home/mrayor/Documents/code/trail-web/src/src/views/FormBuilder/FormBuild.js":"21","/home/mrayor/Documents/code/trail-web/src/src/views/Dashboard/Dashboard.js":"22","/home/mrayor/Documents/code/trail-web/src/src/components/CreateAcct/Index.js":"23","/home/mrayor/Documents/code/trail-web/src/src/views/PublishedForm/index.jsx":"24","/home/mrayor/Documents/code/trail-web/src/src/reducers/authReducer.js":"25","/home/mrayor/Documents/code/trail-web/src/src/reducers/alertReducer.js":"26","/home/mrayor/Documents/code/trail-web/src/src/reducers/formReducer.js":"27","/home/mrayor/Documents/code/trail-web/src/src/reducers/reportReducer.js":"28","/home/mrayor/Documents/code/trail-web/src/src/reducers/projectReducer.js":"29","/home/mrayor/Documents/code/trail-web/src/src/components/LoginForm/index.js":"30","/home/mrayor/Documents/code/trail-web/src/src/components/Loader/CatalogMagic.js":"31","/home/mrayor/Documents/code/trail-web/src/src/components/Card/ImageCard.js":"32","/home/mrayor/Documents/code/trail-web/src/src/constants/app.constants.js":"33","/home/mrayor/Documents/code/trail-web/src/src/components/FormIO/Index.js":"34","/home/mrayor/Documents/code/trail-web/src/src/components/FormIO/CreateForm.js":"35","/home/mrayor/Documents/code/trail-web/src/src/components/FormBuilder.js/BuildForm.js":"36","/home/mrayor/Documents/code/trail-web/src/src/views/FormPreview/index.jsx":"37","/home/mrayor/Documents/code/trail-web/src/src/components/FormIO/constants.js":"38","/home/mrayor/Documents/code/trail-web/src/src/actions/authAuctions.js":"39","/home/mrayor/Documents/code/trail-web/src/src/actions/alertActions.js":"40","/home/mrayor/Documents/code/trail-web/src/src/components/Alert/index.js":"41","/home/mrayor/Documents/code/trail-web/src/src/actions/projectAction.js":"42","/home/mrayor/Documents/code/trail-web/src/src/constants/Types.js":"43","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManager.jsx":"44","/home/mrayor/Documents/code/trail-web/src/src/components/IndicatorsCard/index.js":"45","/home/mrayor/Documents/code/trail-web/src/src/components/FundingGraph/index.js":"46","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactMap/index.js":"47","/home/mrayor/Documents/code/trail-web/src/src/components/DoughnutChart/index.js":"48","/home/mrayor/Documents/code/trail-web/src/src/components/PerformanceIndicators/index.js":"49","/home/mrayor/Documents/code/trail-web/src/src/components/ActionCard/index.js":"50","/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/menu/index.js":"51","/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/sidebar/index.js":"52","/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/footer/index.js":"53","/home/mrayor/Documents/code/trail-web/src/src/components/FormBuilder.js/constants.js":"54","/home/mrayor/Documents/code/trail-web/src/src/appHelpers/constants.js":"55","/home/mrayor/Documents/code/trail-web/src/src/actions/formActions.js":"56","/home/mrayor/Documents/code/trail-web/src/src/components/PublishedForm/index.jsx":"57","/home/mrayor/Documents/code/trail-web/src/src/components/CustomButton/CustomButton.js":"58","/home/mrayor/Documents/code/trail-web/src/src/components/Loader/CustomCircularProgress.js":"59","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManagerSummary.jsx":"60","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManagerForm3.jsx":"61","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManagerForm2.jsx":"62","/home/mrayor/Documents/code/trail-web/src/src/actions/reportActions.js":"63","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManagerForm1.jsx":"64","/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/menu/RightMenu.js":"65","/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/menu/LeftMenu.js":"66","/home/mrayor/Documents/code/trail-web/src/src/components/FundingGraph/data.js":"67","/home/mrayor/Documents/code/trail-web/src/src/components/FormPreview/index.jsx":"68","/home/mrayor/Documents/code/trail-web/src/src/components/Space/TopSpace.js":"69","/home/mrayor/Documents/code/trail-web/src/src/components/Indicators/IndicatorView.jsx":"70","/home/mrayor/Documents/code/trail-web/src/src/components/SvgCard/SvgCard.jsx":"71","/home/mrayor/Documents/code/trail-web/src/src/components/SvgCard/SvgCardView.jsx":"72","/home/mrayor/Documents/code/trail-web/src/src/components/Upload/ImageUpload.jsx":"73","/home/mrayor/Documents/code/trail-web/src/src/components/FormPreview/PreviewQuestions.jsx":"74","/home/mrayor/Documents/code/trail-web/src/src/components/FormPreview/ProgrammeSummary.jsx":"75","/home/mrayor/Documents/code/trail-web/src/src/components/PublishedForm/Summary.jsx":"76","/home/mrayor/Documents/code/trail-web/src/src/components/PublishedForm/Questions.jsx":"77","/home/mrayor/Documents/code/trail-web/src/src/appHelpers/Builder.jsx":"78","/home/mrayor/Documents/code/trail-web/src/src/components/Widgets/ShortFreeText.jsx":"79","/home/mrayor/Documents/code/trail-web/src/src/components/Widgets/Layout.jsx":"80","/home/mrayor/Documents/code/trail-web/src/src/components/Widgets/RadioInput.jsx":"81"},{"size":1467,"mtime":1615899565122,"results":"82","hashOfConfig":"83"},{"size":371,"mtime":1615106329212,"results":"84","hashOfConfig":"83"},{"size":111,"mtime":1615899565122,"results":"85","hashOfConfig":"83"},{"size":97,"mtime":1615899565122,"results":"86","hashOfConfig":"83"},{"size":643,"mtime":1615944627156,"results":"87","hashOfConfig":"83"},{"size":3537,"mtime":1615944544559,"results":"88","hashOfConfig":"83"},{"size":1735,"mtime":1615899565122,"results":"89","hashOfConfig":"83"},{"size":7055,"mtime":1615899565114,"results":"90","hashOfConfig":"83"},{"size":5809,"mtime":1615941904858,"results":"91","hashOfConfig":"83"},{"size":279,"mtime":1615899565118,"results":"92","hashOfConfig":"83"},{"size":220,"mtime":1615899565126,"results":"93","hashOfConfig":"83"},{"size":240,"mtime":1615899565130,"results":"94","hashOfConfig":"83"},{"size":295,"mtime":1615923777037,"results":"95","hashOfConfig":"83"},{"size":466,"mtime":1615899565122,"results":"96","hashOfConfig":"83"},{"size":59,"mtime":1615106329208,"results":"97","hashOfConfig":"83"},{"size":3730,"mtime":1615899565130,"results":"98","hashOfConfig":"83"},{"size":3431,"mtime":1615941965392,"results":"99","hashOfConfig":"83"},{"size":1321,"mtime":1615899565130,"results":"100","hashOfConfig":"83"},{"size":241,"mtime":1615106329212,"results":"101","hashOfConfig":"83"},{"size":1187,"mtime":1615899565126,"results":"102","hashOfConfig":"83"},{"size":1448,"mtime":1615899565126,"results":"103","hashOfConfig":"83"},{"size":2698,"mtime":1615944435438,"results":"104","hashOfConfig":"83"},{"size":10076,"mtime":1615899565118,"results":"105","hashOfConfig":"83"},{"size":902,"mtime":1615899565130,"results":"106","hashOfConfig":"83"},{"size":1734,"mtime":1615899565126,"results":"107","hashOfConfig":"83"},{"size":361,"mtime":1615106329212,"results":"108","hashOfConfig":"83"},{"size":1175,"mtime":1615899565126,"results":"109","hashOfConfig":"83"},{"size":654,"mtime":1615938311200,"results":"110","hashOfConfig":"83"},{"size":816,"mtime":1615944435438,"results":"111","hashOfConfig":"83"},{"size":7251,"mtime":1615899565122,"results":"112","hashOfConfig":"83"},{"size":532,"mtime":1615899565118,"results":"113","hashOfConfig":"83"},{"size":2836,"mtime":1615899565118,"results":"114","hashOfConfig":"83"},{"size":0,"mtime":1615899565122,"results":"115","hashOfConfig":"83"},{"size":209,"mtime":1615106329204,"results":"116","hashOfConfig":"83"},{"size":3121,"mtime":1615899565118,"results":"117","hashOfConfig":"83"},{"size":18681,"mtime":1615899897194,"results":"118","hashOfConfig":"83"},{"size":1068,"mtime":1615899565130,"results":"119","hashOfConfig":"83"},{"size":1833,"mtime":1615899565118,"results":"120","hashOfConfig":"83"},{"size":2215,"mtime":1615899565114,"results":"121","hashOfConfig":"83"},{"size":323,"mtime":1615106329200,"results":"122","hashOfConfig":"83"},{"size":579,"mtime":1615106329204,"results":"123","hashOfConfig":"83"},{"size":2053,"mtime":1615944435438,"results":"124","hashOfConfig":"83"},{"size":1503,"mtime":1615944475394,"results":"125","hashOfConfig":"83"},{"size":23320,"mtime":1615944435438,"results":"126","hashOfConfig":"83"},{"size":2054,"mtime":1615899565118,"results":"127","hashOfConfig":"83"},{"size":638,"mtime":1615106329204,"results":"128","hashOfConfig":"83"},{"size":1812,"mtime":1615899565118,"results":"129","hashOfConfig":"83"},{"size":2909,"mtime":1615899565118,"results":"130","hashOfConfig":"83"},{"size":3015,"mtime":1615947170648,"results":"131","hashOfConfig":"83"},{"size":2012,"mtime":1615944435438,"results":"132","hashOfConfig":"83"},{"size":1696,"mtime":1615899565126,"results":"133","hashOfConfig":"83"},{"size":2211,"mtime":1615899565126,"results":"134","hashOfConfig":"83"},{"size":255,"mtime":1615106329212,"results":"135","hashOfConfig":"83"},{"size":321,"mtime":1615899565118,"results":"136","hashOfConfig":"83"},{"size":71,"mtime":1615899565114,"results":"137","hashOfConfig":"83"},{"size":5124,"mtime":1615944509642,"results":"138","hashOfConfig":"83"},{"size":2213,"mtime":1615934354754,"results":"139","hashOfConfig":"83"},{"size":823,"mtime":1615899565118,"results":"140","hashOfConfig":"83"},{"size":262,"mtime":1615899565118,"results":"141","hashOfConfig":"83"},{"size":6770,"mtime":1615899565118,"results":"142","hashOfConfig":"83"},{"size":4645,"mtime":1615899565118,"results":"143","hashOfConfig":"83"},{"size":3196,"mtime":1615899565118,"results":"144","hashOfConfig":"83"},{"size":1534,"mtime":1615943235188,"results":"145","hashOfConfig":"83"},{"size":9945,"mtime":1615944435438,"results":"146","hashOfConfig":"83"},{"size":2719,"mtime":1615899565126,"results":"147","hashOfConfig":"83"},{"size":334,"mtime":1615106329212,"results":"148","hashOfConfig":"83"},{"size":432,"mtime":1615106329204,"results":"149","hashOfConfig":"83"},{"size":1994,"mtime":1615899565118,"results":"150","hashOfConfig":"83"},{"size":161,"mtime":1615899565122,"results":"151","hashOfConfig":"83"},{"size":297,"mtime":1615899565118,"results":"152","hashOfConfig":"83"},{"size":541,"mtime":1615899565122,"results":"153","hashOfConfig":"83"},{"size":450,"mtime":1615106329208,"results":"154","hashOfConfig":"83"},{"size":1789,"mtime":1615944435438,"results":"155","hashOfConfig":"83"},{"size":270,"mtime":1615899565118,"results":"156","hashOfConfig":"83"},{"size":1570,"mtime":1615899565118,"results":"157","hashOfConfig":"83"},{"size":1228,"mtime":1615899565122,"results":"158","hashOfConfig":"83"},{"size":245,"mtime":1615899565122,"results":"159","hashOfConfig":"83"},{"size":659,"mtime":1615899565114,"results":"160","hashOfConfig":"83"},{"size":1053,"mtime":1615935206531,"results":"161","hashOfConfig":"83"},{"size":788,"mtime":1615933072822,"results":"162","hashOfConfig":"83"},{"size":1179,"mtime":1615934936737,"results":"163","hashOfConfig":"83"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},"vtmo8p",{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"167"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"167"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"167"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"167"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"167"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"167"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"167"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"167"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"167"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"167"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"167"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"167"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"167"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"167"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"167"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"167"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"167"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"167"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"167"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"167"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"167"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"167"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"167"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"167"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"167"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"167"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"167"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"167"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"167"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"167"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"167"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"167"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"167"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"167"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"167"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"167"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"167"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"167"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"167"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"167"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"167"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"167"},"/home/mrayor/Documents/code/trail-web/src/src/index.js",["370"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import App from \"./App\";\nimport { BrowserRouter, Router } from 'react-router-dom';\nimport store from \"./store\";\n\nimport \"antd/dist/antd.css\";\nimport history from \"./history\";\nimport configuration from \"./configuration\";\nimport { Provider } from \"react-redux\";\nimport Layout from './components/hocs/Layout';\nimport * as Constants from './Constants';\nimport { Service } from './Services';\nimport Axios from 'axios';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer } from \"react-toastify\";\n\nconst rootElement = document.getElementById(\"root\");\n\nconst instance = Axios.create({\n  baseURL: '',\n  headers: {}\n});\n\n\ninstance.get('/config.json').then(res => {\n  if (res.data && res.data.SERVICEBASEURI) {\n    const config = res.data;\n\n    sessionStorage.setItem('ApiBaseUrl', config.SERVICEBASEURI);\n\n    ReactDOM.render(\n      // <React.StrictMode>\n      //   <App />\n      // </React.StrictMode>\n      <Provider store={store}>\n        <Router history={history} basename={configuration.basename}>\n          <><Layout\n            Constants={Constants}\n            Service={Service.bind(null, config.SERVICEBASEURI, Axios)}\n          />\n            <ToastContainer style={{ width: \"500px\" }} limit={1} />\n          </>\n        </Router>\n      </Provider>\n      ,\n      rootElement\n    );\n  } else {\n    console.log('Error:', 'base API URL is missing..');\n\n  }\n\n})\n  .catch(err => {\n\n  })\n",["371","372"],"/home/mrayor/Documents/code/trail-web/src/src/store.js",[],"/home/mrayor/Documents/code/trail-web/src/src/history.js",[],"/home/mrayor/Documents/code/trail-web/src/src/configuration.js",[],"/home/mrayor/Documents/code/trail-web/src/src/Constants.js",[],"/home/mrayor/Documents/code/trail-web/src/src/Services.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/hocs/Layout.jsx",["373"],"import React, { Suspense } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Loader from \"../Loader/Loader\";\nimport ScrollToTop from \"../ScrollToTop\";\nimport Aux from \"../hocs/_Aux\";\n\nimport App from \"../../App\";\nimport Login from \"../../views/Login/Login\";\nimport CreateAccount from \"../../views/Create/CreateAccount\";\nimport PublishedForm from \"../../views/PublishedForm\";\n\nexport class Layout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Aux>\n        <ScrollToTop>\n          <Suspense fallback={<Loader />}>\n            <Switch>\n              <Router>\n                {/* All unthenticated Routes will go here */}\n                {/* login, reset-password, update-password */}\n                <Route exact path=\"/:id\" render={(props) => <PublishedForm {...this.props} />}/>\n\n\n                <Route path={\"/\"} exact render={(props) => <Login {...this.props} />} />\n\n                <Route path={\"/create\"} exact render={(props) => <CreateAccount {...this.props}/>} />\n\n               \n                {/* This layout with house a layout containing all authenticated routes */}\n                <Route\n                  path=\"/app\"\n                  render={(props) => (\n                    <App {...this.props} {...props} />\n                  )}\n                />\n              </Router>\n            </Switch>\n          </Suspense>\n        </ScrollToTop>\n      </Aux>\n    );\n  }\n}\nconst initialValue = {\n  userData: {\n    firstname: \"John\",\n  },\n  impactManager: {\n    name: \"\",\n    description: \"\",\n    code: \"\",\n    projectLocation: \"\",\n    sdgs: [],\n    indicators: [],\n  },\n};\n\nexport default Layout;\n","/home/mrayor/Documents/code/trail-web/src/src/appHelpers/appHelpers.js",["374","375","376","377","378","379","380","381","382","383","384","385"],"import swal from \"sweetalert2\";\nimport { toast } from \"react-toastify\";\n\nexport const appHelpers = {\n  returnLabelsforDonut: (arr) => {\n    let label = [];\n    for (let i in arr) {\n      label.push(arr[i][0]);\n    }\n    return label;\n  },\n  alertError: (message, duration) => {\n    toast.error(message, {\n      position: toast.POSITION.TOP_CENTER,\n      autoClose: duration,\n    });\n  },\n  toCapitalLetters: (value) => {\n    if (typeof value === \"string\") {\n      return value.toLocaleUpperCase();\n    }\n  },\n  formatLargeNumbers: (x) => {\n    if (isNaN(x)) return x;\n\n    if (x < 9999) {\n      return x;\n    }\n\n    if (x < 1000000) {\n      return Math.round(x / 1000) + \"K\";\n    }\n    if (x < 10000000) {\n      return (x / 1000000).toFixed(2) + \"M\";\n    }\n\n    if (x < 1000000000) {\n      return Math.round(x / 1000000) + \"M\";\n    }\n\n    if (x < 1000000000000) {\n      return Math.round(x / 1000000000) + \"B\";\n    }\n\n    return \"1T+\";\n  },\n\n  returnIndicatorsOnly : (indicators)=>{\n    let ind =[]\n    let f = indicators.filter((o) => o.status === true)\n    for(let i in f){\n      ind.push(parseInt(f[i].id))\n    }\n    return ind;\n  },\n  countProjectIndicators : (sdgs) =>{\n    let projectIndicators = [];\n    for(let i in sdgs){\n      const indicators = sdgs[i].indicators\n      projectIndicators.push(indicators)\n    }\n    return projectIndicators.length\n  },\n  formatSdgsIndicatorsPayload : (finalSdgChecks) =>{\n    let sdgs = []\n    for(let i in finalSdgChecks){\n      sdgs.push({\n        indicators:finalSdgChecks[i].indicators,\n        id:finalSdgChecks[i].id\n      })\n    }\n    return sdgs\n  },\n  returnSelectedSdgs: (sdgCheckBoxes, sdgDump) => {\n    Object.entries(sdgCheckBoxes).forEach(([key, value]) => {\n      if (value === false) {\n        delete sdgCheckBoxes[key];\n      }\n    });\n    return Object.keys(sdgCheckBoxes).map((id) =>\n      sdgDump.find((sdg) => sdg.id === id)\n    );\n  },\n\n  addDots: (value) => {\n    let valueCopy = value.substring(0, 20);\n    if (value.length > 15) return (valueCopy += \"...\");\n    else return value;\n  },\n\n  returnIndicators: (sdgCheckBoxes, sdgDump) => {\n    const filtered = appHelpers.returnSelectedSdgs(sdgCheckBoxes, sdgDump);\n    const returnedIndicators = [];\n    filtered.map((filteredItem, index) => {\n      filteredItem.indicators.map((item, index) => {\n        returnedIndicators.push({\n          value: item.description,\n          status: false,\n          sdgId: filteredItem.id,\n        });\n      });\n    });\n    //console.log(\"asjaskj\",filtered)\n    return returnedIndicators;\n  },\n\n  indicatorSummary: (sdgChecks) => {\n    const returnedIndicators = [];\n\n    sdgChecks.map((item, index) => {\n      item.indicators.map((indicator, indicatorIndex) => {\n        if (indicator.status === true) {\n          returnedIndicators.push({\n            description: indicator.description,\n            SdgId: item.id,\n          });\n        }\n      });\n    });\n    return returnedIndicators;\n  },\n\n  formatApiMapData: (apiGeoData) => {\n    const returnedLocations = [];\n    let count = 0;\n\n    apiGeoData.map((geolocation, geolocationIndex) => {\n      returnedLocations.push({\n        id: count++,\n        shelter: geolocation.Area,\n        latitude: parseFloat(geolocation.Latitude),\n        longitude: parseFloat(geolocation.Longitude),\n      });\n    });\n    return returnedLocations;\n  },\n  formatMapData: (dashboardData) => {\n    const returnedLocations = [];\n    let count = 0;\n\n    dashboardData.map((item, index) => {\n      item.GeoLocations.map((geolocation, geolocationIndex) => {\n        returnedLocations.push({\n          id: count++,\n          latitude: parseFloat(geolocation.Latitude),\n          longitude: parseFloat(geolocation.Longitude),\n        });\n      });\n    });\n    return returnedLocations;\n  },\n\n  returnApiMapDefaultCenter: (apiGeoData) => {\n    const defautlCenter = [];\n    let count = 0;\n\n    apiGeoData.map((geolocation, geolocationIndex) => {\n      defautlCenter.push({\n        lat: parseFloat(geolocation.Latitude),\n        lng: parseFloat(geolocation.Longitude),\n      });\n    });\n    return defautlCenter[0];\n  },\n\n  returnMapDefaultCenter: (dashboardData) => {\n    const defautlCenter = [];\n    let count = 0;\n\n    dashboardData.map((item, index) => {\n      item.GeoLocations.map((geolocation, geolocationIndex) => {\n        defautlCenter.push({\n          lat: parseFloat(geolocation.Latitude),\n          lng: parseFloat(geolocation.Longitude),\n        });\n      });\n    });\n    return defautlCenter[0];\n  },\n\n  containsObject: (obj, list) => {\n    var i;\n    for (i = 0; i < list.length; i++) {\n      if (list[i].id === obj.id) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  filterSdgById: (id, allIndicators) => {\n    let filtered = allIndicators.filter((item) => {\n      return item.sdgId === id;\n    });\n    return filtered;\n  },\n  returnSdgNameById: (id, sdgDump) => {\n    let filtered = sdgDump.filter((item) => {\n      return item.id === id;\n    });\n    const filteredObj = Object.assign({}, ...filtered);\n    return filteredObj.description;\n  },\n  setIndicatorCheckBoxes: (indicators, index) => {\n    let isTrue = false;\n    Object.keys(indicators).forEach(function (key) {\n      isTrue = key === index ? true : false;\n    });\n    return isTrue;\n  },\n  validateImpactFormOne: (context) => {\n    let _errs_ = {};\n    let formValid = true;\n    if (context.state.name === \"\") {\n      _errs_[\"name\"] = true;\n      formValid = false;\n    }\n    if (context.state.code === \"\") {\n      _errs_[\"code\"] = true;\n      formValid = false;\n    }\n    if (context.state.description === \"\") {\n      _errs_[\"description\"] = true;\n      formValid = false;\n    }\n    if (context.state.projectLocation === \"\") {\n      _errs_[\"projectLocation\"] = true;\n      formValid = false;\n    }\n\n    context.setState({ formOneErrors: _errs_ });\n    return formValid;\n  },\n\n  validateImpactFormTwo: (context) => {\n    let _errs_ = {};\n    let formValid = true;\n    if (Object.keys(context.state.sdgCheckBoxes).length === 0) {\n      _errs_[\"sdg\"] = true;\n      formValid = false;\n    }\n    context.setState({ formTwoErrors: _errs_ });\n    return formValid;\n  },\n  validateImpactFormThree: (context) => {\n    let _errs_ = {};\n    let formValid = true;\n    if (Object.keys(context.state.indicatorCheckBoxes).length === 0) {\n      _errs_[\"indicator\"] = true;\n      formValid = false;\n    }\n    context.setState({ formThreeErrors: _errs_ });\n    return formValid;\n  },\n\n  failedRequestAlert: (message, timer = 2000) => {\n    swal.fire({\n      titleText: \"Sorry!\",\n      text: message,\n      icon: \"error\",\n      timer: timer,\n      showConfirmButton: true,\n    });\n  },\n\n  canceledRequestAlert: (message, timer = 2000) => {\n    swal.fire({\n      titleText: \"Too bad\",\n      text: message,\n      icon: \"error\",\n      timer: timer,\n      showConfirmButton: true,\n    });\n  },\n\n  successMessageAlert: (message, timer = 2000) => {\n    swal.fire({\n      titleText: \"Success!\",\n      text: message,\n      icon: \"success\",\n      timer: timer,\n      showConfirmButton: true,\n    });\n  },\n};\n","/home/mrayor/Documents/code/trail-web/src/src/App.js",["386","387","388","389","390"],"import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport Dashboard from \"./views/Dashboard/Dashboard\";\nimport Projects from \"./views/Projects/Projects\";\nimport Overview from \"./views/ProjectOverview/Overview\";\nimport Manager from \"./views/Impact/Manager\";\nimport Login from \"./views/Login/Login\";\nimport setAuthToken from \"../src/utils/setAuthToken\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport CreateAccount from \"./views/Create/CreateAccount\";\nimport FormManager from \"./views/FormManager/FormManager\";\nimport FormBuild from \"./views/FormBuilder/FormBuild\";\nimport { appHelpers } from \"./appHelpers/appHelpers\";\nimport FormPreview from \"./views/FormPreview\";\nimport PublishedForm from \"./views/PublishedForm\";\n\n// if (localStorage.token) {\n//   setAuthToken(localStorage.token);\n//   console.log(localStorage.token)\n// }\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: \"\",\n      ServiceBase: null,\n      userData: null,\n    };\n  }\n\n  componentDidMount() {\n    let token = JSON.parse(localStorage.getItem(\"TRAIL_TOKEN\"));\n    let user = JSON.parse(localStorage.getItem(\"TRAIL_USER\"));\n    if (token !== null && user !== null) {\n      const AUTH_TOKEN = `${token}`;\n      // the token in LocalStorage was set on Login\n      this.setState({ token: AUTH_TOKEN, userData: user }, () => {\n        this.setState({\n          ServiceBase: this.props.Service(this.state.token, this.props.history),\n        });\n        this.setState({ sending: false });\n      });\n    } else {\n      appHelpers.alertError(\"Invalid session, login again.\");\n      this.props.history.push(\"/\");\n    }\n\n    // api call would be made to get detailed user information then the user state would be set and cascaded to all wrapper.\n  }\n  render() {\n    const { ServiceBase, sending, userData } = this.state;\n    return (\n      <Provider store={store}>\n        {ServiceBase !== null && sending === false && userData !== null && (\n          <Switch>\n            {/* <Route exact path=\"/\" component={Login} /> */}\n            {/* <Route exact path=\"/create\" component={CreateAccount} /> */}\n            {/* <Route exact path=\"/app/dashboard\" component={Dashboard} /> */}\n            <Route\n              exact\n              path=\"/app/dashboard\"\n              render={(props) => (\n                <Dashboard\n                  {...props}\n                  {...this.state}\n                  userData={userData}\n                  {...this.props}\n                  ServiceBase={ServiceBase}\n                  Constants={this.props.Constants}\n                />\n              )}\n            />\n\n            <Route\n              path=\"/app/dashboard/projects\"\n              exact\n              render={(props) => (\n                <Projects\n                  {...props}\n                  {...this.state}\n                  userData={userData}\n                  {...this.props}\n                  ServiceBase={ServiceBase}\n                  Constants={this.props.Constants}\n                />\n              )}\n            />\n            <Route\n              path=\"/app/dashboard/overview\"\n              exact\n              render={(props) => (\n                <Overview\n                  {...props}\n                  {...this.state}\n                  userData={userData}\n                  {...this.props}\n                  ServiceBase={ServiceBase}\n                  Constants={this.props.Constants}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/app/dashboard/manager\"\n              render={(props) => (\n                <Manager\n                  {...props}\n                  {...this.state}\n                  userData={userData}\n                  {...this.props}\n                  ServiceBase={ServiceBase}\n                  Constants={this.props.Constants}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/app/dashboard/form\"\n              render={(props) => (\n                <FormManager\n                  {...props}\n                  {...this.state}\n                  userData={userData}\n                  {...this.props}\n                  ServiceBase={ServiceBase}\n                  Constants={this.props.Constants}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/app/dashboard/build_form\"\n              render={(props) => (\n                <FormBuild\n                  {...props}\n                  {...this.state}\n                  userData={userData}\n                  {...this.props}\n                  ServiceBase={ServiceBase}\n                  Constants={this.props.Constants}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/app/dashboard/build_form/:id\"\n              render={(props) => (\n                <FormBuild\n                  {...props}\n                  {...this.state}\n                  userData={userData}\n                  {...this.props}\n                  ServiceBase={ServiceBase}\n                  Constants={this.props.Constants}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/app/dashboard/form/preview/:id\"\n              render={(props) => (\n                <FormPreview\n                  {...props}\n                  {...this.state}\n                  userData={userData}\n                  {...this.props}\n                  ServiceBase={ServiceBase}\n                  Constants={this.props.Constants}\n                />\n              )}\n            />\n\n          </Switch>\n        )}\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","/home/mrayor/Documents/code/trail-web/src/src/components/Loader/Loader.js",[],"/home/mrayor/Documents/code/trail-web/src/src/views/Create/CreateAccount.js",[],"/home/mrayor/Documents/code/trail-web/src/src/views/Login/Login.js",["391","392"],"import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport LoginForm from \"../../../src/components/LoginForm\";\n\nconst Login = (props) => {\n  return (\n    <div>\n      <LoginForm {...props}/>\n    </div>\n  );\n};\n\nexport default Login;\n","/home/mrayor/Documents/code/trail-web/src/src/reducers/index.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/ScrollToTop/index.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/hocs/_Aux/index.js",[],"/home/mrayor/Documents/code/trail-web/src/src/views/Projects/Projects.js",["393","394","395","396"],"import React, { Component, Fragment } from \"react\";\nimport { Layout } from \"antd\";\nimport Navbar from \"../../../src/layouts/layout-components/menu\";\nimport SideBar from \"../../../src/layouts/layout-components/sidebar\";\nimport FooterTab from \"../../../src/layouts/layout-components/footer\";\n// import ProjectsCard from \"../../components/ProjectsCard/index.js\";\nimport { Grid, Paper, withStyles } from \"@material-ui/core\";\nimport ImageCard from \"../../components/Card/ImageCard\";\nimport axios from \"axios\";\nimport { appConstants } from \"../../constants/app.constants\";\nimport { connect } from \"react-redux\";\nimport CatalogMagic from \"../../components/Loader/CatalogMagic\";\nimport { Link } from \"react-router-dom\";\nimport \"./index.css\"\nconst { Content } = Layout;\n\nconst styles = theme => ({\n\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n});\nexport class Projects extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: [],\n      loading: true\n    }\n  }\n\n\n\n  componentDidMount = () => {\n\n    const {ServiceBase, Constants} = this.props;\n    ServiceBase.getItems(Constants.PROGRAMS)\n      .then(({ data }) => {\n        this.setState({ projects: data.data }, () => {\n          this.setState({ loading: false })\n        })\n      })\n  }\n\n\n  renderProjectList = (projects) => {\n    let projectElem = []\n    for (let i in projects) {\n      projectElem.push(\n        <Grid item xs={12} sm={4} key={projects[i].id}>\n          <ImageCard\n            name={projects[i].name}\n            code={projects[i].code}\n            handleOverview={this.handleOverview}\n            id={projects[i].id}\n            image={projects[i].image}\n            sdgs={projects[i].sdgs}\n          />\n        </Grid>\n      )\n    }\n    return projectElem\n  }\n\n  handleOverview = (id,name) => {\n    this.props.history.push({\n      pathname: '/app/dashboard/overview',\n      state: { detail: id ,name:name }\n    })\n  }\n  render() {\n\n\n    const { classes } = this.props;\n    const { projects, loading } = this.state;\n    return (\n      <div>\n        <Fragment>\n          <Layout style={{ minHeight: \"100vh\" }}>\n            <SideBar userData={this.props.userData} history={this.props.history}/>\n            <Layout className=\"site-layout\">\n              <Navbar userData={this.props.userData} history={this.props.history}/>\n              <Content style={{ margin: \"0 16px\" }}>\n                <h1 style={h1}>Program</h1>\n                {!loading && projects.length === 0&&\n                  <div>\n                  <h3>\n                    When you add new projects, It would appear here!,{\" \"}\n                    <Link to=\"/app/dashboard/manager\">Click to add</Link>{\" \"}\n                  </h3>\n                </div>\n                }\n                <Grid container spacing={3}>\n                  {loading &&\n                    [0, 1, 2, 3, 4, 5].map((index) => {\n                      return (\n                        <Grid item xs={12} sm={4} key={index}>\n                          <CatalogMagic />\n                        </Grid>\n                      )\n                    })\n\n                  }\n                  {!loading && this.renderProjectList(projects)}\n\n\n                </Grid>\n              </Content>\n              <FooterTab />\n            </Layout>\n          </Layout>\n        </Fragment>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\n// export default connect(mapStateToProps, {})(ProjectsCard);\n\nexport default withStyles(styles)(connect(mapStateToProps, {})(Projects))\n\n\nconst h1 = {\n  fontWeight: \"700\",\n  fontSize: \"23px\",\n  padding: \"16px\",\n  paddingLeft: \"0px\",\n  marginTop: \"80px\",\n};\n","/home/mrayor/Documents/code/trail-web/src/src/views/ProjectOverview/Overview.js",["397","398","399","400"],"import React, { Component, Fragment } from \"react\";\nimport { Layout, Row, Col } from \"antd\";\n\nimport Navbar from \"../../../src/layouts/layout-components/menu\";\nimport SideBar from \"../../../src/layouts/layout-components/sidebar\";\nimport FooterTab from \"../../../src/layouts/layout-components/footer\";\nimport IndicatorsCard from \"../../components/IndicatorsCard\";\nimport Indicators from \"../../components/PerformanceIndicators\";\nimport axios from \"axios\";\nimport { appConstants } from \"../../constants/app.constants\";\nimport { connect } from \"react-redux\";\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\nconst { Content } = Layout;\n\nexport class Overview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectDetails: {},\n      projectName: \"\",\n      loading: true,\n      projectId: null\n    };\n  }\n\n  componentDidMount = () => {\n    const { ServiceBase, Constants } = this.props;\n    if (\n      this.props.location &&\n      this.props.location.state &&\n      this.props.location.state.detail\n    ) {\n      console.log(this.props.location)\n      const { detail, name } = this.props.location.state;\n      this.setState({ projectName: name, projectId: detail });\n      ServiceBase &&\n        ServiceBase.getDataUsingId(Constants.PROGRAMS, detail).then(\n          ({ data }) => {\n            this.setState({ projectDetails: data.data }, () => {\n              this.setState({ loading: false });\n            });\n          }\n        );\n    } else {\n      this.props.history.push(\"/dashboard/projects\");\n    }\n  };\n  render() {\n    const { projectDetails, projectName, loading, projectId } = this.state;\n    return (\n      <div>\n        <Fragment>\n          <Layout style={{ minHeight: \"100vh\" }}>\n            <SideBar\n              userData={this.props.userData}\n              history={this.props.history}\n            />\n            <Layout className=\"site-layout\">\n              <Navbar\n                userData={this.props.userData}\n                history={this.props.history}\n              />\n              <Content style={{ margin: \"0 16px\" }}>\n                <h1 style={h1}>{projectName}</h1>\n                <div>\n                  <IndicatorsCard\n                    sdgCount={projectDetails.sdgs && projectDetails.sdgs.length}\n                    indicatorCount={appHelpers.countProjectIndicators(\n                      projectDetails.sdgs && projectDetails.sdgs\n                    )}\n                    loading={loading}\n                    totalNumberOfBeneficiaries={\n                      projectDetails.totalNumberOfBeneficiaries\n                    }\n                    budget={projectDetails.budget}\n                  />\n                </div>\n                <div\n                  className=\"site-layout-background\"\n                  style={{ padding: 24, minHeight: 360 }}\n                >\n                  <div>\n                    <Indicators projectDetails={projectDetails} programId={projectId} service={this.props.ServiceBase} />\n                  </div>\n                </div>\n              </Content>\n              <FooterTab />\n            </Layout>\n          </Layout>\n        </Fragment>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, {})(Overview);\n\nconst h1 = {\n  fontWeight: \"700\",\n  fontSize: \"23px\",\n  padding: \"16px\",\n  paddingLeft: \"0px\",\n  marginTop: \"80px\",\n};\n","/home/mrayor/Documents/code/trail-web/src/src/views/Impact/Manager.js",[],"/home/mrayor/Documents/code/trail-web/src/src/utils/setAuthToken.js",[],"/home/mrayor/Documents/code/trail-web/src/src/views/FormManager/FormManager.js",["401","402","403"],"import React, { Fragment } from \"react\";\nimport FormIO from \"../../components/FormIO/Index\";\nimport { Layout, Row, Col } from \"antd\";\n\nimport Navbar from \"../../../src/layouts/layout-components/menu\";\nimport SideBar from \"../../../src/layouts/layout-components/sidebar\";\nimport FooterTab from \"../../../src/layouts/layout-components/footer\";\nimport CreateForm from \"../../components/FormIO/CreateForm\";\n\nconst { Content } = Layout;\n\nconst FormManager = (props) => {\n  const {userData,history, ServiceBase} = props\n  return (\n    <div>\n      <Fragment>\n        <Layout style={{ minHeight: \"100vh\" }}>\n          <SideBar userData={userData} history={history}/>\n          <Layout className=\"site-layout\">\n            <Navbar userData={userData} history={history}/>\n            <Content style={{ margin: \"0 16px\" }}>\n              <h1 style={h1}>Form Management</h1>\n              <CreateForm service={ServiceBase} />\n            </Content>\n            <FooterTab />\n          </Layout>\n        </Layout>\n      </Fragment>\n    </div>\n  );\n};\n\nexport default FormManager;\n\nconst h1 = {\n  fontWeight: \"700\",\n  fontSize: \"23px\",\n  padding: \"16px\",\n  paddingLeft: \"0px\",\n  marginTop: \"80px\",\n};\n","/home/mrayor/Documents/code/trail-web/src/src/views/FormBuilder/FormBuild.js",["404","405","406","407","408"],"import React, { Fragment } from \"react\";\nimport FormIO from \"../../components/FormIO/Index\";\nimport { Layout, Row, Col } from \"antd\";\nimport Navbar from \"../../../src/layouts/layout-components/menu\";\nimport SideBar from \"../../../src/layouts/layout-components/sidebar\";\nimport FooterTab from \"../../../src/layouts/layout-components/footer\";\nimport CreateForm from \"../../components/FormIO/CreateForm\";\nimport BuildForm from \"../../components/FormBuilder.js/BuildForm\";\n\nconst { Content } = Layout;\n\nclass FormBuild extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n        <Fragment>\n          <Layout style={{ minHeight: \"100vh\" }}>\n            <SideBar\n              userData={this.props.userData}\n              history={this.props.history}\n            />\n            <Layout className=\"site-layout\">\n              <Navbar\n                userData={this.props.userData}\n                history={this.props.history}\n              />\n              <Content style={{ margin: \"0 16px\" }}>\n                <h1 style={h1}>Form Management</h1>\n                <BuildForm service={this.props.ServiceBase} />\n              </Content>\n              <FooterTab />\n            </Layout>\n          </Layout>\n        </Fragment>\n      </div>\n    );\n  }\n}\nexport default FormBuild;\n\nconst h1 = {\n  fontWeight: \"700\",\n  fontSize: \"23px\",\n  padding: \"16px\",\n  paddingLeft: \"0px\",\n  marginTop: \"80px\",\n};\n","/home/mrayor/Documents/code/trail-web/src/src/views/Dashboard/Dashboard.js",["409","410","411","412","413","414"],"import React, { Component, Fragment, useEffect } from \"react\";\nimport { Layout, Row, Col } from \"antd\";\nimport Navbar from \"../../../src/layouts/layout-components/menu\";\nimport SideBar from \"../../../src/layouts/layout-components/sidebar\";\nimport FooterTab from \"../../../src/layouts/layout-components/footer\";\nimport ActionCard from \"../../../src/components/ActionCard\";\nimport ImpactMap from \"../../../src/components/ImpactMap\";\nimport FundingGraph from \"../../../src/components/FundingGraph\";\nimport DoughnutChart from \"../../../src/components/DoughnutChart\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getPrograms } from \"../../actions/projectAction\";\nimport { loadUser } from \"../../actions/authAuctions\";\nimport axios from \"axios\";\n\nconst { Content } = Layout;\n\nexport const Dashboard = (props) => {\n  // data = this.props\n  // componentDidMount() {\n\n  // }\n\n  // componentDidMount() {\n  //   console.log(\"props in dashboard\", this.props);\n  //   const { ServiceBase, Constants } = this.props;\n  // getPrograms(this.props.auth.data.accessToken, ServiceBase, Constants);\n  // }\n\n  const { token } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const { ServiceBase, Constants } = props;\n    dispatch(getPrograms(token));\n  }, [token, dispatch]);\n\n  const { userData, history, ServiceBase } = props;\n\n  return (\n    <div>\n      <Fragment>\n        <Layout\n          style={{\n            minHeight: \"100vh\",\n          }}\n        >\n          <SideBar userData={userData} history={history} />\n          <Layout className=\"site-layout\">\n            <Navbar {...props} userData={userData} history={history} />\n            <Content style={{ margin: \"0 16px\" }}>\n              <h1 style={h1}>Dashboard</h1>\n              <ActionCard ServiceBase={ServiceBase} />\n              <div>\n                <Row>\n                  <Col xs={{ span: 24 }} lg={{ span: 14 }}>\n                    <ImpactMap />\n                  </Col>\n                  <Col xs={{ span: 24 }} lg={{ span: 10 }}>\n                    <DoughnutChart />\n                  </Col>\n                </Row>\n              </div>\n            </Content>\n            <FooterTab />\n          </Layout>\n        </Layout>\n      </Fragment>\n    </div>\n  );\n};\n\nDashboard.propTypes = {\n  loadUser: PropTypes.func.isRequired,\n  getPrograms: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { loadUser, getPrograms })(Dashboard);\n\nconst h1 = {\n  fontWeight: \"700\",\n  fontSize: \"23px\",\n  padding: \"16px\",\n  paddingLeft: \"0px\",\n  marginTop: \"80px\",\n};\n","/home/mrayor/Documents/code/trail-web/src/src/components/CreateAcct/Index.js",["415","416","417"],"import React, { useState, useEffect } from \"react\";\nimport \"./Index.css\";\nimport { Form, Input, Button, Row, Col, Card, Checkbox, Tabs } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport LoginImg from \"../../assets/graphic_login.svg\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { setAlert } from \"../../actions/alertActions\";\nimport { register, clearErrors } from \"../../actions/authAuctions\";\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\nimport { Redirect } from \"react-router\";\nimport AlertInfo from \"../Alert/index\";\n\n/* eslint-disable */\nconst regEx = new RegExp(\n  /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[^\\w\\s]).{8,}$/\n);\n\nconst CreateAcct = (\n  {\n    setAlert,\n    error,\n    register,\n    isAuthenticated,\n    clearErrors,\n    registerSuccess,\n    Service,\n    Constants,\n  },\n  props\n) => {\n  useEffect(() => {\n    console.log(\"props in login\", Service, { Constants });\n\n    if (error === \"A user with this email already exists\") {\n      setAlert(error, \"error\");\n      clearErrors();\n    } //eslint-disable-next-line\n  }, [error, isAuthenticated, props.history]);\n\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const { firstName, lastName, email, password, password2 } = formData;\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const onFinish = async () => {\n    if (firstName === \"\" || lastName === \"\" || email === \"\") {\n      setAlert(\"Please enter all fields\", \"error\");\n    } else if (password.length < 8) {\n      setAlert(\"Password must be more than 8 characters\", \"warning\");\n    } else if (password != password2) {\n      setAlert(\"Check if passwords are equal\", \"warning\");\n    } else if (regEx.test(password) == false) {\n      setAlert(\n        \"Passwords must contain at least 1 Capital letter, 1 small letter and a special character\",\n        \"warning\"\n      );\n    } else {\n      const ServiceBase = Service(null, null);\n      register(\n        { firstName, lastName, email, password },\n        ServiceBase,\n        Constants\n      );\n    }\n  };\n\n  if (registerSuccess) {\n    appHelpers.successMessageAlert(\"Succesfully Registered, Login here\", 2000);\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div>\n      <div className=\"loginAltBg\" style={{ backgroundColor: \"#064E89\" }}>\n        <Row>\n          <Col xs={{ span: 0 }} lg={{ span: 10 }} className=\"login_container\">\n            <div className=\"left_container\">\n              <div>\n                {\" \"}\n                <h3\n                  className=\"loginH3\"\n                  style={{ color: \"#064E89\", textAlign: \"left\" }}\n                >\n                  Track your objectives using Trails.\n                </h3>\n                <p className=\"loginP\">\n                  Access to the most powerfull tool that allows you track your\n                  Objectives and Goals.{\" \"}\n                </p>\n              </div>\n              <img src={LoginImg} width=\"350px\" className=\"loginImg\" />\n            </div>\n          </Col>\n          <Col xs={{ span: 20 }} lg={{ span: 14 }} className=\"logins_container\">\n            <div className=\"right_container\">\n              <div className=\"logo\"></div>\n              <div className=\"cardWrap\">\n                <div>\n                  <Link to=\"/\">\n                    <span\n                      style={{\n                        fontSize: \"15px\",\n                        fontWeight: \"400\",\n                        color: \"#5183AD\",\n                        paddingBottom: \"10px\",\n                        marginRight: \"20px\",\n                        borderBottom: \"2px solid #5183AD\",\n                        marginBottom: \"30px\",\n                      }}\n                    >\n                      Login\n                    </span>\n                  </Link>\n                  <Link to=\"/create\">\n                    <span\n                      style={{\n                        fontSize: \"16px\",\n                        fontWeight: \"900\",\n                        color: \"#fff\",\n                        paddingBottom: \"10px\",\n                        marginRight: \"20px\",\n                        borderBottom: \"2px solid white\",\n                        marginBottom: \"30px\",\n                      }}\n                    >\n                      Register\n                    </span>\n                  </Link>\n                </div>\n                <div>\n                  <AlertInfo />\n                  <br />\n                  <Form\n                    name=\"normal_login\"\n                    className=\"login-form\"\n                    initialValues={{ remember: true }}\n                    onFinish={onFinish}\n                  >\n                    <Form.Item\n                      name=\"firstName\"\n                      rules={[\n                        { required: true, message: \"This field is compulsory\" },\n                      ]}\n                      style={{ marginBottom: \"15px\" }}\n                    >\n                      <Input\n                        style={{\n                          height: \"40px\",\n                          borderRadius: \"7px\",\n                          fontSize: \"0.9rem\",\n                          border: \"1px solid rgba(10,46,101,.1)\",\n                        }}\n                        placeholder=\"First Name\"\n                        name=\"firstName\"\n                        type=\"text\"\n                        value={firstName}\n                        onChange={onChange}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      name=\"lastName\"\n                      rules={[\n                        { required: true, message: \"This field is compulsory\" },\n                      ]}\n                      style={{ marginBottom: \"15px\" }}\n                    >\n                      <Input\n                        style={{\n                          height: \"40px\",\n                          borderRadius: \"7px\",\n                          fontSize: \"0.9rem\",\n                          border: \"1px solid rgba(10,46,101,.1)\",\n                        }}\n                        placeholder=\"Last Name\"\n                        name=\"lastName\"\n                        type=\"text\"\n                        value={lastName}\n                        onChange={onChange}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      name=\"email\"\n                      rules={[\n                        { required: true, message: \"Confirm your Input\" },\n                      ]}\n                      style={{ marginBottom: \"15px\" }}\n                    >\n                      <Input\n                        style={{\n                          height: \"40px\",\n                          borderRadius: \"7px\",\n                          fontSize: \"0.9rem\",\n                          border: \"1px solid rgba(10,46,101,.1)\",\n                        }}\n                        placeholder=\"E-mail Address\"\n                        type=\"email\"\n                        name=\"email\"\n                        type=\"text\"\n                        value={email}\n                        onChange={onChange}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      name=\"password\"\n                      rules={[\n                        { required: true, message: \"Confirm your Input\" },\n                      ]}\n                    >\n                      <Input.Password\n                        style={{\n                          height: \"40px\",\n                          borderRadius: \"7px\",\n                          fontSize: \"0.9rem\",\n                          border: \"1px solid rgba(10,46,101,.1)\",\n                        }}\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={onChange}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      name=\"password2\"\n                      rules={[\n                        { required: true, message: \"Confirm your Input\" },\n                      ]}\n                    >\n                      <Input.Password\n                        style={{\n                          height: \"40px\",\n                          borderRadius: \"7px\",\n                          fontSize: \"0.9rem\",\n                          border: \"1px solid rgba(10,46,101,.1)\",\n                        }}\n                        type=\"password\"\n                        name=\"password2\"\n                        placeholder=\"Re-type Password\"\n                        value={password2}\n                        onChange={onChange}\n                      />\n                    </Form.Item>\n                    <Row>\n                      <Col xs={{ span: 12 }} lg={{ span: 6 }}>\n                        {\" \"}\n                        <Form.Item>\n                          <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            className=\"loginBtn\"\n                          >\n                            Register\n                          </Button>\n                        </Form.Item>\n                      </Col>\n                    </Row>\n                  </Form>\n                </div>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nconst textLogin = {\n  textAlign: \"center\",\n  marginBottom: 10,\n  paddingBottom: 10,\n};\n\nCreateAcct.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  error: state.auth.error,\n  isAuthenticated: state.auth.isAuthenticated,\n  registerSuccess: state.auth.registerSuccess,\n});\n\nexport default connect(mapStateToProps, { setAlert, register, clearErrors })(\n  CreateAcct\n);\n","/home/mrayor/Documents/code/trail-web/src/src/views/PublishedForm/index.jsx",["418","419","420","421","422"],"import Layout, { Content } from 'antd/lib/layout/layout'\nimport React from 'react'\nimport FooterTab from '../../layouts/layout-components/footer'\nimport Navbar from '../../layouts/layout-components/menu'\nimport SideBar from '../../layouts/layout-components/sidebar'\nimport PublishedSection from '../../components/PublishedForm'\nimport { dummyForms } from '../../components/FormIO/constants'\nimport { startCase } from 'lodash'\n\nconst PublishedForm = (props) => {\n  console.log(props)\n    return (\n        <Layout style={{ minHeight: \"100vh\" }}>\n            <Content className=\"published-section-container\">\n              <PublishedSection service={props.Service(null,null)} />\n            </Content>\n            <FooterTab />\n        </Layout>\n    )\n}\n\nconst h1 = {\n  fontWeight: \"700\",\n  fontSize: \"23px\",\n  padding: \"16px\",\n  paddingLeft: \"0px\",\n  marginTop: \"80px\",\n};\n\n\nexport default PublishedForm\n","/home/mrayor/Documents/code/trail-web/src/src/reducers/authReducer.js",[],"/home/mrayor/Documents/code/trail-web/src/src/reducers/alertReducer.js",["423"],"import { SET_ALERT, REMOVE_ALERT } from \"../constants/Types\";\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state, action.payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== action.payload);\n    default:\n      return state;\n  }\n}\n","/home/mrayor/Documents/code/trail-web/src/src/reducers/formReducer.js",["424"],"import {FORM} from '../constants/Types'\n\nconst initialState = {\n    form: {},\n    error: null,\n    forms: [],\n    loading: false,\n    pagination: {},\n    answers: {},\n    programs: [],\n    indicatorQuestions: []\n}\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n        case FORM.setLoadingState:\n            return {...state, loading: payload}\n\n    case FORM.createFormSuccess:\n        return { ...state, form: payload, loading: false }\n    \n    case FORM.errors:\n        return {...state, forms:[], form: {}, error: payload, loading: false}\n\n    case FORM.getFormSuccess:\n            return { ...state, form: payload, loading: false }\n        \n        case FORM.getFormsSuccess:\n            return {...state, forms: payload.data, pagination: payload.pagination}\n    \n        case FORM.buildAnswers:\n            return {...state, answers: {...state.answers, [payload.questionId]: payload }}\n        \n            case FORM.getPrograms:\n                return {...state, programs: payload}\n\n    case FORM.getIndicatorQuestionSuccess:\n        return {...state, indicatorQuestions: payload}\n        \n    default:\n        return state\n    }\n}\n","/home/mrayor/Documents/code/trail-web/src/src/reducers/reportReducer.js",["425"],"import {REPORT} from '../constants/Types'\n\nconst initialState = {\n    reports:[],\n    errors: null,\n    loading: false,\n    programForms: []\n}\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n    case REPORT.setLoadingState:\n            return {...state, loading: payload}\n\n    case REPORT.getReportSuccess:\n        return { ...state, reports: payload, loading: false }\n    \n    case REPORT.errors:\n        return {...state, reports:[],  error: payload, loading: false}\n\n    case REPORT.getProgramFormsSuccess:\n        return {...state, programForms: payload, loading: false}\n\n    default:\n        return state\n    }\n}\n","/home/mrayor/Documents/code/trail-web/src/src/reducers/projectReducer.js",["426","427"],"import {\n  CREATE_PROJECT,\n  GET_PROJECT,\n  TEST_DISPATCH,\n  GET_PROGRAMS,\n  GET_BUDGET_AND_BENEFICIARIES,\n} from \"../constants/Types\";\n\nconst initialState = {\n  programs: [],\n  awarded: null,\n  disbursed: null,\n  loading: false,\n  totalbudget: \"\",\n  totalbeneficiaries: \"\",\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_PROGRAMS:\n      return {\n        ...state,\n        programs: action.payload,\n        loading: false,\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n      };\n    case CREATE_PROJECT:\n      return {\n        ...state,\n        ...action.payload,\n        projects: [...state.projects, action.payload],\n      };\n    case GET_BUDGET_AND_BENEFICIARIES:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n","/home/mrayor/Documents/code/trail-web/src/src/components/LoginForm/index.js",["428","429","430","431","432","433","434"],"import React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport { Form, Input, Button, Row, Col, Card, Checkbox, Tabs } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport LoginImg from \"../../assets/graphic_login.svg\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { setAlert } from \"../../actions/alertActions\";\nimport { login, clearErrors } from \"../../actions/authAuctions\";\nimport { Redirect } from \"react-router\";\nimport AlertInfo from \"../Alert/index\";\n\nconst LoginForm = (\n  { setAlert, error, login, isAuthenticated, clearErrors, auth,  Service, Constants },\n  props\n) => {\n  useEffect(() => {\n    console.log(\"props in login\",Service ,{Constants})\n\n    if (error) {\n      setAlert(error.data.message, \"error\");\n      clearErrors();\n    } //eslint-disable-next-line\n  }, [error, isAuthenticated, props.history]);\n\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const onFinish = async () => {\n\n    if (email === \"\") {\n      setAlert(\"Please enter all fields\", \"error\");\n    } else if (password === \"\") {\n      setAlert(\"Please enter all fields\", \"error\");\n    } else {\n      const ServiceBase = Service(null,null)\n      login(formData,ServiceBase,Constants );\n    }\n  };\n  if (isAuthenticated) {\n    return <Redirect to=\"/app/dashboard\" />;\n  }\n  return (\n    <div>\n      <div className=\"loginAltBg\" style={{ backgroundColor: \"#064E89\" }}>\n        <Row>\n          <Col xs={{ span: 0 }} lg={{ span: 10 }} className=\"login_container\">\n            <div className=\"left_container\">\n              <div>\n                {\" \"}\n                <h3\n                  className=\"loginH3\"\n                  style={{ color: \"#064E89\", textAlign: \"left\" }}\n                >\n                  Track your objectives using Trails.\n                </h3>\n                <p className=\"loginP\">\n                  Access to the most powerfull tool that allows you track your Objectives and Goals.\n                </p>\n              </div>\n              <img src={LoginImg} width=\"350px\" className=\"loginImg\" />\n            </div>\n          </Col>\n          <Col xs={{ span: 20 }} lg={{ span: 14 }} className=\"logins_container\">\n            <div className=\"right_container\">\n              <div className=\"logo\"></div>\n              <div className=\"cardWrap\">\n                <div style={{ marginBottom: \"30px\" }}>\n                  <Link to=\"/\">\n                    <span\n                      style={{\n                        fontSize: \"16px\",\n                        fontWeight: \"900\",\n                        color: \"#fff\",\n                        paddingBottom: \"10px\",\n                        marginRight: \"20px\",\n                        borderBottom: \"2px solid white\",\n                        marginBottom: \"30px\",\n                      }}\n                    >\n                      Login\n                    </span>\n                  </Link>\n                  <Link to=\"/create\">\n                    <span\n                      style={{\n                        fontSize: \"15px\",\n                        fontWeight: \"400\",\n                        color: \"#5183AD\",\n                        paddingBottom: \"10px\",\n                        marginRight: \"20px\",\n                        borderBottom: \"2px solid #5183AD\",\n                        marginBottom: \"30px\",\n                      }}\n                    >\n                      Register\n                    </span>\n                  </Link>\n                </div>\n                <div>\n                  <AlertInfo />\n                  <br />\n                  <Form\n                    name=\"normal_login\"\n                    className=\"login-form\"\n                    initialValues={{ remember: true }}\n                    onFinish={onFinish}\n                  >\n                    <Form.Item\n                      name=\"email\"\n                      rules={[\n                        { required: true, message: \"Confirm your Input\" },\n                      ]}\n                      style={{ marginBottom: \"15px\" }}\n                    >\n                      <Input\n                        style={{\n                          height: \"40px\",\n                          borderRadius: \"7px\",\n                          fontSize: \"0.9rem\",\n                          border: \"1px solid rgba(10,46,101,.1)\",\n                        }}\n                        placeholder=\"E-mail Address\"\n                        type=\"email\"\n                        name=\"email\"\n                        value={email}\n                        onChange={onChange}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      name=\"password\"\n                      rules={[\n                        { required: true, message: \"Confirm your Input\" },\n                      ]}\n                    >\n                      <Input.Password\n                        style={{\n                          height: \"40px\",\n                          borderRadius: \"7px\",\n                          fontSize: \"0.9rem\",\n                          border: \"1px solid rgba(10,46,101,.1)\",\n                        }}\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={onChange}\n                      />\n                    </Form.Item>\n                    <Row>\n                      <Col xs={{ span: 12 }} lg={{ span: 6 }}>\n                        {\" \"}\n                        <Form.Item>\n                          <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            className=\"loginBtn\"\n                          >\n                            Login\n                          </Button>\n                        </Form.Item>\n                      </Col>\n                      <Col xs={{ span: 12 }} lg={{ span: 12 }}>\n                        {\" \"}\n                        <Link to=\"/\">\n                          <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            className=\"forgetBtn\"\n                          >\n                            Forgot Password ?\n                          </Button>\n                        </Link>\n                      </Col>\n                    </Row>\n                  </Form>\n                </div>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nconst textLogin = {\n  textAlign: \"center\",\n  marginBottom: 10,\n  paddingBottom: 10,\n};\n\nLoginForm.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  login: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  error: state.auth.error,\n  isAuthenticated: state.auth.isAuthenticated,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { setAlert, login, clearErrors })(\n  LoginForm\n);\n","/home/mrayor/Documents/code/trail-web/src/src/components/Loader/CatalogMagic.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/Card/ImageCard.js",["435","436","437","438"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Row, Col } from \"antd\";\nimport modulestyle from \"./imagecard.module.css\"\nconst useStyles = makeStyles({\n  root: {\n    // maxWidth: 345,\n  },\n});\n\nconst ImageCard = ({ name, image, code ,handleOverview,id,sdgs}) => {\n  const classes = useStyles();\n\n\n const renderSdgs = (sdgs) =>{\n    let sdgElems = [];\n    for(let i in sdgs){\n      const lastIndex = sdgs.length - 1;\n      sdgElems.push(\n            <>\n        <label className=\"p-0 m-0\">SDG {`${sdgs[i].sdgId} `} {i != (sdgs.length-1) ? ', ' : ''}</label>\n            </>\n        )\n    }\n    return sdgElems;\n}\n  return (\n    <Card className={classes.root}>\n        <CardMedia\n          component=\"img\"\n          alt=\"Contemplative Reptile\"\n          height=\"290\"\n          image={image}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <div>\n              {\" \"}\n              <h3>{name}</h3>\n            </div>\n            <div>\n              {\" \"}\n              <h4 style={{color:\"#53d1be\",fontWeight:\"bold\"}}>{code}</h4>\n            </div>\n          </div>\n          <Row>\n              <Col md=\"3\">\n                <div>\n                  <label className=\"p-0 m-0\">LOCATION</label>\n                </div>\n                <div>\n                  <label className=\"p-0 m-0\">Nigeria</label>\n                </div>\n              </Col>\n              <div className={modulestyle.vl}></div>\n              <Col md=\"5\"style={{marginLeft:\"10px\"}}>\n                <div>\n                  <label className=\"p-0 m-0\">IMPACT</label>\n                </div>\n                <div style={{width:\"max-content\"}}>\n                  <div style={{ display: \"flex\" }}>\n                    {renderSdgs(sdgs)}\n                  </div>\n                </div>\n              </Col>\n            </Row>\n          {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Lizards are a widespread group of squamate reptiles, with over 6,000\n            species, ranging across all continents except Antarctica\n          </Typography> */}\n        </CardContent>\n      <CardActions>\n        <Button size=\"large\" color=\"primary\" onClick={(e)=>handleOverview(id,name)} className=\"projectButton\">\n          Overview\n        </Button>\n        \n      </CardActions>\n    </Card>\n  );\n};\n\nexport default ImageCard;\n","/home/mrayor/Documents/code/trail-web/src/src/constants/app.constants.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/FormIO/Index.js",["439"],"import React from \"react\";\nimport { FormBuilder } from \"react-formio\";\nimport \"./styles.scss\";\nimport \"./Index.css\";\nconst FormIO = () => {\n  return (\n    <div>\n    \n    </div>\n  );\n};\n\nexport default FormIO;\n","/home/mrayor/Documents/code/trail-web/src/src/components/FormIO/CreateForm.js",["440","441"],"import React,{useEffect, useState} from \"react\";\nimport { Row, Col, Layout, Card, Typography, Pagination, Skeleton,Dropdown,Menu } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport './styles.scss'\nimport {getForms,deleteForm} from '../../actions/formActions'\nimport { useSelector, useDispatch } from 'react-redux'\nimport background from '../../assets/background123.svg'\nimport {MoreOutlined} from '@ant-design/icons'\nimport { FORM } from \"../../constants/Types\";\n\nconst FormCard = ({title,id,page,service}) => {\n  const {token} = useSelector(state => state.auth)\nconst dispatch = useDispatch()\n  const menu = (\n    <Menu>\n      <Menu.Item onClick={() => dispatch(deleteForm(id,service))} danger>Delete</Menu.Item>\n    </Menu>\n  )\n\n  return (\n    <Card\n    cover={<img alt=\"example\" className=\"form-card-image\" src={background} />}\n    className=\"form-card\"\n  >\n    <div className=\"form-card-text-wrapper\">\n    <Link to={`/app/dashboard/form/preview/${id}`}>\n        <Typography.Paragraph className=\"form-card-text\" ellipsis={{\n        rows:2,\n      }}>{title}</Typography.Paragraph>\n    </Link>\n    </div>\n    <div style={{textAlign:'right', cursor:'pointer'}}>\n      <Dropdown trigger={['click','hover']} placement=\"bottomCenter\" overlay={menu}>\n        <MoreOutlined />\n      </Dropdown>\n    </div>\n  </Card>\n  )\n} \n\nconst CreateForm = ({service}) => {\n  const dispatch = useDispatch()\n  const {token} = useSelector(state => state.auth)\n  const { forms, pagination,loading } = useSelector(state => state.form)\n  const [page, setPage] = useState(1)\n  const handlePageChange = (_page) => setPage(_page)\n\n  useEffect(() => {\n    dispatch(getForms(service, page))\n  },[dispatch, service,page])\n\n  const handleReset = () => dispatch({type: FORM.getFormSuccess,payload: {}})\nconsole.log(forms)\n  return (\n    <Layout className=\"create-form\">\n      <Row gutter={[16, 16]}>\n        <Col span={8}>\n          <h1 className=\"create-form-title\" >Create new form</h1>\n          <Link onClick={handleReset} to=\"/app/dashboard/build_form\">\n            <Card className=\"create-form-new-form\">\n              <h1 className=\"create-form-plus\">+</h1>\n            </Card>\n          </Link>\n        </Col>\n        <Col span={16}>\n          <h6 className=\"create-form-title\">Available Forms</h6>\n          <Row gutter={[16, 16]}>\n            {loading ? <Skeleton /> : forms?.map(({name,id},idx) => (\n              <Col key={name} span={6}>\n                  <FormCard title={name} id={id} page={page} service={service} />\n              </Col>\n            ))}\n          </Row>\n          <Row gutter={[16, 16]} style={{marginTop: 20}}>\n              <Col>\n              <Pagination\n                current={pagination?.currentPage || 1}\n                hideOnSinglePage\n                pageSize={pagination?.limit || 0}\n                pageSizeOptions={[10, 20, 50, 100]}\n                onChange={handlePageChange}\n                total={(+pagination?.totalPages || 0) * (+pagination?.limit || 0)}\n              />\n              </Col>\n           </Row>\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n\nexport default CreateForm;\n","/home/mrayor/Documents/code/trail-web/src/src/components/FormBuilder.js/BuildForm.js",["442","443","444","445","446","447"],"import React, { useEffect, useReducer, useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  Input,\n  Button,\n  Select,\n  Divider,\n  message,\n  InputNumber,\n  Dropdown,\n  Menu\n} from \"antd\";\nimport \"./index.css\";\nimport { COMPONENT_TYPES } from '../../appHelpers/constants'\nimport { MinusCircleOutlined} from \"@ant-design/icons\";\nimport { connect,useDispatch, useSelector } from \"react-redux\";\nimport { createForm, getPrograms,getIndicatorQuestion, getForm, updateForm } from '../../actions/formActions'\nimport { camelCase, flatten, isEmpty, omit } from \"lodash\";\nimport {useHistory} from 'react-router-dom'\nimport { dummyQuestionLibrary } from \"./constants\";\nimport {useParams} from 'react-router-dom'\n\nconst { Option } = Select;\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'components':\n     return {...state, components: payload}\n    case 'formData':\n      return {...state, [payload.name]: payload.value}\n    case 'builderType':\n      return { ...state, builderType: payload }\n    case 'customQuestionInput':\n      return {...state, customQuestionInput: {...state.customQuestionInput, [payload.id]: payload.value}}\n    case 'updateForm':\n      console.log('testing',{...state,...payload})\n      return {...state, ...payload}\n    default:\n      return state\n  }\n}\n\nconst transformNonEventChange = ({ name, value }) => {\n    const event = {\n        target: {},\n    };\n    event.target.name = name;\n    event.target.value = value;\n\n    return event;\n};\n\nconst BuildForm = ({service}) => {\n  const initialState = {\n    title: \"\",\n    display: \"form\",\n    type: \"form\",\n    name: \"\",\n    program: \"\",\n    instructions: \"\",\n    buttonType:\"submit\",\n    buttonValue: \"Submit\",\n    customQuestionInput: {},\n    components: []\n  }\n  const {id} = useParams()\n  const [state, dispatch] = useReducer(reducer,initialState)\n  const { title,name,program,instructions, components, customQuestionInput } = state\n\n  const reduxDispatch = useDispatch()\n  const token = useSelector(state => state.auth.token)\n  const projects = useSelector(state => state.projects.projects)\n  const loadingState = useSelector(state => state.form.loading)\n  const programs = useSelector(state => state.form.programs)\n  const {form} = useSelector(state => state.form)\n  const indicatorQuestions = useSelector(state =>  state.form.indicatorQuestions)\n\n  console.log({indicatorQuestions})\n  const history = useHistory()\n  const [indicatorId, setIndicatorId] = useState(null)\n\n  useEffect(() => {\n    reduxDispatch(getPrograms(service))\n  },[service,reduxDispatch])\n\n  useEffect(() => {\n    if(id){\n      reduxDispatch(getForm(id,service,true))\n      // \n    }\n\n    //eslint-disable-next-line\n},[])\n\nuseEffect(() => {\n  if(id){\n    dispatch({payload: {...form, title: form['form-title']}, type: 'updateForm'})\n  }\n},[form,id])\n\nconst onChange = (e) => {\n    dispatch({ payload: { name: e.target.name,value:e.target.value }, type:'formData'})\n  };\n  console.log(form)\n\n  const onFinish = () => {\n    if (!state?.components || !state?.components.length) {\n      return message.error('Please create some question fields')\n    }\n    console.log('iddddddd',id)\n    id ? reduxDispatch(updateForm(omit(state,['customQuestionInput','builderType']), service, id, history)) : reduxDispatch(createForm(omit(state,['customQuestionInput','builderType']), service, history))\n  }; \n\n  const selectedProgramSdgs = (_programId) => {\n    const selectedProgram = programs?.filter((program) =>  program?.id === _programId)\n    return selectedProgram[0]?.sdgs || []\n  }\nconsole.log(state)\n  const indicators = (sdgs) => flatten(sdgs?.map(({indicators}) => indicators))\n\n  const handleChangeBuilderType = (_type) => {  \n    if(isEmpty(state?.program)) return message.error('Please select a program')\n    dispatch({ payload: _type, type: 'builderType' })\n    switch (_type) {\n      case COMPONENT_TYPES.radio:\n       return dispatch({\n            payload: [\n                ...components,\n                {\n                question: \"\",\n                targetValue : null,\n                targetType : \"percentage\",\n                // type: COMPONENT_TYPES.radio,\n                inputType: COMPONENT_TYPES.radio,\n                input: true,\n                placeholder: \"\",\n                linkedIndicator : null,\n                indicatorquestion: \"\",\n                value:'number',\n                // values: [\n                //   {\n                //     label: \"Yes\",\n                //     value: \"1\",\n                //     shortcut: \"\"\n                //   },\n                //   {\n                //     label: \"No\",\n                //     value: \"2\",\n                //     shortcut: \"\"\n                //   },\n                // ],\n                },\n            ],\n            type: 'components',\n        });\n\n      case COMPONENT_TYPES.text:\n       return dispatch({\n            payload: [\n                ...components,\n                {\n                  input: true,\n                  // type: COMPONENT_TYPES.text,\n                  inputType: COMPONENT_TYPES.text,\n                  value: \"text\",\n                  placeholder: \"\",\n                  question: \"\",\n                  linkedIndicator : null,\n                  targetValue : null,\n                  targetType : \"percentage\",\n                  indicatorquestion: \"\"\n                },\n            ],\n            type: 'components',\n        });\n    \n      default:\n       return dispatch({payload:[...components], type: 'components'})\n    }\n \n  }\n\n  const BUILDER_TYPES = [\n    {\n      name: 'Text Input',\n      value: COMPONENT_TYPES.text\n    },\n    {\n      name: 'Radio Input',\n      value: COMPONENT_TYPES.radio\n    }\n  ]\n\n  const menu = (\n    <Menu style={{ display: 'flex', flexDirection: 'column' }}>\n      {BUILDER_TYPES?.map(({name,value}) => <Menu.Item key={value} onClick={()=> handleChangeBuilderType(value)}>{name}</Menu.Item> )}\n    </Menu>\n  )\n\n    const change = (e, idx) => {\n        const { name, value } = e.target;\n        components[idx][name] = value;\n        dispatch({ payload: [...components], type: 'components' });\n    };\n\n    const handleRemoveClick = (e, index) => {\n        e.stopPropagation();\n        const list = [...components];\n        const otherLists = list.filter((_, idx) => idx !== index);\n        dispatch({ payload: otherLists, type: 'components' });\n    };\n\n  const handleSelect = (id) => {\n    setIndicatorId(id)\n    reduxDispatch(getIndicatorQuestion(id, service))\n  }\n\n    return (\n    <div className=\"form-builder\">\n      <Row>\n        <Col span={24}>\n          <Form\n            name=\"normal_login\"\n            layout={\"vertical\"}\n            className=\"login-form\"\n            onFinish={onFinish}\n          >\n            <Card title={\"Create your custom form\"}>\n              <Row gutter={[16,16]}>\n                <Col span={8}>\n                  <Form.Item\n                    label={titleName}\n                    name=\"title\"\n                    rules={[{ required: true, message: \"Form title is required\" }]}\n                    style={{ marginBottom: \"15px\" }}\n                  >\n                    {/* {console.log(state['form-title'])} */}\n                    <Input\n                      type=\"text\"\n                      name=\"title\"\n                      value={title}\n                      onChange={onChange}\n                    />\n                  </Form.Item>\n                </Col>\n                <Col span={8}>\n                  {/* {console.log(program)} */}\n                  <Form.Item\n                    label={titleName2}\n                    name={\"program\"}\n                    value={program}\n                    rules={[\n                      { required: true, message: \"Please select a program\" },\n                    ]}\n                  >\n                    <Select onChange={(value) => dispatch({ payload: { name: 'program',value: value.toString() }, type:'formData'})} placeholder=\"Select program\">\n                      {(programs||[])?.map((program) => (\n                          <Option key={program?.id} value={program?.id}>{program?.name}</Option>\n                      ))}\n                    </Select>\n                  </Form.Item>\n                </Col>\n                <Col span={8}>\n                  <Form.Item\n                    label={titleName4}\n                    name=\"name\"\n                    rules={[{ required: true, message: \"Form name is required\" }]}\n                    style={{ marginBottom: \"15px\" }}\n                  >\n                    {/* {console.log(name)} */}\n                    <Input\n                      type=\"text\"\n                      name=\"name\"\n                      value={name}\n                      onChange={onChange}\n                    />\n                  </Form.Item>\n                </Col>\n              </Row>\n              <Row>\n                <Col span={24}>\n                  <Form.Item label={titleName3} name=\"instructions\">\n                    {/* {console.log(instructions)} */}\n                    <Input.TextArea\n                      type=\"text\"\n                      name=\"instructions\"\n                      value={instructions}\n                      onChange={onChange}\n                    />\n                  </Form.Item>\n                </Col>\n              </Row>\n        </Card>\n            <Divider />\n\n            {/* Form Builder */}\n            <Card>\n              <Dropdown trigger={['hover','click']} overlay={menu}>\n                <Button style={{marginBottom:20}} type=\"primary\" ghost>Create Question</Button>\n              </Dropdown> \n\n              {components?.map((component, idx) => {\n                const { targetType,linkedindicator,question,placeholder,targetvalue } = component\n                console.log({targetvalue})\n                const handleSelectQuestion = (val) => {\n                  if (val === 'custom') {\n                    change(transformNonEventChange({ name: 'indicatorquestion', value: '' }), idx)\n                    return dispatch({payload:{value:true,id:idx}, type:'customQuestionInput'})\n                  }\n                  dispatch({payload:{value:false,id:idx}, type:'customQuestionInput'})\n                  change(transformNonEventChange({ name: 'indicatorquestion', value: val }), idx)\n                }\n                return (\n                <Form.Item>\n                  <Card>\n                    <Row gutter={[16,16]}>\n                      <Col span={7}>\n                        <Form.Item\n                          rules={[\n                                  {\n                                    required: true,\n                                    message:\n                                      \"Please select a question indicator\",\n                                  },\n                              ]}\n                          style={{ marginBottom: 0 }}\n                        >\n                          {/* {console.log(linkedindicator)} */}\n                          <Select onSelect={handleSelect} onChange={(val) => change(transformNonEventChange({name:'linkedIndicator', value:val }), idx)} placeholder=\"--Select Indicator--\" >\n                            {indicators(selectedProgramSdgs(+state?.program))?.map((indicator,idx) => <Option key={idx} value={indicator?.programIndicatorId}>{indicator?.description}</Option> )}\n                          </Select>\n                        </Form.Item>\n                       </Col>\n                       <Col span={8}>\n                              <Form.Item\n                                rules={[\n                                  {\n                                    required: true,\n                                    message: \"Please select a Question\",\n                                  },\n                                ]}\n                                style={{ marginBottom: 0 }}\n                              >\n                                <Select\n                                  placeholder=\"Select Question\"\n                                  onChange={handleSelectQuestion}\n                            >\n                              <Option value=\"custom\">Custom Question</Option>\n                              {indicatorQuestions?.map(({question, id}) => <Option value={id}>{question}</Option> )}\n                                </Select>\n                              </Form.Item>\n                        </Col>\n                         {((customQuestionInput && customQuestionInput[idx]) || !isEmpty(question)) && <Col span={6}>\n                          <Form.Item\n                              placeholder=\"--Type Question--\"\n                              style={{marginBottom: 0}}\n                              >\n                                {/* {console.log(question)} */}\n                                <Input\n                                  type=\"text\"\n                                  name=\"question\"\n                                  placeholder=\"--Type Question--\"\n                                  onChange={(e) => change(e,idx)}\n                                  value={question}\n                                />\n                              </Form.Item>\n                            </Col>}\n                         <Col span={4}>\n                              <Form.Item\n                                rules={[\n                                  {\n                                    required: true,\n                                    message: \"Please select a metric\",\n                                  },\n                            ]}\n                            style={{ marginBottom: 0 }}\n                              >\n                                <Select\n                                  placeholder=\"Select indicator metric\"\n                                  label=\"--Select indicator metric--\"\n                                  onChange={(val) => change(transformNonEventChange({name:'targetType', value:val}), idx)}\n                                defaultValue={targetType}\n                                >\n                                  <Option value=\"number\">Number</Option>\n                                  <Option value=\"percentage\">Percentage</Option>\n                                </Select>\n                              </Form.Item>\n                            </Col>\n                        <Col span={4}>\n                              <Form.Item\n                                rules={[\n                                  {\n                                    required: true,\n                                    message: \"Target Value is required\",\n                                  },\n                                ]}\n                                style={{ marginBottom: 0 }}\n                              >\n                                <InputNumber\n                                //  value={targetvalue}\n                              min={0}\n                              max={targetType === 'percentage' ? 99 : null}\n                              style={{width:'100%'}}\n                              placeholder=\"--Target Value--\"\n                              onChange={(val) => change(transformNonEventChange({name:'targetValue', value:val}), idx)}\n                                />\n                              </Form.Item>\n                            </Col>\n                      <Col span={6}>\n                          <Form.Item\n                              placeholder=\"--Placeholder--\"\n                              style={{marginBottom: 0}}\n                              >\n                                {/* {console.log(placeholder)} */}\n                                <Input\n                                  type=\"text\"\n                                  name=\"placeholder\"\n                                  value={placeholder}\n                                placeholder={\"Input Placeholder\"}\n                                onChange={(e) => change(e,idx)}\n                                />\n                              </Form.Item>\n                            </Col>\n                        <Col span={1}>\n                              <Button\n                                type=\"danger\"\n                                onClick={(e) => handleRemoveClick(e, idx)}\n                                icon={<MinusCircleOutlined />}\n                                size={\"medium\"}\n                              />\n                            </Col>\n                    </Row>\n                  </Card>\n                </Form.Item>\n              )\n              })}\n              {!isEmpty(components) && <>\n                <Divider />\n                <Row gutter={[16, 16]}>\n                  <Col span={3}>\n                    <Form.Item>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className=\"forgetBtn\"\n                        onSubmit={onFinish}\n                        loading={loadingState}\n                      >\n                        Create Form\n                          </Button>\n                    </Form.Item>\n                  </Col>\n                  <Col>\n                    <Form.Item>\n                       <Dropdown trigger={['hover','click']} overlay={menu}>\n                        <Button\n                          type=\"link\"\n                          htmlType=\"submit\"\n                        >\n                          Create Field\n                        </Button>\n                      </Dropdown> \n                    </Form.Item>\n                  </Col>\n                </Row>\n              </>}\n            </Card>\n          </Form>\n        </Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n};\n\nconst titleName = (\n  <p\n    style={{\n      margin: \"0px\",\n      padding: \"0px\",\n      color: \"#001529\",\n      fontSize: \"14px\",\n      border: \"none\",\n      fontWeight: \"bold\",\n    }}\n  >\n    Form Title\n  </p>\n);\n\nconst titleName2 = (\n  <p\n    style={{\n      margin: \"0px\",\n      padding: \"0px\",\n      color: \"#001529\",\n      fontSize: \"14px\",\n      border: \"none\",\n      fontWeight: \"bold\",\n    }}\n  >\n    Link Form to programme\n  </p>\n);\nconst titleName3 = (\n  <p\n    style={{\n      margin: \"0px\",\n      padding: \"0px\",\n      color: \"#001529\",\n      fontSize: \"14px\",\n      border: \"none\",\n      fontWeight: \"bold\",\n    }}\n  >\n    Instruction (Optional)\n  </p>\n);\n\nconst titleName4 = (\n  <p\n    style={{\n      margin: \"0px\",\n      padding: \"0px\",\n      color: \"#001529\",\n      fontSize: \"14px\",\n      border: \"none\",\n      fontWeight: \"bold\",\n    }}\n  >\n    Name\n  </p>\n);\n\nconst mapStateToProps = (state) => ({\n  project: state.projects,\n});\n\nexport default connect(mapStateToProps, {})(BuildForm);\n","/home/mrayor/Documents/code/trail-web/src/src/views/FormPreview/index.jsx",[],"/home/mrayor/Documents/code/trail-web/src/src/components/FormIO/constants.js",[],"/home/mrayor/Documents/code/trail-web/src/src/actions/authAuctions.js",["448","449","450","451","452","453"],"import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  USER_LOADED,\n  AUTH_ERROR,\n  CLEAR_ERRORS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../constants/Types\";\nimport axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\n\n//Load User\n\nexport const loadUser = () => async (dispatch) => {\n  // setAuthToken(localStorage.token);\n  // try {\n  //   const res = await axios.get(\"http://trail-api.test.vggdev.com/user\");\n  //   dispatch({\n  //     type: USER_LOADED,\n  //     payload: res.data,\n  //   });\n  // } catch (error) {\n  //   dispatch({\n  //     type: AUTH_ERROR,\n  //     payload: error.response,\n  //   });\n  // } \n};\n\n//Register User\n\nexport const register = (formData,ServiceBase,Constants) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    // const res = await axios.post(\n    //   \"http://trail-api.test.vggdev.com/user/\",\n    //   formData,\n    //   config\n    // );\n    const res = await ServiceBase.createItemV1(formData,Constants.USER)\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n    loadUser();\n  } catch (error) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: error.response,\n    });\n  }\n};\n\n// Login User\n\nexport const login = (formData, ServiceBase,Constants) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    // const res = await axios.post(\n    //   \"https://trail-api.test.vggdev.com/authenticate/\",\n    //   formData,\n    //   config\n    // );\n    const res = await ServiceBase.createItemV1(formData,Constants.AUTHENTICATE)\n      localStorage.setItem(\"TRAIL_TOKEN\",JSON.stringify(res.data.data.accessToken))\n      localStorage.setItem(\"TRAIL_USER\",JSON.stringify(res.data.data))\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n    loadUser();\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response,\n    });\n  }\n};\n\n//Logout\nexport const logout = () => async (dispatch) => {\n  dispatch({ type: LOGOUT });\n};\n\n//Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({ type: CLEAR_ERRORS });\n};\n","/home/mrayor/Documents/code/trail-web/src/src/actions/alertActions.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/Alert/index.js",[],"/home/mrayor/Documents/code/trail-web/src/src/actions/projectAction.js",["454","455","456","457","458","459"],"import {\n  CREATE_PROJECT,\n  GET_PROJECT,\n  TEST_DISPATCH,\n  GET_INDICATORS,\n  PROJECT_ERROR,\n  GET_PROGRAMS,\n  GET_BUDGET_AND_BENEFICIARIES,\n} from \"../constants/Types\";\nimport { message as alert, message } from \"antd\";\nimport { appHelpers } from \"../appHelpers/appHelpers\";\nimport { GET_BUDGET_AND_BENEFICIARIES as BAB } from \"../Constants\";\nimport axios from \"axios\";\n\nexport const getPrograms = (token, ServiceBase, Constants) => async (\n  dispatch\n) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      accessToken: token,\n    },\n  };\n  try {\n    const res = await axios.get(\n      \"https://trail-api.test.vggdev.com/programs\",\n      config\n    );\n    // const res = await ServiceBase.getItems(Constants.PROGRAMS)\n    dispatch({\n      type: GET_PROGRAMS,\n      payload: res.data.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROJECT_ERROR,\n      payload: err.response,\n    });\n  }\n};\n\nexport const getProject = () => {\n  return {\n    type: GET_PROJECT,\n  };\n};\n\nexport const createProject = (project) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  try {\n    // const res = await axios.post(\n    //   \"/api/plans\",\n    //   project,\n    //   config\n    // );\n    dispatch({\n      type: CREATE_PROJECT,\n      payload: project,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROJECT_ERROR,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\nexport const getBudgetandBeneficiaries = (service) => async (dispatch) => {\n  try {\n    const response = await service.getItems(BAB);\n    const { data } = response.data;\n    dispatch({\n      type: GET_BUDGET_AND_BENEFICIARIES,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_BUDGET_AND_BENEFICIARIES,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\n//http://trail-api.test.vggdev.com/\n\n/*{\n  \"data\": {\n    \"totalbudget\": 32.0,\n    \"totalbeneficiaries\": 88\n},\n\"message\": \"Total budget and beneficaries\"\n}*/\n","/home/mrayor/Documents/code/trail-web/src/src/constants/Types.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManager.jsx",["460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484"],"import React from \"react\";\nimport Aux from \"../hocs/_Aux\";\nimport { Button } from \"@material-ui/core\";\nimport { withStore } from \"@spyna/react-store\";\nimport { Row, Col, Card, Form, Divider } from \"antd\";\nimport ImpactManagerForm1 from \"./ImpactManagerForm1\";\nimport ImpactManagerForm2 from \"./ImpactManagerForm2\";\nimport ImpactManagerForm3 from \"./ImpactManagerForm3\";\nimport ImpactManagerSummary from \"./ImpactManagerSummary\";\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\n//import { sdgDump } from \"./sdgDump\";\nimport \"./index.css\";\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\n\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectAction\";\nimport { useDropzone } from \"react-dropzone\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\nimport axios from \"axios\";\nimport { Map, Marker, GoogleApiWrapper } from \"google-maps-react\";\nimport { appConstants } from \"../../constants/app.constants\";\nimport CustomButton from \"../CustomButton/CustomButton\";\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\",\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\",\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\",\n};\n\nconst thumbsContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  marginTop: 16,\n};\n\nconst thumb = {\n  display: \"inline-flex\",\n  borderRadius: 2,\n  border: \"1px solid #eaeaea\",\n  marginBottom: 8,\n  marginRight: 8,\n  width: \"auto\",\n  height: 200,\n  padding: 4,\n  boxSizing: \"border-box\",\n};\n\nconst thumbInner = {\n  display: \"flex\",\n  minWidth: 0,\n  overflow: \"hidden\",\n};\n\nconst img = {\n  display: \"block\",\n  width: \"auto\",\n  height: \"100%\",\n};\n\nconst { Meta } = Card;\n\n// const locationsEnum = [\n//   { label: \"Nigeria\", value: \"ng\" },\n//   { label: \"Ghana\", value: \"gh\" },\n// ];\n\nconst CardTitleForm1 = (\n  <h1 style={{ fontSize: \"25px\", fontWeight: \"normal\", margin: 0 }}>\n    Create your custom impact\n  </h1>\n);\n\nconst CardTitleForm3 = (\n  <h1 style={{ fontSize: \"20px\", fontWeight: \"normal\", margin: 0 }}>\n    Select Indicators\n  </h1>\n);\n\nconst CardTitleForm2 = (\n  <h1 style={{ fontSize: \"25px\", fontWeight: \"normal\", margin: 0 }}>\n    Select the Sustainable Development Goals for this programme\n  </h1>\n);\n\nclass ImpactManager extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      createBtn: (\n        <span>\n          Create Programme <i className=\"fa fa-angle-right\" />{\" \"}\n        </span>\n      ),\n      sdgDump: [],\n      name: \"\",\n      code: \"\",\n      programmeLocation: \"\",\n      description: \"\",\n      programmePlaces: \"\",\n      image: {},\n      impactManagerFormOne: true,\n      impactManagerFormTwo: false,\n      impactManagerFormThree: false,\n      impactManagerSummary: false,\n      sdgCheckBoxes: {},\n      sdgChecks: [],\n      totalNumberOfBeneficiaries: \"\",\n      budget: \"\",\n      indicatorCheckBoxes: {},\n      alert: null,\n      allIndicators: null,\n      mySdg: [],\n      creating: false,\n      indicators: [\n        {\n          id: 1,\n          description: \"No Poverty\",\n        },\n        {\n          id: 2,\n          description: \"No Hunger\",\n        },\n      ],\n      formOneErrors: {\n        name: false,\n        description: false,\n        // projectLocation: false,\n        programmeLocation: false,\n        code: false,\n        programmePlaces: \"\",\n        totalNumberOfBeneficiaries: false,\n        budget: false,\n        image: false,\n      },\n      formTwoErrors: {\n        sdg: false,\n      },\n      formThreeErrors: {\n        indicator: false,\n      },\n      imageData: null,\n      files: [],\n      fileForm: null,\n      // for google map places autocomplete\n      address: \"\",\n      showingInfoWindow: false,\n      location: {},\n      selectedPlace: {},\n      mapCenter: {\n        lat: 49.2827291,\n        lng: -123.1207375,\n      },\n    };\n    this.createProject = this.createProject.bind(this);\n    this.cancelProject = this.cancelProject.bind(this);\n  }\n\n  componentDidMount() {\n    const { ServiceBase, Constants } = this.props;\n    ServiceBase.getDataById(\n      Constants.SDGS,\n      Constants.ALL,\n      Constants.INDICATORS\n    ).then((res) => {\n      if (res.data) {\n        const sdgDump = res.data.data;\n        this.setState({ sdgDump });\n      } else {\n        appHelpers.alertError(\"An Error Ocurred.\");\n      }\n    });\n  }\n\n  handleChangePlace = (address) => {\n    this.setState({ address });\n  };\n\n  handleSelectPlace = (address, selectedPlace, location) => {\n    this.setState({ address, selectedPlace, location });\n    geocodeByAddress(address)\n      .then((results) => getLatLng(results[0]))\n      .then((latLng) => {\n        console.log(\"Success\", latLng);\n        // update center state\n        this.setState({ mapCenter: latLng });\n      })\n      .catch((error) => console.error(\"Error\", error));\n  };\n\n  normFile = (e) => {\n    this.setState({ image: e.fileList[0].thumbUrl, imageData: e.fileList });\n    if (Array.isArray(e)) {\n      return e.fileList[0].thumbUrl;\n    }\n    return e.fileList[0].thumbUrl;\n  };\n\n  handleInputChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSelectChange = (input) => ({ target: { value } }) => {\n    this.setState({ [input]: value });\n  };\n\n  openImageManagerFormTwo = () => {\n    if (appHelpers.validateImpactFormOne(this)) {\n      this.setState({\n        impactManagerFormOne: false,\n        impactManagerFormTwo: true,\n      });\n      const impactManager = {\n        name: this.state.name,\n        code: this.state.code,\n        description: this.state.description,\n        // projectLocation: this.state.projectLocation,\n        programmeLocation: this.state.programmeLocation,\n        totalNumberOfBeneficiaries: this.state.totalNumberOfBeneficiaries,\n        budget: this.state.budget,\n        image: this.state.image,\n        programmePlaces: this.state.programmePlaces,\n        sdgs: [],\n        indicators: [],\n      };\n    } else {\n      console.log(\"some fields are missing\");\n    }\n  };\n\n  openImageManagerFormThree = (sdgCheckBoxes, sdgNum) => {\n    if (sdgCheckBoxes[sdgNum] !== true) {\n      this.setState({\n        impactManagerFormOne: false,\n        impactManagerFormTwo: true,\n        impactManagerFormThree: false,\n      });\n    }\n    if (appHelpers.validateImpactFormTwo(this)) {\n      this.setState({\n        impactManagerFormOne: false,\n        impactManagerFormTwo: false,\n        impactManagerFormThree: true,\n      });\n    } else {\n      appHelpers.failedRequestAlert(\"Select at least One SDG\");\n    }\n  };\n\n  openImpactManagerSummary = () => {\n    if (appHelpers.validateImpactFormThree(this)) {\n      this.setState({\n        impactManagerFormTwo: false,\n        impactManagerFormThree: false,\n        impactManagerSummary: true,\n      });\n    } else {\n      appHelpers.failedRequestAlert(\"Please Select at least One Indicator\");\n      this.setState({\n        impactManagerFormTwo: false,\n        impactManagerFormThree: false,\n        impactManagerSummary: true,\n      });\n    }\n  };\n\n  createProject() {\n    const indicatorStrings = [];\n    this.setState({ creating: true });\n    const {\n      name,\n      description,\n      code,\n      mySdg,\n      sdgCheckBoxes,\n      totalNumberOfBeneficiaries,\n      budget,\n      indicatorCheckBoxes,\n      image,\n      location,\n      address,\n      mapCenter,\n      imageData,\n    } = this.state;\n    const payload = {\n      name,\n      description,\n      code,\n      image,\n      location,\n      mapCenter,\n      sdgCheckBoxes,\n      totalNumberOfBeneficiaries,\n      budget,\n      mySdg,\n      indicatorCheckBoxes,\n    };\n    // this.props.createProject(payload);\n    // appHelpers.successMessageAlert(\"Programme Successfully Created\");\n    const { ServiceBase, Constants } = this.props;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        accessToken: this.props.auth.data.accessToken,\n      },\n    };\n    const locations = {\n      name: location.formattedSuggestion.mainText,\n      description: location.description,\n      lat: mapCenter.lat,\n      long: mapCenter.lng,\n    };\n    const activeMarker = {\n      name: location.formattedSuggestion.mainText,\n      description: location.description,\n      lat: mapCenter.lat,\n      long: mapCenter.lng,\n    };\n    // const sdgs = appHelpers.formatSdgsPayload(indicatorCheckBoxes,sdgCheckBoxes,this.state.sdgDump)\n\n    const finalSdgChecks = this.state.sdgChecks.map((q, i) => {\n      return {\n        ...q,\n        indicators: appHelpers.returnIndicatorsOnly(q.indicators),\n      };\n    });\n    const sdgs = appHelpers.formatSdgsIndicatorsPayload(finalSdgChecks);\n    let apiPayload = new FormData();\n    apiPayload.append(\"name\", name);\n    apiPayload.append(\"description\", description);\n    apiPayload.append(\"code\", code);\n    apiPayload.append(\"budget\", budget);\n    apiPayload.append(\"totalNumberOfBeneficiaries\", totalNumberOfBeneficiaries);\n    apiPayload.append(\"locations\", JSON.stringify(locations));\n    apiPayload.append(\"sdgs\", JSON.stringify(sdgs));\n    apiPayload.append(\"activeMarker\", JSON.stringify(activeMarker));\n    apiPayload.append(\"image\", this.state.fileForm, this.state.fileForm.name);\n\n    ServiceBase.uploadProgram(Constants.PROGRAMS, apiPayload)\n      .then(({ data }) => {\n        if (data) {\n          appHelpers.successMessageAlert(data.message);\n          this.setState({ creating: false });\n          this.resetPage();\n        } else {\n        }\n      })\n      .catch((err) => {\n        if (err.response) {\n          appHelpers.failedRequestAlert(err.response.data.message, 3500);\n          this.setState({ creating: false });\n        }\n      });\n  }\n\n  cancelProject() {\n    appHelpers.canceledRequestAlert(\"Project Cancelled!\");\n    window.location.reload();\n  }\n\n  resetPage = () => {\n    this.setState({\n      impactManagerFormOne: true,\n      impactManagerFormTwo: false,\n      impactManagerFormThree: false,\n      impactManagerSummary: false,\n      name: \"\",\n      code: \"\",\n      address: \"\",\n      description: \"\",\n      files: [],\n      fileForm: null,\n      sdgCheckBoxes: {},\n      sdgChecks: [],\n      indicatorCheckBoxes: {},\n      location: {},\n    });\n  };\n\n  goBack = () => {\n    this.setState({ impactManagerFormOne: true, impactManagerFormTwo: false });\n  };\n\n  goBackTwo = () => {\n    this.setState({\n      impactManagerFormTwo: true,\n      impactManagerFormThree: false,\n    });\n  };\n\n  handleCheckboxChange = (\n    indicatorValue,\n    e,\n    indicatorIndex,\n    sdgIndex,\n    indicatorID\n  ) => {\n    const { allIndicators, sdgChecks } = this.state;\n    const newIndicators = allIndicators.map((indicator, id) => {\n      if (indicatorIndex !== id) return indicator;\n      return {\n        ...indicator,\n        status: e.target.checked,\n      };\n    });\n\n    const newSdgChecks = sdgChecks.map((q, i) =>\n      q.id === sdgIndex\n        ? {\n            ...q,\n            indicators: q.indicators.map((o, i) =>\n              i === indicatorIndex\n                ? {\n                    ...o,\n                    status: e.target.checked,\n                  }\n                : o\n            ),\n          }\n        : q\n    );\n    this.setState({\n      indicatorCheckBoxes: {\n        ...this.state.indicatorCheckBoxes,\n        [indicatorID]: indicatorValue,\n      },\n      allIndicators: newIndicators,\n      sdgChecks: newSdgChecks,\n    });\n  };\n\n  updateSvgState = (sdg) => {\n    const { sdgChecks, sdgDump } = this.state;\n\n    let filtered = sdgDump.filter((item) => {\n      return parseInt(item.id) === parseInt(sdg);\n    });\n    const obj = Object.assign({}, ...filtered);\n    const svgExist = appHelpers.containsObject(obj, sdgChecks);\n    if (svgExist === true) {\n      this.setState({\n        sdgCheckBoxes: {\n          ...this.state.sdgCheckBoxes,\n          [sdg]: !this.state.sdgCheckBoxes[sdg],\n        },\n      });\n      this.setState((prevState) => ({\n        sdgChecks: prevState.sdgChecks.filter((SDG) => SDG.id !== obj.id),\n      }));\n    } else {\n      this.setState(\n        {\n          sdgCheckBoxes: {\n            ...this.state.sdgCheckBoxes,\n            [sdg]: !this.state.sdgCheckBoxes[sdg],\n          },\n          sdgChecks: [...this.state.sdgChecks, Object.assign({}, ...filtered)],\n        },\n        () => {\n          //\n          this.setState({\n            allIndicators: appHelpers.returnIndicators(\n              this.state.sdgCheckBoxes,\n              sdgDump\n            ),\n          });\n        }\n      );\n    }\n  };\n\n  handleSdgBoxChange = (sdgNum, event) => {\n    this.updateSvgState(sdgNum);\n  };\n\n  editProjectProfile = () => {\n    this.setState({\n      impactManagerSummary: false,\n      impactManagerFormOne: true,\n      impactManagerFormTwo: false,\n      impactManagerFormThree: false,\n    });\n  };\n  editSdgGoals = () => {\n    this.setState({\n      impactManagerSummary: false,\n      impactManagerFormOne: false,\n      impactManagerFormTwo: true,\n      impactManagerFormThree: false,\n    });\n  };\n  editProjectIndicators = () => {\n    this.setState({\n      impactManagerSummary: false,\n      impactManagerFormOne: false,\n      impactManagerFormTwo: false,\n      impactManagerFormThree: true,\n    });\n  };\n\n  handleDrop = (file) => {\n    this.setState({\n      fileForm: file[0],\n      files: file.map((file) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        })\n      ),\n    });\n  };\n  render() {\n    //this.props.project.projects\n    const { projects } = this.props.project;\n    const {\n      description,\n      code,\n      name,\n      //projectLocation,\n      programmeLocation,\n      programmePlaces,\n      image,\n      impactManagerFormOne,\n      impactManagerFormTwo,\n      impactManagerFormThree,\n      impactManagerSummary,\n      totalNumberOfBeneficiaries,\n      budget,\n      sdgCheckBoxes,\n      indicators,\n      indicatorCheckBoxes,\n      allIndicators,\n      formOneErrors,\n      formTwoErrors,\n      sdgDump,\n      sdgChecks,\n      createBtn,\n      creating,\n    } = this.state;\n    return (\n      <Aux>\n        <div>\n          <div\n            className=\"site-layout-background\"\n            style={{ padding: 24, minHeight: 360 }}\n          >\n            {\" \"}\n            <div>\n              {/* Page One */}\n              {impactManagerFormOne && (\n                <Card>\n                  <Meta\n                    title={CardTitleForm1}\n                    description=\"Design your own impact profile based on your programme priorities and needs\"\n                  />\n                  <Divider />\n                  <ImpactManagerForm1\n                    description={description}\n                    name={name}\n                    code={code}\n                    image={image}\n                    programmePlaces={programmePlaces}\n                    programmeLocation={programmeLocation}\n                    files={this.state.files}\n                    handleDrop={this.handleDrop}\n                    // projectLocation={projectLocation}\n                    handleInputChange={this.handleInputChange}\n                    handleSelectChange={this.handleSelectChange}\n                    handleBannerChange={this.handleBannerChange}\n                    normFile={this.normFile}\n                    formOneErrors={formOneErrors}\n                    totalNumberOfBeneficiaries={totalNumberOfBeneficiaries}\n                    budget={budget}\n                    // locationsEnum={locationsEnum}\n                    address={this.state.address}\n                    handleChangePlace={this.handleChangePlace}\n                    handleSelectPlace={this.handleSelectPlace}\n                  />\n                  <br />\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    onClick={this.openImageManagerFormTwo}\n                    style={{\n                      backgroundColor: \"#53D1BE\",\n                      color: \"white\",\n                      borderRadius: \"2rem\",\n                      textTransform: \"none\",\n                      boxShadow: \"none\",\n                      float: \"right\",\n                    }}\n                  >\n                    Save & Continue\n                  </Button>\n                </Card>\n              )}\n              {/* Page Two */}\n              {impactManagerFormTwo && (\n                <Card title={CardTitleForm2}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n                    {\" \"}\n                  </div>\n                  <div\n                    style={{\n                      backgroundColor: \"#53d1be1a\",\n                      paddingLeft: \".5rem\",\n                      paddingBottom: \".5rem\",\n                      paddingTop: \".5rem\",\n                    }}\n                  >\n                    <p\n                      style={{\n                        fontSize: \"small\",\n                        marginBottom: \"0rem\",\n                      }}\n                    >\n                      First, select the Sustainable Development Goals (SDGs).\n                    </p>\n                    <p\n                      style={{\n                        fontSize: \"small\",\n                        marginBottom: \"0rem\",\n                      }}\n                    >\n                      Next, further specify preferred Indicators that best match\n                      your project goals.\n                    </p>\n                    <p\n                      style={{\n                        fontSize: \"small\",\n                        marginBottom: \"0rem\",\n                      }}\n                    >\n                      Now your priorities are complete. Click Save & View\n                      Questions.\n                    </p>\n                  </div>\n                  <ImpactManagerForm2\n                    handleInputChange={this.handleInputChange}\n                    handleSdgBoxChange={this.handleSdgBoxChange}\n                    sdgCheckBoxes={sdgCheckBoxes}\n                    formTwoErrors={formTwoErrors}\n                    sdgDump={sdgDump}\n                    {...this.props}\n                  />\n\n                  <br />\n\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    onClick={this.goBack}\n                    style={{\n                      backgroundColor: \"white\",\n                      color: \"#53D1BE\",\n                      borderRadius: \"2rem\",\n                      textTransform: \"none\",\n                      boxShadow: \"none\",\n                      borderColor: \"#53D1BE\",\n                    }}\n                  >\n                    <ArrowLeftOutlined />\n                    {\"  \"}Back\n                  </Button>\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.openImageManagerFormThree}\n                    style={{\n                      backgroundColor: \"#53D1BE\",\n                      color: \"white\",\n                      borderRadius: \"2rem\",\n                      textTransform: \"none\",\n                      boxShadow: \"none\",\n                      float: \"right\",\n                    }}\n                  >\n                    Save & Continue\n                  </Button>\n                </Card>\n              )}\n              {impactManagerFormThree && (\n                <Card title={CardTitleForm3}>\n                  <ImpactManagerForm3\n                    handleCheckboxChange={this.handleCheckboxChange}\n                    sdgCheckBoxes={sdgCheckBoxes}\n                    indicators={indicators}\n                    indicatorCheckBoxes={indicatorCheckBoxes}\n                    allIndicators={allIndicators}\n                    sdgDump={sdgDump}\n                    sdgChecks={sdgChecks}\n                  />\n\n                  <br />\n\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    onClick={this.goBackTwo}\n                    style={{\n                      backgroundColor: \"white\",\n                      color: \"#53D1BE\",\n                      borderRadius: \"2rem\",\n                      textTransform: \"none\",\n                      boxShadow: \"none\",\n                      borderColor: \"#53D1BE\",\n                    }}\n                  >\n                    <ArrowLeftOutlined />\n                    {\"  \"}Back\n                  </Button>\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.openImpactManagerSummary}\n                    style={{\n                      backgroundColor: \"#53D1BE\",\n                      color: \"white\",\n                      borderRadius: \"2rem\",\n                      textTransform: \"none\",\n                      boxShadow: \"none\",\n                      float: \"right\",\n                    }}\n                  >\n                    Save & View Answers\n                  </Button>\n\n                  {this.state.alert}\n                </Card>\n              )}\n\n              {impactManagerSummary && (\n                <div>\n                  <ImpactManagerSummary\n                    {...this.state}\n                    {...this.props}\n                    editProjectProfileCallback={this.editProjectProfile}\n                    editSdgGoalsCallback={this.editSdgGoals}\n                    indicatorCheckBoxes={indicatorCheckBoxes}\n                    editProjectIndicatorsCallback={this.editProjectIndicators}\n                  />\n\n                  <br />\n\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={this.cancelProject}\n                    style={{\n                      backgroundColor: \"white\",\n                      color: \"red\",\n                      borderRadius: \"2rem\",\n                      textTransform: \"none\",\n                      boxShadow: \"none\",\n                      borderColor: \"#53D1BE\",\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                  {this.state.alert}\n\n                  <CustomButton\n                    onClick={this.createProject}\n                    content={createBtn}\n                    loading={creating}\n                  />\n\n                  {this.state.alert}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </Aux>\n    );\n  }\n}\n\n//this.props.project.projects\n\nconst mapStateToProps = (state) => ({\n  project: state.projects,\n  auth: state.auth,\n});\n\nconst WrappedContainer = GoogleApiWrapper({\n  apiKey: \"AIzaSyB5vf0DbG-X2_Qdya9IPHl1ZbhPdn276gQ\",\n})(ImpactManager);\n\nexport default connect(mapStateToProps, { createProject })(WrappedContainer);\n","/home/mrayor/Documents/code/trail-web/src/src/components/IndicatorsCard/index.js",["485"],"import React, { Component } from \"react\";\nimport { Col, Row, Card } from \"antd\";\nimport \"./index.css\";\nimport CustomCircularProgress from \"../Loader/CustomCircularProgress\";\n\nconst IndicatorsCard = ({\n  loading,\n  sdgCount,\n  indicatorCount,\n  totalNumberOfBeneficiaries,\n  budget,\n}) => {\n  return (\n    <div>\n      <div>\n        <Col span={24}>\n          <Card className={\"cardStyle\"}>\n            <Row>\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\n                <span className={\"spanStyle\"}>No of SDGs</span>\n                {\n                  <p className={\"paragraphStyle\"}>\n                    {loading ? <CustomCircularProgress size={25} /> : sdgCount}\n                  </p>\n                }\n              </Col>\n\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\n                <span className={\"spanStyle\"}>Indicators</span>\n                {\n                  <p className={\"paragraphStyle\"}>\n                    {loading ? (\n                      <CustomCircularProgress size={25} />\n                    ) : (\n                      indicatorCount\n                    )}\n                  </p>\n                }\n              </Col>\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\n                <span className={\"spanStyle\"}>Total Beneficiaries</span>\n                {\n                  <p className={\"paragraphStyle\"}>\n                    {loading ? (\n                      <CustomCircularProgress size={25} />\n                    ) : (\n                      totalNumberOfBeneficiaries\n                    )}\n                  </p>\n                }\n              </Col>\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\n                <span className={\"spanStyle\"}>Budget</span>\n                {\n                  <p className={\"paragraphStyle\"}>\n                    {loading ? <CustomCircularProgress size={25} /> : budget}\n                  </p>\n                }\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n      </div>\n    </div>\n  );\n};\n\nexport default IndicatorsCard;\n","/home/mrayor/Documents/code/trail-web/src/src/components/FundingGraph/index.js",["486","487","488"],"import React, { Component } from \"react\";\nimport { Card, Skeleton } from \"antd\";\nimport \"./index.css\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport { data } from \"./data\";\n\nexport class FundingGraph extends Component {\n  render() {\n    return (\n      <div className=\"fundingTab\">\n        <Card title={\"Funding Status\"} >\n          <Skeleton active /> \n          {/* <Line\n            data={data}\n            options={{\n              legend: {\n                display: true,\n                position: \"bottom\",\n              },\n            }}\n          /> */}\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default FundingGraph;\n","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactMap/index.js",["489","490","491"],"import React, { Component } from \"react\";\nimport { Card, Skeleton } from \"antd\";\nimport \"./index.css\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport { connect } from \"react-redux\";\nimport { random } from \"lodash\";\n\nexport class ImpactMap extends Component {\n  constructor(props) {\n    super(props);\n  }\n  displayMarkers = () => {\n    return this.props.programs.programs?.map((program) => {\n      console.log(program)\n      return (\n        <Marker\n          key={program?.locations[0]?.long}\n          id={program?.locations[0]?.long}\n          position={{\n            lat: program?.locations[0]?.lat,\n            lng: program?.locations[0]?.long,\n          }} \n          onClick={() => console.log(`You clicked me! ${program?.name}`)}\n        />\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"impactT\">\n        <h4>Impact Map</h4>\n        {this.props.google == undefined ? (\n          <Card>\n            <Skeleton active />\n            <br/>\n          </Card> \n        ) : (\n          <div className=\"map-container\">\n            <Map\n              google={this.props.google}\n              zoom={8}\n              style={mapStyles}\n              initialCenter={{\n                lat:  this.props.programs.programs[0]?.locations[0]?.lat,\n                lng:  this.props.programs.programs[0]?.locations[0]?.long,\n              }}\n            >\n              {this.displayMarkers()}\n            </Map>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStyles = {\n  width: \"100%\",\n  height: \"100%\",\n};\n\nconst mapStateToProps = (state) => ({\n  programs: state.projects,\n});\n\nconst WrappedContainer = GoogleApiWrapper({\n  apiKey: \"AIzaSyB5vf0DbG-X2_Qdya9IPHl1ZbhPdn276gQ\",\n})(ImpactMap);\n\nexport default connect(mapStateToProps, {})(WrappedContainer);\n","/home/mrayor/Documents/code/trail-web/src/src/components/DoughnutChart/index.js",["492","493","494"],"import React, { Component } from \"react\";\nimport { Card, Skeleton, Typography } from \"antd\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport \"./index.css\";\nimport { connect } from \"react-redux\";\nimport _, { flatten, uniqBy } from \"lodash\";\n\nconst renderObjects =  (programs) => {\n  const sdgs = uniqBy(flatten(programs?.map(({sdgs}) => sdgs)),'sdgId')\n  const sdgsNames = sdgs?.map(({name}) => name)\n  console.log(sdgsNames)\n  return sdgsNames; \n};\n\nconst renderOccurence = (programs) => {\n  const sdgs = flatten(programs?.map(({sdgs}) => sdgs))\n  const sdgsNames = sdgs?.map(({name}) => name)\n  const countOccurrences = (arr) => arr.reduce((prev, curr) => ((prev[curr] = ++prev[curr] || 1), prev), {});\n\n  const counts = countOccurrences(sdgsNames);\n  console.log(counts)\n  return Object.values(counts);\n};\n\nexport class DoughnutChart extends Component {\n\n  colorArray = [\n    \"#4DB380\",\n    \"#FF4D4D\",\n    \"#99E6E6\",\n    \"#6666FF\",\n    \"#FF6633\",\n    \"#FFB399\",\n    \"#FF33FF\",\n    \"#FFFF99\",\n    \"#00B3E6\",\n    \"#E6B333\",\n    \"#3366E6\",\n    \"#999966\",\n    \"#99FF99\",\n    \"#B34D4D\",\n    \"#80B300\",\n    \"#809900\",\n    \"#E6B3B3\",\n    \"#6680B3\",\n    \"#66991A\",\n    \"#FF99E6\",\n    \"#CCFF1A\",\n    \"#FF1A66\",\n    \"#E6331A\",\n    \"#33FFCC\",\n    \"#66994D\",\n    \"#B366CC\",\n    \"#4D8000\",\n    \"#B33300\",\n    \"#CC80CC\",\n    \"#66664D\",\n    \"#991AFF\",\n    \"#E666FF\",\n    \"#4DB3FF\",\n    \"#1AB399\",\n    \"#E666B3\",\n    \"#33991A\",\n    \"#CC9999\",\n    \"#B3B31A\",\n    \"#00E680\",\n    \"#4D8066\",\n    \"#809980\",\n    \"#E6FF80\",\n    \"#1AFF33\",\n    \"#999933\",\n    \"#FF3380\",\n    \"#CCCC00\",\n    \"#66E64D\",\n    \"#4D80CC\",\n    \"#9900B3\",\n    \"#E64D66\",\n    \"#4DB380\",\n    \"#FF4D4D\",\n    \"#99E6E6\",\n    \"#6666FF\",\n  ];\n  data = {\n    labels: renderObjects(this.props.project?.programs),\n    datasets: [\n      {\n        label: \"SDGs\",\n        backgroundColor: this.colorArray,\n        hoverBackgroundColor: [\n          \"#A21942\",\n          \"#DDA63A\",\n          \"#E5243B\",\n          \"#C5192D\",\n          \"#33991A\",\n          \"#CC9999\",\n          \"#B3B31A\",\n          \"#00E680\",\n        ], \n        data: renderOccurence(this.props.project?.programs),\n      },\n    ],\n  };\n\n  render() {\n   \n    return (\n      <div>\n        <Card title={\"Impact Summary\"} className={\"doughnutCard\"}>\n          {renderOccurence(this.props.project?.programs).length === 0 ? (\n            <div style={{textAlign: 'center'}}>\n              <Skeleton active />\n            </div>\n          ) : (\n            <Doughnut\n              data={this.data}\n              width={100}\n              height={100}\n              options={{\n                legend: {\n                  display: true,\n                  position: \"bottom\",\n                },\n              }}\n            />\n          )}\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  project: state.projects,\n});\n\nexport default connect(mapStateToProps, {})(DoughnutChart);\n","/home/mrayor/Documents/code/trail-web/src/src/components/PerformanceIndicators/index.js",["495","496"],"/home/mrayor/Documents/code/trail-web/src/src/components/ActionCard/index.js",["497","498"],"import React, { Component, useEffect } from \"react\";\nimport { Row, Col, Card } from \"antd\";\nimport \"./index.css\";\nimport { flatten, size, uniqBy } from \"lodash\";\nimport { getBudgetandBeneficiaries } from \"../../actions/projectAction\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst ActionCard = ({ ServiceBase }) => {\n  const { programs } = useSelector((state) => state.projects);\n  const { totalbudget } = useSelector((state) => state.projects);\n  const { totalbeneficiaries } = useSelector((state) => state.projects);\n  const { token } = useSelector((state) => state.auth);\n  console.log(\"mrPrograms\", programs);\n  const handleSdgs = (_programs) => {\n    const sdgs = uniqBy(flatten(_programs?.map(({ sdgs }) => sdgs)), \"sdgId\");\n    return sdgs || [];\n  };\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getBudgetandBeneficiaries(ServiceBase));\n  }, [token, dispatch]);\n\n  return (\n    <div>\n      <Col span={24}>\n        <Card className={\"actionCard\"}>\n          <Row>\n            <Col xs={{ span: 24 }} lg={{ span: 6 }}>\n              <span className={\"actionItemStyle\"}>Programmes</span>\n              <p className={\"actionItemParagraph\"}>{size(programs)}</p>\n            </Col>\n\n            <Col xs={{ span: 24 }} lg={{ span: 6 }}>\n              <span className={\"actionItemStyle\"}>Impact Targets (SDG)</span>\n              <p className={\"actionItemParagraph\"}>\n                {size(handleSdgs(programs))}\n              </p>\n            </Col>\n            <Col xs={{ span: 24 }} lg={{ span: 6 }}>\n              <span className={\"actionItemStyle\"}>Total Beneficiaries</span>\n              <p className={\"actionItemParagraph\"}>{totalbeneficiaries}</p>\n            </Col>\n            <Col xs={{ span: 24 }} lg={{ span: 6 }}>\n              <span className={\"actionItemStyle\"}>Budget</span>\n              <p className={\"actionItemParagraph\"}>{totalbudget}</p>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </div>\n  );\n};\n\nexport default ActionCard;\n","/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/menu/index.js",[],"/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/sidebar/index.js",["499","500"],"import React, { Component } from \"react\";\n\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  FileOutlined,\n  HighlightOutlined,\n  ExportOutlined,\n} from \"@ant-design/icons\";\nimport { Layout, Menu } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport \"./index.css\";\nimport LogoTrail from \"../../../assets/Trail2.svg\";\n\nconst { Sider } = Layout;\n\nexport class SideBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: false,\n    };\n  }\n  onCollapse = (collapsed) => {\n    this.setState({ collapsed: collapsed });\n  };\n  render() {\n    return (\n      <Sider\n        collapsed={this.state.collapsed}\n        onCollapse={this.onCollapse}\n        className=\"display-sider\"\n        style={{\n          border: \"none\",\n          backgroundColor: \"#001529\",\n          position: \"fixed\",\n          zIndex: \"999\",\n          height: \"100vh\",\n        }}\n      >\n        <Menu\n          theme=\"dark\"\n          mode=\"inline\"\n          style={{ backgroundColor: \"#001529\", marginTop: \"100px\" }}\n        >\n          <div className=\"logos\"></div>\n          <Menu.Item\n            to=\"/app/dashboard\"\n            key=\"1\"\n            icon={<PieChartOutlined />}\n            style={{ marginBottom: \"20px\" }}\n          >\n            <Link to=\"/app/dashboard\">Dashboard</Link>\n          </Menu.Item>\n          <Menu.Item\n            key=\"2\"\n            to=\"/app/dashboard/projects\"\n            icon={<DesktopOutlined />}\n            style={{ marginBottom: \"20px\" }}\n          >\n            <Link to=\"/app/dashboard/projects\">Programme Report</Link>\n          </Menu.Item>\n          <Menu.Item\n            key=\"3\"\n            icon={<HighlightOutlined />}\n            style={{ marginBottom: \"20px\" }}\n            to=\"/app/dashboard/manager\"\n          >\n            <Link to=\"/app/dashboard/manager\">Programme Manager</Link>\n          </Menu.Item>\n          <Menu.Item\n            key=\"4\"\n            icon={<FileOutlined />}\n            style={{ marginBottom: \"20px\" }}\n            to=\"/app/dashboard/manager\"\n          >\n            <Link to=\"/app/dashboard/form\"></Link> Forms Management\n          </Menu.Item>\n        </Menu>\n      </Sider>\n    );\n  }\n}\n\nexport default SideBar;\n","/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/footer/index.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/FormBuilder.js/constants.js",[],"/home/mrayor/Documents/code/trail-web/src/src/appHelpers/constants.js",[],"/home/mrayor/Documents/code/trail-web/src/src/actions/formActions.js",["501","502","503"],"import { FORM } from \"../constants/Types\";\nimport axios from \"axios\";\nimport { appConstants } from \"../constants/app.constants\";\nimport { message as alert, message } from \"antd\";\nimport { appHelpers } from \"../appHelpers/appHelpers\";\nimport {\n  FORM as FORM_CONSTANT,\n  INDICATOR_QUESTIONS,\n  PROGRAMS,\n} from \"../Constants\";\n\nexport const setLoadingState = (payload) => ({\n  payload,\n  type: FORM.setLoadingState,\n});\n\nexport const buildAnswers = (payload) => ({\n  payload,\n  type: FORM.buildAnswers,\n});\n\nexport const createForm = (form, service, history) => async (dispatch) => {\n  try {\n    dispatch(setLoadingState(true));\n    const response = await service.createItemV1(form, FORM_CONSTANT);\n    const { data, message } = response.data;\n    alert.success(message);\n    dispatch({\n      type: FORM.createFormSuccess,\n      payload: data,\n    });\n    history.push(`/app/dashboard/form/preview/${data?.id}`);\n  } catch (err) {\n    console.log(err);\n    alert.error(\n      err?.response?.data?.message?.message ||\n        \"Something went wrong, Please try again later\"\n    );\n    dispatch({\n      type: FORM.errors,\n      payload: { msg: err.response, status: err.response },\n    });\n  } finally {\n    dispatch(setLoadingState(false));\n  }\n};\n\nexport const getForms = (service, page) => async (dispatch) => {\n  dispatch(setLoadingState(true));\n  try {\n    const response = await service.getPaginatedData(FORM_CONSTANT, page);\n    const { data } = response.data;\n\n    dispatch({\n      type: FORM.getFormsSuccess,\n      payload: data,\n    });\n  } catch (err) {\n    console.log(err.response);\n    dispatch({\n      type: FORM.errors,\n      payload: { msg: err.response, status: err.response },\n    });\n  } finally {\n    dispatch(setLoadingState(false));\n  }\n};\n\nexport const getForm = (id, service, endingSlash) => async (dispatch) => {\n  dispatch(setLoadingState(true));\n  try {\n    const response = await service.getDataWithId(\n      FORM_CONSTANT,\n      id,\n      endingSlash\n    );\n    const { data } = response.data;\n\n    dispatch({\n      type: FORM.getFormSuccess,\n      payload: data,\n    });\n  } catch (err) {\n    console.log(err);\n    console.log(err.response);\n    dispatch({\n      type: FORM.errors,\n      payload: { msg: err.response, status: err.response },\n    });\n  } finally {\n    dispatch(setLoadingState(false));\n  }\n};\n\nexport const createSubmission = (id, answers, service) => async (dispatch) => {\n  dispatch(setLoadingState(true));\n  try {\n    const response = await service.createItemWithId(answers, FORM_CONSTANT, id);\n    const { data } = response.data;\n\n    dispatch({\n      type: FORM.createSubmissionSuccess,\n      payload: data,\n    });\n    appHelpers.successMessageAlert(\"Form Submitted Successfully\", 2000)\n    window.setTimeout(() => {\n      window.close()\n    },2000)\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: FORM.errors,\n      payload: { msg: err.response, status: err.response },\n    });\n  } finally {\n    dispatch(setLoadingState(false));\n  }\n};\n\nexport const getPrograms = (service) => async (dispatch) => {\n  try {\n    const response = await service.getItems(PROGRAMS);\n    const { data } = response.data;\n    dispatch({\n      type: FORM.getPrograms,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: FORM.errors,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\nexport const deleteForm = (id, service) => async (dispatch) => {\n  alert.loading(\"Deleting Form\", 0);\n  try {\n    await service.deleteItem(FORM_CONSTANT, id);\n    dispatch({\n      type: FORM.deleteForm,\n    });\n    appHelpers.successMessageAlert(\"Form Deleted Successfully\", 2000);\n    alert.destroy();\n    window.location.reload();\n  } catch (err) {\n    alert.destroy();\n    alert.error(\"There was an error deleting this form\");\n    dispatch({\n      type: FORM.errors,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\nexport const getIndicatorQuestion = (id, service) => async (dispatch) => {\n  try {\n\n    const response = await service.getDataWithId(INDICATOR_QUESTIONS,id, true)\n    dispatch({\n      type: FORM.getIndicatorQuestionSuccess,\n      payload: response?.data?.data || [],\n    });\n  } catch (err) {\n    console.log(err);\n    console.log(err.response);\n    dispatch({\n      type: FORM.errors,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\nexport const updateForm = (form, service, id, history) => async (dispatch) => {\n  try {\n    dispatch(setLoadingState(true));\n    const response = await service.updateItemWithId(form, FORM_CONSTANT, id);\n    const { data, message } = response.data;\n    alert.success(message);\n    dispatch({\n      type: FORM.createFormSuccess,\n      payload: data,\n    });\n    history.push(`/app/form/preview/${data?.id}`);\n  } catch (err) {\n    console.log(err);\n    alert.error(\n      err?.response?.data?.message?.message ||\n        \"Something went wrong, Please try again later\"\n    );\n    dispatch({\n      type: FORM.errors,\n      payload: { msg: err.response, status: err.response },\n    });\n  } finally {\n    dispatch(setLoadingState(false));\n  }\n};\n","/home/mrayor/Documents/code/trail-web/src/src/components/PublishedForm/index.jsx",[],"/home/mrayor/Documents/code/trail-web/src/src/components/CustomButton/CustomButton.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/Loader/CustomCircularProgress.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManagerSummary.jsx",["504","505","506","507","508","509"],"import React from \"react\";\nimport Aux from \"../hocs/_Aux\";\nimport { Button } from \"@material-ui/core\";\nimport { withStore } from \"@spyna/react-store\";\nimport { Row, Col, Card } from \"antd\";\n//import { sdgDump } from \"./sdgDump\";\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\nimport SvgCardView from \"../SvgCard/SvgCardView\";\nimport IndicatorView from \"../Indicators/IndicatorView\";\nimport { EditOutlined } from \"@ant-design/icons\";\n\nclass ImpactManagerSummary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name,\n      code: this.props.code,\n      projectLocation: this.props.projectLocation,\n      image: this.props.image,\n      programmeLocation: this.props.programmeLocation,\n      description: this.props.description,\n      sdgCheckBoxes: this.props.sdgCheckBoxes,\n      programmePlaces: this.props.programmePlaces,\n      indicators: this.props.indicators,\n      allImpacts: this.props.allImpacts,\n      sdgDump: this.props.sdgDump,\n    };\n  }\n\n  componentDidMount() {}\n\n  editProjectProfile = () => {\n    this.props.editProjectProfileCallback();\n  };\n  editSdgGoals = () => {\n    this.props.editSdgGoalsCallback();\n  };\n\n  editProjectIndicators = () => {\n    this.props.editProjectIndicatorsCallback();\n  };\n\n  renderSvgCards = () => {\n    const filtered = appHelpers.returnSelectedSdgs(\n      this.state.sdgCheckBoxes,\n      this.state.sdgDump\n    );\n    const allSdgs = filtered.map((item, index) => {\n      return <SvgCardView key={index} path={item.image} width=\"10%\" />;\n    });\n\n    return allSdgs;\n  };\n\n  renderIndicators = () => {\n    const indicators = appHelpers.indicatorSummary(this.props.sdgChecks);\n    const allIndicators = indicators.map((item, index) => {\n      return <IndicatorView key={index} indicator={item.description} />;\n    });\n    return allIndicators;\n\n    // this.setState({ allImpacts: allIndicators });\n  };\n\n  render() {\n    const {\n      description,\n      code,\n      name,\n      programmeLocation,\n      programmePlaces,\n      //projectLocation,\n      image,\n      sdgChecks,\n      sdgDump,\n    } = this.state;\n    \n    return (\n      <Aux>\n        <Row>\n          <Col md={24}>\n            <div>\n              <Card\n                title={\"Programme Profile\"}\n                headStyle={{\n                  fontSize:\"20px\"\n                }}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                 }}\n              >\n                <Button\n                  size=\"large\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={this.editProjectProfile}\n                  style={{\n                    backgroundColor: \"white\",\n                    color: \"#53D1BE\",\n                    borderRadius: \"2rem\",\n                    textTransform: \"none\",\n                    boxShadow: \"none\",\n                    borderColor: \"#53D1BE\",\n                  }}\n                >\n                  <EditOutlined />\n                  Edit\n                </Button>\n              </Card>\n              <Card>\n                <Row style={{ display: \"flex\" }}>\n                  <Col span={\"12\"}>\n                    <h3>Programme Name</h3>\n                    <h4 style={{ fontWeight: \"normal\", color: \"grey\" }}>\n                      {name}\n                    </h4>\n                  </Col>\n                  <Col span={12}>\n                    <h3>Project Code</h3>\n                    <h4 style={{ fontWeight: \"normal\", color: \"grey\" }}>\n                      {code}\n                    </h4>\n                  </Col>\n                </Row>\n                <br />\n                <Row>\n                  <Col span={12}>\n                    <h3>Programme Description</h3>\n                    <h4 style={{ fontWeight: \"normal\", color: \"grey\" }}>\n                      {description}\n                    </h4>\n                  </Col>\n                </Row>\n                <br />\n                <div>\n                  {/* <h6>Programme Location</h6> */}\n                  <h6 style={{ fontWeight: \"normal\", color: \"grey\" }}>\n                    {/* {programmeLocation} */}\n                    {/* {programmePlaces} */}\n                  </h6>\n                </div>\n              </Card>\n            </div>\n            <br />\n            <div>\n              <Card\n                title={\"Sustainable Development Goals\"}\n                headStyle={{\n                  fontSize:\"20px\"\n                }}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Button\n                  size=\"large\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={this.editSdgGoals}\n                  style={{\n                    backgroundColor: \"white\",\n                    color: \"#53D1BE\",\n                    borderRadius: \"2rem\",\n                    textTransform: \"none\",\n                    boxShadow: \"none\",\n                    borderColor: \"#53D1BE\",\n                  }}\n                >\n                  <EditOutlined />\n                  Edit\n                </Button>\n              </Card>\n              <Card>\n                <Row>\n                  <Col span={\"24\"}>\n                    <div style={{ paddingTop: 0 }}>{this.renderSvgCards()}</div>\n                  </Col>\n                </Row>\n              </Card>\n            </div>\n            <br />\n            <div>\n              <Card\n                title={\"Programme Indicators\"}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n                headStyle={{\n                  fontSize:\"20px\"\n                }}\n              >\n                <Button\n                  size=\"large\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={this.editProjectIndicators}\n                  style={{\n                    backgroundColor: \"white\",\n                    color: \"#53D1BE\",\n                    borderRadius: \"2rem\",\n                    textTransform: \"none\",\n                    boxShadow: \"none\",\n                    borderColor: \"#53D1BE\",\n                  }}\n                >\n                  <EditOutlined />\n                  Edit\n                </Button>\n              </Card>\n              <Card style={{ paddingTop: 0 }}>\n                <h6 style={{ fontWeight: \"normal\", color: \"grey\" }}>\n                  {this.renderIndicators()}\n                </h6>\n              </Card>\n            </div>\n          </Col>\n        </Row>\n      </Aux>\n    );\n  }\n}\n\nexport default ImpactManagerSummary;\n","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManagerForm3.jsx",["510","511","512","513","514","515","516","517","518","519","520","521"],"import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Grid, Checkbox, FormControlLabel } from \"@material-ui/core\";\n//import { sdgDump } from \"./sdgDump\";\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Row, Col, Select } from \"antd\";\nimport SvgCard from \"../SvgCard/SvgCard\";\nimport { DataGrid } from \"@material-ui/data-grid\";\n\nconst { Option } = Select;\nconst styles = (theme) => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginLeft: theme.spacing(),\n    marginRight: theme.spacing(),\n    width: \"100%\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n    display: \"block\",\n    margin: \"50px\",\n  },\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  formRoot: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  formControl: {\n    margin: theme.spacing(),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  searchButton: {\n    backgroundColor: \" #66bb6a\",\n  },\n  select: {\n    marginTop: \"0px\",\n    width: \"100%\",\n  },\n  button: {\n    margin: theme.spacing(),\n    marginTop: \"16px\",\n    color: \"#ffffff\",\n    backgroundColor: theme.palette.secondary.main,\n    paddingTop: \"15px\",\n    paddingBottom: \"15px\",\n    width: \"100%\",\n  },\n});\n\nconst renderIndicators = (indicators, props, sdgIndex) => {\n  const {sdgDump} = props\n  const { allIndicators } = props;\n  const allUIIndicators = indicators.map((item, index) => {\n    return (\n      <FormControlLabel\n        key={index}\n        style={{ width: \"100%\", }}\n        control={\n          <Checkbox\n            checked={item.status}\n            onChange={(e) =>\n              props.handleCheckboxChange(\n                item.description,\n                e,\n                index,\n                sdgIndex,\n                item.id\n              )\n            }\n            value={item.description}\n          />\n        }\n        label={item.description}\n      />\n    );\n  });\n  return allUIIndicators;\n};\n\nconst returnSdgPanels = (sdgChecks, classes, props, sdgDump) => {\n  const { allIndicators } = props;\n  const sdgPanels = sdgChecks.map((opt, index) => {\n    return (\n      <ExpansionPanel key={index}>\n        <Grid container spacing={1}>\n          <ExpansionPanelSummary\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <SvgCard\n              key={index}\n              path={opt.image}\n              alt={opt.image}\n              height={150}\n              opacity={\"1\"}\n              style={{ height: \"10px\" }}\n            />\n            <Grid item xs={3} sm={3}>\n              <Typography className={classes.heading}>{opt.description}</Typography>\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <div\n                style={{\n                  overflowX: \"auto\",\n                  width: \"100%\",\n                  height: \"200px\",\n                }}\n                className=\"impact\"\n              >\n                <form\n                  className={classes.container}\n                  style={{ width: \"100%\" }}\n                  noValidate\n                >\n                  {renderIndicators(opt.indicators, props, opt.id)}\n                </form>\n              </div>\n            </Grid>\n          </ExpansionPanelSummary>\n        </Grid>\n      </ExpansionPanel>\n    );\n  });\n\n  return sdgPanels;\n};\n\nfunction ImpactManagerForm3(props) {\n  const { classes } = props;\n  const {sdgDump} = props\n  const { allIndicators, sdgChecks } = props;\n\n  return (\n    <div className={`flex items-center ${classes.root}`}>\n      <Grid container spacing={8}>\n        {/* <Grid item sm={4} md={12}>\n          <form className={classes.container} noValidate>\n            {renderIndicators(allIndicators, props)}\n          </form>\n        </Grid> */}\n\n        <Grid item sm={4} md={12}>\n          <div className={classes.root}>\n            {returnSdgPanels(sdgChecks, classes, props, sdgDump)}\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default withStyles(styles, { withTheme: true })(ImpactManagerForm3);\n","/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManagerForm2.jsx",["522","523","524","525","526","527","528","529","530","531"],"import React, { useState, useEffect } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { withStore } from \"@spyna/react-store\";\nimport {\n  TextField,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  MenuItem,\n} from \"@material-ui/core\";\n//import { sdgDump } from \"./sdgDump\";\nimport SvgCard from \"../SvgCard/SvgCard\";\nimport axios from \"axios\";\nconst styles = (theme) => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginLeft: theme.spacing(),\n    marginRight: theme.spacing(),\n    width: \"100%\",\n  },\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  formRoot: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  formControl: {\n    margin: theme.spacing(),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  searchButton: {\n    backgroundColor: \" #66bb6a\",\n  },\n  select: {\n    marginTop: \"0px\",\n    width: \"100%\",\n  },\n  button: {\n    margin: theme.spacing(),\n    marginTop: \"16px\",\n    color: \"#ffffff\",\n    backgroundColor: theme.palette.secondary.main,\n    paddingTop: \"15px\",\n    paddingBottom: \"15px\",\n    width: \"100%\",\n  },\n});\n\n\n\nconst ImpactManagerForm2 = (props) => {\n  const [sdgDumping, setSdgDumping] = useState(\"\");\n\n\n  console.log(\"props in form 2\",props)\n  // useEffect(() => {\n  //   async function fetchSdgDump() {\n  //    const config = {\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         accessToken: props.auth.data.accessToken,\n  //       },\n  //     };\n  //     let result = await axios.get(\n  //       \"http://trail-api.test.vggdev.com/sdgs/all/indicators\",\n  //       config\n  //     );\n  //     setSdgDumping(result.data.data);\n  //   }\n\n  //   fetchSdgDump();\n  // }, []); \n  \n  const { classes } = props;\n\n  const setOpacity = (sdgCheckBoxes, sdgNum) => {\n    let opacity = \"\";\n    if (sdgCheckBoxes[sdgNum] === true) {\n      opacity = \"1\";\n    } else {\n      opacity = \"0.3\";\n    }\n    return opacity;\n  };\n\n  const {\n    handleInputChange,\n    handleSdgBoxChange,\n    sdgCheckBoxes,\n    formTwoErrors,\n    sdgDump,\n  } = props;\n\n  const renderSdgs = () => {\n    const allSdgs =props.sdgDump&& props.sdgDump.map((item, index) => {\n      return (\n        <SvgCard\n          key={index}\n          path={item.image}\n          width={120}\n          height={120}\n          sdgCheckBoxes={sdgCheckBoxes}\n          opacity={setOpacity(sdgCheckBoxes, item.id)}\n          onClick={handleSdgBoxChange.bind(this, item.id)}\n        />\n      );\n    });\n\n    return allSdgs;\n  };\n\n  return (\n    <div className={`flex items-center ${classes.root}`}>\n      <Grid>\n        <Grid item sm={4} md={12}>\n          <p\n            style={{\n              color: formTwoErrors.svg === true ? \"red\" : \"black\",\n              marginTop: \"15px\",\n            }}\n          >\n            Which SDGs aligns with your impact priorities?\n          </p>\n\n          <Grid item sm={12} md={12}>\n            {renderSdgs(sdgDump)}\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles, { withTheme: true })(ImpactManagerForm2);\n","/home/mrayor/Documents/code/trail-web/src/src/actions/reportActions.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/ImpactManager/ImpactManagerForm1.jsx",["532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565"],"import React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {\n  TextField,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  MenuItem,\n  FormControl,\n} from \"@material-ui/core\";\nimport { Upload, Form, Row, Col, Button } from \"antd\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport { useDropzone } from \"react-dropzone\";\nimport ImpactManagerSummary from \"./ImpactManagerSummary\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\nimport ImageUpload from \"../Upload/ImageUpload\";\nimport TopSpace from \"../Space/TopSpace\";\n\nconst { Option } = Select;\n\nconst styles = (theme) => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginLeft: 0,\n    marginRight: theme.spacing(),\n    marginTop: 0,\n    width: \"100%\",\n  },\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  formRoot: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  formControl: {\n    margin: theme.spacing(),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  searchButton: {\n    backgroundColor: \" #66bb6a\",\n  },\n  select: {\n    marginTop: \"0px\",\n    width: \"100%\",\n  },\n  button: {\n    margin: theme.spacing(),\n    marginTop: \"16px\",\n    color: \"#ffffff\",\n    backgroundColor: theme.palette.secondary.main,\n    paddingTop: \"15px\",\n    paddingBottom: \"15px\",\n    width: \"100%\",\n  },\n});\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\",\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\",\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\",\n};\n\nconst thumbsContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  marginTop: 16,\n};\n\nconst thumb = {\n  display: \"inline-flex\",\n  borderRadius: 2,\n  border: \"1px solid #eaeaea\",\n  marginBottom: 8,\n  marginRight: 8,\n  width: \"auto\",\n  height: 200,\n  padding: 4,\n  boxSizing: \"border-box\",\n};\n\nconst thumbInner = {\n  display: \"flex\",\n  minWidth: 0,\n  overflow: \"hidden\",\n};\n\nconst img = {\n  display: \"block\",\n  width: \"auto\",\n  height: \"100%\",\n};\n\nfunction ImpactManagerForm1(props) {\n  const {\n    classes,\n    description,\n    code,\n    name,\n    //projectLocation,\n    programmeLocation,\n    formOneErrors,\n    //locationsEnum,\n    image,\n    programmePlaces,\n    address,\n    totalNumberOfBeneficiaries,\n    budget,\n    handleDrop,\n    files,\n  } = props;\n\n  const {\n    handleInputChange,\n    handleSelectChange,\n    handleBannerChange,\n    handleChangePlace,\n    handleSelectPlace,\n    normFile,\n  } = props;\n\n  return (\n    <div className={`flex items-center ${classes.root}`}>\n      <Row>\n        <Col span={5}>\n          <h4 className=\"m-0 p-0\">Banner Image</h4>\n          <TopSpace length={6} />\n          <ImageUpload handleDrop={handleDrop} files={files} />\n        </Col>\n      </Row>\n      <TopSpace length={10} />\n      <Row>\n        <Col span={8}>\n          <form className={classes.container} noValidate>\n            <h4 for=\"project-name\" style={{ margin: 0 }}>\n              Programme Name\n            </h4>\n            <TextField\n              id=\"project-name\"\n              error={formOneErrors.name}\n              name={\"name\"}\n              value={name}\n              className={classes.textField}\n              margin=\"normal\"\n              variant=\"outlined\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={handleInputChange}\n            />\n          </form>\n        </Col>\n        <Col span={1}></Col>\n        <Col span={4}>\n          <form className={classes.container} noValidate>\n            <h4 for=\"project-code\" style={{ margin: 0 }}>\n              Programme Budget\n            </h4>\n            <TextField\n              id=\"project-budget\"\n              name={\"budget\"}\n              error={formOneErrors.code}\n              value={budget}\n              className={classes.textField}\n              margin=\"normal\"\n              variant=\"outlined\"\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={handleInputChange}\n            />\n          </form>\n        </Col>\n        <Col span={1}></Col>\n        <Col span={5}>\n          <form className={classes.container} noValidate>\n            <h4 for=\"project-beneficiaries\" style={{ margin: 0 }}>\n              Total Number of Beneficiaries\n            </h4>\n            <TextField\n              id=\"project-beneficiaries\"\n              name={\"totalNumberOfBeneficiaries\"}\n              error={formOneErrors.code}\n              value={totalNumberOfBeneficiaries}\n              className={classes.textField}\n              margin=\"normal\"\n              type=\"number\"\n              variant=\"outlined\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={handleInputChange}\n            />\n          </form>\n        </Col>\n        <Col span={1}></Col>\n        <Col span={4}>\n          <form className={classes.container} noValidate>\n            <h4 for=\"project-code\" style={{ margin: 0 }}>\n              Programme Code\n            </h4>\n            <TextField\n              id=\"project-code\"\n              name={\"code\"}\n              error={formOneErrors.code}\n              value={code}\n              className={classes.textField}\n              margin=\"normal\"\n              variant=\"outlined\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={handleInputChange}\n            />\n          </form>\n        </Col>\n        <Col span={10}>\n          <form className={classes.container} noValidate>\n            <h4 for=\"outlined-select-currency\" style={{ margin: 0 }}>\n              Programme Location\n            </h4>\n            <FormControl fullWidth required>\n              <PlacesAutocomplete\n                className={classes.textField}\n                variant=\"outlined\"\n                value={address}\n                onChange={handleChangePlace}\n                onSelect={handleSelectPlace}\n              >\n                {({\n                  getInputProps,\n                  suggestions,\n                  getSuggestionItemProps,\n                  loading,\n                }) => (\n                  <div>\n                    <input\n                      style={{\n                        padding: \"15px\",\n                        width: \"100%\",\n                        border: \"1px solid rgba(0, 0, 0, 0.23)\",\n                        borderRadius: \"4px\",\n                      }}\n                      {...getInputProps({\n                        placeholder: \"Search Location\",\n                        className: \"location-search-input\",\n                      })}\n                    />\n                    <div className=\"autocomplete-dropdown-container\">\n                      {loading && <div>...</div>}\n                      {suggestions.map((suggestion) => {\n                        const className = suggestion.active\n                          ? \"suggestion-item--active\"\n                          : \"suggestion-item\";\n                        // inline style for demonstration purpose\n                        const style = suggestion.active\n                          ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                          : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                        return (\n                          <div\n                            {...getSuggestionItemProps(suggestion, {\n                              className,\n                              style,\n                            })}\n                          >\n                            <span>{suggestion.description}</span>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                )}\n              </PlacesAutocomplete>\n            </FormControl>\n          </form>\n        </Col>\n        <Col span={1}></Col>\n      \n      </Row>\n\n      <Grid container spacing={3}>\n        {/* Project Name */}\n\n        {/* Project Banner */}\n        <Grid item sm={3} md={3}></Grid>\n\n        {/* Project Location */}\n        <Grid item sm={3} md={3}></Grid>\n      </Grid>\n\n      {/* Second Row */}\n\n      <Grid container spacing={8}>\n        {/* Project Description */}\n        <Grid item sm={4} md={12}>\n          <form className={classes.container} noValidate>\n            <h4 for=\"project-description\" style={{ margin: 0 }}>\n              Programme Description\n            </h4>\n            <TextField\n              id=\"project-description\"\n              name={\"description\"}\n              value={description}\n              error={formOneErrors.description}\n              multiline\n              rows={4}\n              rowsMax={6}\n              className={classes.textField}\n              margin=\"normal\"\n              variant=\"outlined\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={handleInputChange}\n            />\n          </form>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default withStyles(styles, { withTheme: true })(ImpactManagerForm1);\n\n// export default GoogleApiWrapper({\n//   apiKey: \"AIzaSyB5vf0DbG-X2_Qdya9IPHl1ZbhPdn276gQ\",\n// })(MapContainer);\n","/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/menu/RightMenu.js",["566","567","568","569","570","571","572","573","574"],"import React, { useEffect } from \"react\";\nimport \"./index.css\";\nimport { connect, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { logout, loadUser } from \"../../../actions/authAuctions\";\nimport { Redirect } from \"react-router\";\n\nimport { Menu, Grid } from \"antd\";\nimport { Link } from \"@material-ui/core\";\nimport { CLEAR_SESS } from \"../../../constants/Types\";\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nconst { useBreakpoint } = Grid;\n\nexport const RightMenu = (props) => {\n  const { logout, user, loadUser, isAuthenticated, auth, history } = props;\n  const { data } = auth;\n  const { userData } = props;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // loadUser();\n    //eslint-disable-next-line\n\n    console.log(\"props in right menu\", props);\n  }, []);\n\n  const onLogout = () => {\n    localStorage.clear();\n    dispatch({\n      type: CLEAR_SESS,\n      payload: {},\n    });\n    props.history.push(\"/\");\n  };\n\n  const onDashboardClick = () => {\n    props.history.push(\"/app/dashboard\");\n  };\n\n  const onProgramClick = () => {\n    props.history.push(\"/app/dashboard/projects\");\n  };\n\n  const onManagerClick = () => {\n    props.history.push(\"/app/dashboard/manager\");\n  };\n\n  const onFormClick = () => {\n    props.history.push(\"/app/dashboard/form\");\n  };\n\n  const { md } = useBreakpoint();\n  return (\n    <Menu mode={md ? \"horizontal\" : \"inline\"}>\n      <SubMenu\n        key=\"sub1\"\n        title={`${userData && userData.firstName} ${\n          userData && userData.lastName\n        }`}\n      >\n        <Menu.Item key=\"setting:1\" className={\"blindMenu\"}>\n          <Link to=\"/app/dashboard\" onClick={onDashboardClick}>\n            Dashboard\n          </Link>\n        </Menu.Item>\n        <Menu.Item key=\"setting:2\" className={\"blindMenu\"}>\n          <Link to=\"/app/dashboard/projects\" onClick={onProgramClick}>\n            Program Report\n          </Link>\n        </Menu.Item>\n        <Menu.Item key=\"setting:3\" className={\"blindMenu\"}>\n          <Link to=\"/app/dashboard/manager\" onClick={onManagerClick}>\n            Programme Manager\n          </Link>\n        </Menu.Item>\n        <Menu.Item key=\"setting:4\" className={\"blindMenu\"}>\n          <Link to=\"/app/dashboard/form\" onClick={onFormClick}>\n            Forms\n          </Link>\n        </Menu.Item>\n        <Menu.Item key=\"setting:5\">\n          <Link onClick={onLogout}>Logout</Link>\n        </Menu.Item>\n      </SubMenu>\n    </Menu>\n  );\n};\n\nRightMenu.propTypes = {\n  logout: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout, loadUser })(RightMenu);\n","/home/mrayor/Documents/code/trail-web/src/src/layouts/layout-components/menu/LeftMenu.js",["575","576"],"import \"./index.css\";\nimport React from \"react\";\nimport { Menu, Grid } from \"antd\";\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nconst { useBreakpoint } = Grid;\n\nconst LeftMenu = () => {\n  const { md } = useBreakpoint();\n  return <Menu mode={md ? \"horizontal\" : \"inline\"}></Menu>;\n};\n\nexport default LeftMenu;\n","/home/mrayor/Documents/code/trail-web/src/src/components/FundingGraph/data.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/FormPreview/index.jsx",["577","578"],"import React, {useEffect} from 'react'\nimport { ProgrammeSummary } from './ProgrammeSummary'\nimport {PreviewQuestions} from './PreviewQuestions'\nimport { Button, Col, Row, Skeleton, Typography } from 'antd'\nimport './styles.scss'\nimport {dummyForms} from '../FormIO/constants'\nimport { appHelpers } from '../../appHelpers/appHelpers'\nimport { getForm } from '../../actions/formActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, useParams } from 'react-router-dom'\n\nconst FormPreview = ({service}) => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { token } = useSelector(state => state.auth)\n    const { id } = useParams()\n    const {form,loading} = useSelector(state => state.form)\n\n    const handleSubmit = () => {\n         appHelpers.successMessageAlert(\"Form Successfully Created\", 2000)\n         history.push('/app/dashboard/form')\n    } \n\n    useEffect(() => {\n        console.log('ran')\n        dispatch(getForm(id,service,true))\n    },[id,dispatch,service])\n\n    if(loading) return <Skeleton />\n\n    return (\n        <section className=\"form-preview-section\" >\n            <Row gutter={[20, 20]}>\n                <Col span={24}>\n                    <Typography.Paragraph className=\"form-preview-section-link\">Generated Link: <a target=\"_blank\" rel=\"noreferrer\" href={form?.formlink}>{form?.formlink}</a></Typography.Paragraph>\n                </Col>\n            <Col span={24}>\n                <ProgrammeSummary form={form} />\n            </Col>\n             <Col span={24}>\n                <Typography.Text className=\"form-preview-section-title\">Preview Questions</Typography.Text>\n            </Col>\n             <Col span={24}>\n               <PreviewQuestions form={form} />\n            </Col>\n            <Col span={12}>\n                <Button type=\"primary\" size=\"large\" shape=\"round\" onClick={handleSubmit}>Submit</Button>\n            </Col>\n        </Row>\n        </section>\n    )\n}\n\nexport default FormPreview","/home/mrayor/Documents/code/trail-web/src/src/components/Space/TopSpace.js",[],"/home/mrayor/Documents/code/trail-web/src/src/components/Indicators/IndicatorView.jsx",["579"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst IndicatorView = props => {\n  return (\n      <>\n<label style={{fontSize:\"15px\"}}>{\" - \"}{props.indicator}</label>\n      </>\n  );\n};\n\nIndicatorView.defaultProps = {};\n\nIndicatorView.propTypes = {};\n\nexport default IndicatorView;\n","/home/mrayor/Documents/code/trail-web/src/src/components/SvgCard/SvgCard.jsx",[],"/home/mrayor/Documents/code/trail-web/src/src/components/SvgCard/SvgCardView.jsx",["580"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SvgCardView = props => {\n  const {width} = props;\n  return (\n    <>\n      <img href=\"svg\" src={props.path} style={{ width: `${width}`,padding:\".2rem\" }} />\n    </>\n  );\n};\n\nSvgCardView.defaultProps = {\n  path: \"/sdgs/E_SDG_PRINT-01.svg\",\n  opacity:\"1\",\n  width:\"20%\"\n};\n\nSvgCardView.propTypes = {\n  path: PropTypes.string,\n  width:PropTypes.string\n};\n\nexport default SvgCardView;\n","/home/mrayor/Documents/code/trail-web/src/src/components/Upload/ImageUpload.jsx",["581"],"import React from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport \"./style.css\";\n// for profile picture\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const thumbsContainer = {\n      width: \"250px\",\n      height: \"250px\",\n      borderRadius: \"5%\",\n      objectFit: \"cover\",\n      objectPosition: \"center\",\n    };\n    const thumbs = this.props.files.map((file) => (\n      <img\n        src={file.preview}\n        style={thumbsContainer}\n        alt=\"profile\"\n        key={file.size}\n      />\n    ));\n    const render =\n      Object.keys(this.props.files).length !== 0 ? (\n        this.props.files.map((file) => <aside>{thumbs}</aside>)\n      ) : (\n        <p className=\"hello\">+ image here to prompt users to click</p>\n      );\n    return (\n      <div className=\"App\">\n        <Dropzone\n          onDrop={this.props.handleDrop}\n          multiple={false}\n          style={{\n            width: \"10px\",\n            height: \"100px\",\n            borderRadius: \"50%\",\n            objectFit: \"cover\",\n            objectPosition: \"center\",\n            border: \" 1px dashed\",\n          }}\n          accept=\"image/png\"\n        >\n          {({ getRootProps, getInputProps }) => (\n            <>\n              <div {...getRootProps({ className: \"dropzone\" })}>\n                <input {...getInputProps()} />\n                <p>Drag'n'drop You logo, or browse</p>\n                {thumbs}\n              </div>\n            </>\n          )}\n        </Dropzone>\n        {/* <div>\n        <strong>Files:</strong>\n        <ul>\n          {this.props.files.map(fileName => (\n            <li key={fileName}>{fileName}</li>\n          ))}\n        </ul>\n      </div> */}\n      </div>\n    );\n  }\n}\n\nexport default ImageUpload;\n","/home/mrayor/Documents/code/trail-web/src/src/components/FormPreview/PreviewQuestions.jsx",[],"/home/mrayor/Documents/code/trail-web/src/src/components/FormPreview/ProgrammeSummary.jsx",[],"/home/mrayor/Documents/code/trail-web/src/src/components/PublishedForm/Summary.jsx",[],"/home/mrayor/Documents/code/trail-web/src/src/components/PublishedForm/Questions.jsx",[],"/home/mrayor/Documents/code/trail-web/src/src/appHelpers/Builder.jsx",[],"/home/mrayor/Documents/code/trail-web/src/src/components/Widgets/ShortFreeText.jsx",["582","583","584"],"import { Typography, InputNumber, Form } from 'antd'\nimport { camelCase, isEmpty, startCase } from 'lodash'\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { buildAnswers } from '../../actions/formActions'\nimport { Layout } from './Layout'\n\nexport const ShortFreeText = ({ content }) => {\n    const dispatch = useDispatch()\n\n    const handleChange = (value) => dispatch(buildAnswers({\n        value: content?.inputType,\n        answer: value?.toString(),\n        questionId: content?.questionId\n    }))\n\n    return (\n        <Layout indicatorquestion={content?.indicatorQuestion || ''}  formId={content?.programform} isPreview={content?.isPreview} id={content?.id} question={content?.question} >\n            <Form.Item rules={[\n                      { required: true, message: \"This field is required\" },\n                    ]}>\n                <InputNumber onChange={handleChange} style={{width:'100%'}} name={camelCase(content?.key)} placeholder={content?.placeholder}  />\n            </Form.Item>\n        </Layout>\n    )\n}\n","/home/mrayor/Documents/code/trail-web/src/src/components/Widgets/Layout.jsx",[],"/home/mrayor/Documents/code/trail-web/src/src/components/Widgets/RadioInput.jsx",["585","586"],"import {Form,Radio} from 'antd'\nimport {Layout} from './Layout'\nimport React from 'react'\nimport { connect, useDispatch } from 'react-redux'\nimport { buildAnswers } from '../../actions/formActions'\nimport { isEmpty } from 'lodash'\n\nexport const RadioInput = ({ content }) => {\n    const dispatch = useDispatch()\n    console.log(content)\n    \n    const radioStyle = {\n        display: 'block',\n        height: '30px',\n        lineHeight: '30px',\n    };\n    console.log('reereas', content)\nconsole.log(content)\n    const handleChange = (e) => dispatch(buildAnswers({\n        value: content?.inputType,\n        answer: e.target?.value,\n        questionId: content?.questionId\n    }))\n    \n    return (\n          <Layout indicatorquestion={content?.indicatorQuestion || ''} formId={content?.programform} isPreview={content?.isPreview} id={content?.id} question={content?.question} >\n            <Form.Item>\n                <Radio.Group onChange={handleChange}>\n                    <Radio style={radioStyle} value={'1'}>Yes</Radio>\n                    <Radio style={radioStyle} value={'2'}>No</Radio>\n                 </Radio.Group>\n            </Form.Item>\n        </Layout>\n    )\n}\n",{"ruleId":"587","severity":1,"message":"588","line":4,"column":10,"nodeType":"589","messageId":"590","endLine":4,"endColumn":23},{"ruleId":"591","replacedBy":"592"},{"ruleId":"593","replacedBy":"594"},{"ruleId":"587","severity":1,"message":"595","line":50,"column":7,"nodeType":"589","messageId":"590","endLine":50,"endColumn":19},{"ruleId":"596","severity":1,"message":"597","line":94,"column":40,"nodeType":"598","messageId":"599","endLine":94,"endColumn":42},{"ruleId":"596","severity":1,"message":"597","line":95,"column":49,"nodeType":"598","messageId":"599","endLine":95,"endColumn":51},{"ruleId":"596","severity":1,"message":"597","line":110,"column":33,"nodeType":"598","messageId":"599","endLine":110,"endColumn":35},{"ruleId":"596","severity":1,"message":"597","line":111,"column":55,"nodeType":"598","messageId":"599","endLine":111,"endColumn":57},{"ruleId":"596","severity":1,"message":"597","line":127,"column":52,"nodeType":"598","messageId":"599","endLine":127,"endColumn":54},{"ruleId":"596","severity":1,"message":"597","line":141,"column":37,"nodeType":"598","messageId":"599","endLine":141,"endColumn":39},{"ruleId":"596","severity":1,"message":"597","line":142,"column":61,"nodeType":"598","messageId":"599","endLine":142,"endColumn":63},{"ruleId":"587","severity":1,"message":"600","line":155,"column":9,"nodeType":"589","messageId":"590","endLine":155,"endColumn":14},{"ruleId":"596","severity":1,"message":"597","line":157,"column":52,"nodeType":"598","messageId":"599","endLine":157,"endColumn":54},{"ruleId":"587","severity":1,"message":"600","line":168,"column":9,"nodeType":"589","messageId":"590","endLine":168,"endColumn":14},{"ruleId":"596","severity":1,"message":"597","line":170,"column":37,"nodeType":"598","messageId":"599","endLine":170,"endColumn":39},{"ruleId":"596","severity":1,"message":"597","line":171,"column":61,"nodeType":"598","messageId":"599","endLine":171,"endColumn":63},{"ruleId":"587","severity":1,"message":"588","line":3,"column":17,"nodeType":"589","messageId":"590","endLine":3,"endColumn":30},{"ruleId":"587","severity":1,"message":"601","line":8,"column":8,"nodeType":"589","messageId":"590","endLine":8,"endColumn":13},{"ruleId":"587","severity":1,"message":"602","line":9,"column":8,"nodeType":"589","messageId":"590","endLine":9,"endColumn":20},{"ruleId":"587","severity":1,"message":"603","line":12,"column":8,"nodeType":"589","messageId":"590","endLine":12,"endColumn":21},{"ruleId":"587","severity":1,"message":"604","line":17,"column":8,"nodeType":"589","messageId":"590","endLine":17,"endColumn":21},{"ruleId":"587","severity":1,"message":"605","line":2,"column":10,"nodeType":"589","messageId":"590","endLine":2,"endColumn":13},{"ruleId":"587","severity":1,"message":"606","line":2,"column":15,"nodeType":"589","messageId":"590","endLine":2,"endColumn":18},{"ruleId":"587","severity":1,"message":"607","line":7,"column":16,"nodeType":"589","messageId":"590","endLine":7,"endColumn":21},{"ruleId":"587","severity":1,"message":"608","line":9,"column":8,"nodeType":"589","messageId":"590","endLine":9,"endColumn":13},{"ruleId":"587","severity":1,"message":"609","line":10,"column":10,"nodeType":"589","messageId":"590","endLine":10,"endColumn":22},{"ruleId":"587","severity":1,"message":"610","line":77,"column":13,"nodeType":"589","messageId":"590","endLine":77,"endColumn":20},{"ruleId":"587","severity":1,"message":"605","line":2,"column":18,"nodeType":"589","messageId":"590","endLine":2,"endColumn":21},{"ruleId":"587","severity":1,"message":"606","line":2,"column":23,"nodeType":"589","messageId":"590","endLine":2,"endColumn":26},{"ruleId":"587","severity":1,"message":"608","line":9,"column":8,"nodeType":"589","messageId":"590","endLine":9,"endColumn":13},{"ruleId":"587","severity":1,"message":"609","line":10,"column":10,"nodeType":"589","messageId":"590","endLine":10,"endColumn":22},{"ruleId":"587","severity":1,"message":"611","line":2,"column":8,"nodeType":"589","messageId":"590","endLine":2,"endColumn":14},{"ruleId":"587","severity":1,"message":"605","line":3,"column":18,"nodeType":"589","messageId":"590","endLine":3,"endColumn":21},{"ruleId":"587","severity":1,"message":"606","line":3,"column":23,"nodeType":"589","messageId":"590","endLine":3,"endColumn":26},{"ruleId":"587","severity":1,"message":"611","line":2,"column":8,"nodeType":"589","messageId":"590","endLine":2,"endColumn":14},{"ruleId":"587","severity":1,"message":"605","line":3,"column":18,"nodeType":"589","messageId":"590","endLine":3,"endColumn":21},{"ruleId":"587","severity":1,"message":"606","line":3,"column":23,"nodeType":"589","messageId":"590","endLine":3,"endColumn":26},{"ruleId":"587","severity":1,"message":"612","line":7,"column":8,"nodeType":"589","messageId":"590","endLine":7,"endColumn":18},{"ruleId":"613","severity":1,"message":"614","line":13,"column":3,"nodeType":"615","messageId":"616","endLine":15,"endColumn":4},{"ruleId":"587","severity":1,"message":"617","line":1,"column":17,"nodeType":"589","messageId":"590","endLine":1,"endColumn":26},{"ruleId":"587","severity":1,"message":"618","line":8,"column":8,"nodeType":"589","messageId":"590","endLine":8,"endColumn":20},{"ruleId":"587","severity":1,"message":"608","line":14,"column":8,"nodeType":"589","messageId":"590","endLine":14,"endColumn":13},{"ruleId":"587","severity":1,"message":"619","line":34,"column":13,"nodeType":"589","messageId":"590","endLine":34,"endColumn":24},{"ruleId":"587","severity":1,"message":"620","line":34,"column":26,"nodeType":"589","messageId":"590","endLine":34,"endColumn":35},{"ruleId":"621","severity":1,"message":"622","line":36,"column":6,"nodeType":"623","endLine":36,"endColumn":23,"suggestions":"624"},{"ruleId":"587","severity":1,"message":"625","line":3,"column":41,"nodeType":"589","messageId":"590","endLine":3,"endColumn":45},{"ruleId":"587","severity":1,"message":"626","line":3,"column":47,"nodeType":"589","messageId":"590","endLine":3,"endColumn":55},{"ruleId":"587","severity":1,"message":"627","line":3,"column":57,"nodeType":"589","messageId":"590","endLine":3,"endColumn":61},{"ruleId":"587","severity":1,"message":"628","line":4,"column":8,"nodeType":"589","messageId":"590","endLine":4,"endColumn":14},{"ruleId":"587","severity":1,"message":"629","line":5,"column":8,"nodeType":"589","messageId":"590","endLine":5,"endColumn":15},{"ruleId":"587","severity":1,"message":"630","line":7,"column":10,"nodeType":"589","messageId":"590","endLine":7,"endColumn":20},{"ruleId":"587","severity":1,"message":"631","line":8,"column":10,"nodeType":"589","messageId":"590","endLine":8,"endColumn":19},{"ruleId":"587","severity":1,"message":"632","line":22,"column":7,"nodeType":"589","messageId":"590","endLine":22,"endColumn":9},{"ruleId":"633","severity":1,"message":"634","line":5,"column":1,"nodeType":"635","endLine":14,"endColumn":2},{"ruleId":"633","severity":1,"message":"636","line":14,"column":1,"nodeType":"635","endLine":44,"endColumn":2},{"ruleId":"633","severity":1,"message":"636","line":10,"column":1,"nodeType":"635","endLine":28,"endColumn":2},{"ruleId":"587","severity":1,"message":"637","line":4,"column":3,"nodeType":"589","messageId":"590","endLine":4,"endColumn":16},{"ruleId":"633","severity":1,"message":"636","line":18,"column":1,"nodeType":"635","endLine":41,"endColumn":3},{"ruleId":"587","severity":1,"message":"625","line":3,"column":41,"nodeType":"589","messageId":"590","endLine":3,"endColumn":45},{"ruleId":"587","severity":1,"message":"626","line":3,"column":47,"nodeType":"589","messageId":"590","endLine":3,"endColumn":55},{"ruleId":"587","severity":1,"message":"627","line":3,"column":57,"nodeType":"589","messageId":"590","endLine":3,"endColumn":61},{"ruleId":"587","severity":1,"message":"638","line":4,"column":10,"nodeType":"589","messageId":"590","endLine":4,"endColumn":22},{"ruleId":"587","severity":1,"message":"639","line":4,"column":24,"nodeType":"589","messageId":"590","endLine":4,"endColumn":36},{"ruleId":"640","severity":1,"message":"641","line":69,"column":15,"nodeType":"642","endLine":69,"endColumn":72},{"ruleId":"587","severity":1,"message":"643","line":195,"column":7,"nodeType":"589","messageId":"590","endLine":195,"endColumn":16},{"ruleId":"587","severity":1,"message":"644","line":4,"column":8,"nodeType":"589","messageId":"590","endLine":4,"endColumn":22},{"ruleId":"587","severity":1,"message":"645","line":9,"column":8,"nodeType":"589","messageId":"590","endLine":9,"endColumn":18},{"ruleId":"587","severity":1,"message":"646","line":25,"column":13,"nodeType":"589","messageId":"590","endLine":25,"endColumn":22},{"ruleId":"647","severity":1,"message":"648","line":28,"column":65,"nodeType":"649","messageId":"650","endLine":28,"endColumn":67},{"ruleId":"587","severity":1,"message":"651","line":2,"column":10,"nodeType":"589","messageId":"590","endLine":2,"endColumn":21},{"ruleId":"587","severity":1,"message":"652","line":12,"column":10,"nodeType":"589","messageId":"590","endLine":12,"endColumn":15},{"ruleId":"587","severity":1,"message":"652","line":43,"column":10,"nodeType":"589","messageId":"590","endLine":43,"endColumn":15},{"ruleId":"587","severity":1,"message":"653","line":21,"column":10,"nodeType":"589","messageId":"590","endLine":21,"endColumn":19},{"ruleId":"587","severity":1,"message":"654","line":23,"column":10,"nodeType":"589","messageId":"590","endLine":23,"endColumn":30},{"ruleId":"587","severity":1,"message":"652","line":74,"column":9,"nodeType":"589","messageId":"590","endLine":74,"endColumn":14},{"ruleId":"587","severity":1,"message":"655","line":75,"column":9,"nodeType":"589","messageId":"590","endLine":75,"endColumn":17},{"ruleId":"587","severity":1,"message":"656","line":83,"column":10,"nodeType":"589","messageId":"590","endLine":83,"endColumn":21},{"ruleId":"587","severity":1,"message":"657","line":306,"column":36,"nodeType":"589","messageId":"590","endLine":306,"endColumn":51},{"ruleId":"587","severity":1,"message":"658","line":5,"column":3,"nodeType":"589","messageId":"590","endLine":5,"endColumn":14},{"ruleId":"587","severity":1,"message":"659","line":6,"column":3,"nodeType":"589","messageId":"590","endLine":6,"endColumn":13},{"ruleId":"587","severity":1,"message":"608","line":11,"column":8,"nodeType":"589","messageId":"590","endLine":11,"endColumn":13},{"ruleId":"587","severity":1,"message":"602","line":12,"column":8,"nodeType":"589","messageId":"590","endLine":12,"endColumn":20},{"ruleId":"587","severity":1,"message":"660","line":36,"column":9,"nodeType":"589","messageId":"590","endLine":36,"endColumn":15},{"ruleId":"587","severity":1,"message":"660","line":65,"column":9,"nodeType":"589","messageId":"590","endLine":65,"endColumn":15},{"ruleId":"587","severity":1,"message":"637","line":4,"column":3,"nodeType":"589","messageId":"590","endLine":4,"endColumn":16},{"ruleId":"587","severity":1,"message":"661","line":5,"column":3,"nodeType":"589","messageId":"590","endLine":5,"endColumn":17},{"ruleId":"587","severity":1,"message":"662","line":10,"column":21,"nodeType":"589","messageId":"590","endLine":10,"endColumn":26},{"ruleId":"587","severity":1,"message":"663","line":10,"column":28,"nodeType":"589","messageId":"590","endLine":10,"endColumn":35},{"ruleId":"587","severity":1,"message":"664","line":11,"column":10,"nodeType":"589","messageId":"590","endLine":11,"endColumn":20},{"ruleId":"587","severity":1,"message":"660","line":49,"column":9,"nodeType":"589","messageId":"590","endLine":49,"endColumn":15},{"ruleId":"587","severity":1,"message":"665","line":4,"column":10,"nodeType":"589","messageId":"590","endLine":4,"endColumn":19},{"ruleId":"587","severity":1,"message":"605","line":5,"column":10,"nodeType":"589","messageId":"590","endLine":5,"endColumn":13},{"ruleId":"587","severity":1,"message":"606","line":5,"column":15,"nodeType":"589","messageId":"590","endLine":5,"endColumn":18},{"ruleId":"587","severity":1,"message":"666","line":5,"column":26,"nodeType":"589","messageId":"590","endLine":5,"endColumn":30},{"ruleId":"587","severity":1,"message":"667","line":17,"column":10,"nodeType":"589","messageId":"590","endLine":17,"endColumn":21},{"ruleId":"587","severity":1,"message":"668","line":18,"column":8,"nodeType":"589","messageId":"590","endLine":18,"endColumn":26},{"ruleId":"587","severity":1,"message":"608","line":22,"column":8,"nodeType":"589","messageId":"590","endLine":22,"endColumn":13},{"ruleId":"587","severity":1,"message":"669","line":23,"column":10,"nodeType":"589","messageId":"590","endLine":23,"endColumn":13},{"ruleId":"587","severity":1,"message":"670","line":23,"column":15,"nodeType":"589","messageId":"590","endLine":23,"endColumn":21},{"ruleId":"587","severity":1,"message":"609","line":24,"column":10,"nodeType":"589","messageId":"590","endLine":24,"endColumn":22},{"ruleId":"587","severity":1,"message":"671","line":27,"column":7,"nodeType":"589","messageId":"590","endLine":27,"endColumn":16},{"ruleId":"587","severity":1,"message":"672","line":43,"column":7,"nodeType":"589","messageId":"590","endLine":43,"endColumn":18},{"ruleId":"587","severity":1,"message":"673","line":47,"column":7,"nodeType":"589","messageId":"590","endLine":47,"endColumn":18},{"ruleId":"587","severity":1,"message":"674","line":51,"column":7,"nodeType":"589","messageId":"590","endLine":51,"endColumn":18},{"ruleId":"587","severity":1,"message":"675","line":55,"column":7,"nodeType":"589","messageId":"590","endLine":55,"endColumn":22},{"ruleId":"587","severity":1,"message":"676","line":62,"column":7,"nodeType":"589","messageId":"590","endLine":62,"endColumn":12},{"ruleId":"587","severity":1,"message":"677","line":74,"column":7,"nodeType":"589","messageId":"590","endLine":74,"endColumn":17},{"ruleId":"587","severity":1,"message":"678","line":80,"column":7,"nodeType":"589","messageId":"590","endLine":80,"endColumn":10},{"ruleId":"587","severity":1,"message":"679","line":238,"column":13,"nodeType":"589","messageId":"590","endLine":238,"endColumn":26},{"ruleId":"587","severity":1,"message":"680","line":293,"column":11,"nodeType":"589","messageId":"590","endLine":293,"endColumn":27},{"ruleId":"587","severity":1,"message":"681","line":306,"column":7,"nodeType":"589","messageId":"590","endLine":306,"endColumn":14},{"ruleId":"587","severity":1,"message":"682","line":308,"column":7,"nodeType":"589","messageId":"590","endLine":308,"endColumn":16},{"ruleId":"587","severity":1,"message":"683","line":310,"column":11,"nodeType":"589","messageId":"590","endLine":310,"endColumn":18},{"ruleId":"587","severity":1,"message":"660","line":326,"column":11,"nodeType":"589","messageId":"590","endLine":326,"endColumn":17},{"ruleId":"587","severity":1,"message":"655","line":538,"column":13,"nodeType":"589","messageId":"590","endLine":538,"endColumn":21},{"ruleId":"587","severity":1,"message":"617","line":1,"column":17,"nodeType":"589","messageId":"590","endLine":1,"endColumn":26},{"ruleId":"587","severity":1,"message":"684","line":4,"column":10,"nodeType":"589","messageId":"590","endLine":4,"endColumn":13},{"ruleId":"587","severity":1,"message":"685","line":4,"column":15,"nodeType":"589","messageId":"590","endLine":4,"endColumn":19},{"ruleId":"587","severity":1,"message":"686","line":5,"column":10,"nodeType":"589","messageId":"590","endLine":5,"endColumn":14},{"ruleId":"587","severity":1,"message":"687","line":6,"column":10,"nodeType":"589","messageId":"590","endLine":6,"endColumn":16},{"ruleId":"613","severity":1,"message":"614","line":9,"column":3,"nodeType":"615","messageId":"616","endLine":11,"endColumn":4},{"ruleId":"647","severity":1,"message":"688","line":33,"column":28,"nodeType":"649","messageId":"650","endLine":33,"endColumn":30},{"ruleId":"587","severity":1,"message":"645","line":2,"column":26,"nodeType":"589","messageId":"590","endLine":2,"endColumn":36},{"ruleId":"587","severity":1,"message":"689","line":6,"column":8,"nodeType":"589","messageId":"590","endLine":6,"endColumn":9},{"ruleId":"690","severity":1,"message":"691","line":18,"column":97,"nodeType":"692","messageId":"693","endLine":18,"endColumn":98},{"ruleId":"587","severity":1,"message":"617","line":1,"column":17,"nodeType":"589","messageId":"590","endLine":1,"endColumn":26},{"ruleId":"587","severity":1,"message":"694","line":3,"column":34,"nodeType":"589","messageId":"590","endLine":3,"endColumn":42},{"ruleId":"587","severity":1,"message":"617","line":1,"column":17,"nodeType":"589","messageId":"590","endLine":1,"endColumn":26},{"ruleId":"621","severity":1,"message":"695","line":22,"column":6,"nodeType":"623","endLine":22,"endColumn":23,"suggestions":"696"},{"ruleId":"587","severity":1,"message":"697","line":8,"column":3,"nodeType":"589","messageId":"590","endLine":8,"endColumn":17},{"ruleId":"587","severity":1,"message":"698","line":13,"column":8,"nodeType":"589","messageId":"590","endLine":13,"endColumn":17},{"ruleId":"587","severity":1,"message":"608","line":2,"column":8,"nodeType":"589","messageId":"590","endLine":2,"endColumn":13},{"ruleId":"587","severity":1,"message":"609","line":3,"column":10,"nodeType":"589","messageId":"590","endLine":3,"endColumn":22},{"ruleId":"587","severity":1,"message":"663","line":4,"column":28,"nodeType":"589","messageId":"590","endLine":4,"endColumn":35},{"ruleId":"587","severity":1,"message":"665","line":4,"column":10,"nodeType":"589","messageId":"590","endLine":4,"endColumn":19},{"ruleId":"587","severity":1,"message":"699","line":70,"column":7,"nodeType":"589","messageId":"590","endLine":70,"endColumn":24},{"ruleId":"587","severity":1,"message":"700","line":71,"column":7,"nodeType":"589","messageId":"590","endLine":71,"endColumn":22},{"ruleId":"587","severity":1,"message":"701","line":73,"column":7,"nodeType":"589","messageId":"590","endLine":73,"endColumn":12},{"ruleId":"587","severity":1,"message":"702","line":74,"column":7,"nodeType":"589","messageId":"590","endLine":74,"endColumn":16},{"ruleId":"587","severity":1,"message":"703","line":75,"column":7,"nodeType":"589","messageId":"590","endLine":75,"endColumn":14},{"ruleId":"587","severity":1,"message":"664","line":5,"column":10,"nodeType":"589","messageId":"590","endLine":5,"endColumn":20},{"ruleId":"587","severity":1,"message":"704","line":8,"column":8,"nodeType":"589","messageId":"590","endLine":8,"endColumn":29},{"ruleId":"587","severity":1,"message":"705","line":10,"column":8,"nodeType":"589","messageId":"590","endLine":10,"endColumn":22},{"ruleId":"587","severity":1,"message":"706","line":11,"column":8,"nodeType":"589","messageId":"590","endLine":11,"endColumn":20},{"ruleId":"587","severity":1,"message":"605","line":12,"column":10,"nodeType":"589","messageId":"590","endLine":12,"endColumn":13},{"ruleId":"587","severity":1,"message":"606","line":12,"column":15,"nodeType":"589","messageId":"590","endLine":12,"endColumn":18},{"ruleId":"587","severity":1,"message":"707","line":14,"column":10,"nodeType":"589","messageId":"590","endLine":14,"endColumn":18},{"ruleId":"587","severity":1,"message":"708","line":16,"column":9,"nodeType":"589","messageId":"590","endLine":16,"endColumn":15},{"ruleId":"587","severity":1,"message":"703","line":71,"column":10,"nodeType":"589","messageId":"590","endLine":71,"endColumn":17},{"ruleId":"587","severity":1,"message":"709","line":72,"column":11,"nodeType":"589","messageId":"590","endLine":72,"endColumn":24},{"ruleId":"587","severity":1,"message":"709","line":101,"column":11,"nodeType":"589","messageId":"590","endLine":101,"endColumn":24},{"ruleId":"587","severity":1,"message":"709","line":151,"column":11,"nodeType":"589","messageId":"590","endLine":151,"endColumn":24},{"ruleId":"587","severity":1,"message":"710","line":1,"column":27,"nodeType":"589","messageId":"590","endLine":1,"endColumn":36},{"ruleId":"587","severity":1,"message":"665","line":3,"column":10,"nodeType":"589","messageId":"590","endLine":3,"endColumn":19},{"ruleId":"587","severity":1,"message":"711","line":5,"column":3,"nodeType":"589","messageId":"590","endLine":5,"endColumn":12},{"ruleId":"587","severity":1,"message":"626","line":7,"column":3,"nodeType":"589","messageId":"590","endLine":7,"endColumn":11},{"ruleId":"587","severity":1,"message":"712","line":8,"column":3,"nodeType":"589","messageId":"590","endLine":8,"endColumn":19},{"ruleId":"587","severity":1,"message":"713","line":9,"column":3,"nodeType":"589","messageId":"590","endLine":9,"endColumn":11},{"ruleId":"587","severity":1,"message":"608","line":13,"column":8,"nodeType":"589","messageId":"590","endLine":13,"endColumn":13},{"ruleId":"587","severity":1,"message":"714","line":64,"column":10,"nodeType":"589","messageId":"590","endLine":64,"endColumn":20},{"ruleId":"587","severity":1,"message":"715","line":64,"column":22,"nodeType":"589","messageId":"590","endLine":64,"endColumn":35},{"ruleId":"587","severity":1,"message":"716","line":99,"column":5,"nodeType":"589","messageId":"590","endLine":99,"endColumn":22},{"ruleId":"587","severity":1,"message":"717","line":1,"column":17,"nodeType":"589","messageId":"590","endLine":1,"endColumn":25},{"ruleId":"587","severity":1,"message":"710","line":1,"column":27,"nodeType":"589","messageId":"590","endLine":1,"endColumn":36},{"ruleId":"587","severity":1,"message":"718","line":1,"column":38,"nodeType":"589","messageId":"590","endLine":1,"endColumn":44},{"ruleId":"587","severity":1,"message":"719","line":1,"column":46,"nodeType":"589","messageId":"590","endLine":1,"endColumn":53},{"ruleId":"587","severity":1,"message":"626","line":6,"column":3,"nodeType":"589","messageId":"590","endLine":6,"endColumn":11},{"ruleId":"587","severity":1,"message":"712","line":7,"column":3,"nodeType":"589","messageId":"590","endLine":7,"endColumn":19},{"ruleId":"587","severity":1,"message":"713","line":8,"column":3,"nodeType":"589","messageId":"590","endLine":8,"endColumn":11},{"ruleId":"587","severity":1,"message":"720","line":11,"column":10,"nodeType":"589","messageId":"590","endLine":11,"endColumn":16},{"ruleId":"587","severity":1,"message":"666","line":11,"column":18,"nodeType":"589","messageId":"590","endLine":11,"endColumn":22},{"ruleId":"587","severity":1,"message":"721","line":11,"column":34,"nodeType":"589","messageId":"590","endLine":11,"endColumn":40},{"ruleId":"587","severity":1,"message":"722","line":13,"column":8,"nodeType":"589","messageId":"590","endLine":13,"endColumn":18},{"ruleId":"587","severity":1,"message":"723","line":14,"column":8,"nodeType":"589","messageId":"590","endLine":14,"endColumn":32},{"ruleId":"587","severity":1,"message":"724","line":15,"column":10,"nodeType":"589","messageId":"590","endLine":15,"endColumn":22},{"ruleId":"587","severity":1,"message":"667","line":16,"column":10,"nodeType":"589","messageId":"590","endLine":16,"endColumn":21},{"ruleId":"587","severity":1,"message":"725","line":17,"column":8,"nodeType":"589","messageId":"590","endLine":17,"endColumn":28},{"ruleId":"587","severity":1,"message":"726","line":19,"column":3,"nodeType":"589","messageId":"590","endLine":19,"endColumn":19},{"ruleId":"587","severity":1,"message":"727","line":20,"column":3,"nodeType":"589","messageId":"590","endLine":20,"endColumn":12},{"ruleId":"587","severity":1,"message":"728","line":22,"column":10,"nodeType":"589","messageId":"590","endLine":22,"endColumn":24},{"ruleId":"587","severity":1,"message":"729","line":22,"column":26,"nodeType":"589","messageId":"590","endLine":22,"endColumn":39},{"ruleId":"587","severity":1,"message":"708","line":26,"column":9,"nodeType":"589","messageId":"590","endLine":26,"endColumn":15},{"ruleId":"587","severity":1,"message":"671","line":76,"column":7,"nodeType":"589","messageId":"590","endLine":76,"endColumn":16},{"ruleId":"587","severity":1,"message":"672","line":92,"column":7,"nodeType":"589","messageId":"590","endLine":92,"endColumn":18},{"ruleId":"587","severity":1,"message":"673","line":96,"column":7,"nodeType":"589","messageId":"590","endLine":96,"endColumn":18},{"ruleId":"587","severity":1,"message":"674","line":100,"column":7,"nodeType":"589","messageId":"590","endLine":100,"endColumn":18},{"ruleId":"587","severity":1,"message":"675","line":104,"column":7,"nodeType":"589","messageId":"590","endLine":104,"endColumn":22},{"ruleId":"587","severity":1,"message":"676","line":111,"column":7,"nodeType":"589","messageId":"590","endLine":111,"endColumn":12},{"ruleId":"587","severity":1,"message":"677","line":123,"column":7,"nodeType":"589","messageId":"590","endLine":123,"endColumn":17},{"ruleId":"587","severity":1,"message":"678","line":129,"column":7,"nodeType":"589","messageId":"590","endLine":129,"endColumn":10},{"ruleId":"587","severity":1,"message":"699","line":142,"column":5,"nodeType":"589","messageId":"590","endLine":142,"endColumn":22},{"ruleId":"587","severity":1,"message":"701","line":145,"column":5,"nodeType":"589","messageId":"590","endLine":145,"endColumn":10},{"ruleId":"587","severity":1,"message":"700","line":146,"column":5,"nodeType":"589","messageId":"590","endLine":146,"endColumn":20},{"ruleId":"587","severity":1,"message":"730","line":156,"column":5,"nodeType":"589","messageId":"590","endLine":156,"endColumn":23},{"ruleId":"587","severity":1,"message":"731","line":157,"column":5,"nodeType":"589","messageId":"590","endLine":157,"endColumn":23},{"ruleId":"587","severity":1,"message":"732","line":160,"column":5,"nodeType":"589","messageId":"590","endLine":160,"endColumn":13},{"ruleId":"587","severity":1,"message":"733","line":6,"column":10,"nodeType":"589","messageId":"590","endLine":6,"endColumn":18},{"ruleId":"587","severity":1,"message":"734","line":12,"column":7,"nodeType":"589","messageId":"590","endLine":12,"endColumn":20},{"ruleId":"587","severity":1,"message":"735","line":17,"column":11,"nodeType":"589","messageId":"590","endLine":17,"endColumn":17},{"ruleId":"587","severity":1,"message":"736","line":17,"column":19,"nodeType":"589","messageId":"590","endLine":17,"endColumn":23},{"ruleId":"587","severity":1,"message":"737","line":17,"column":25,"nodeType":"589","messageId":"590","endLine":17,"endColumn":33},{"ruleId":"587","severity":1,"message":"738","line":17,"column":35,"nodeType":"589","messageId":"590","endLine":17,"endColumn":50},{"ruleId":"587","severity":1,"message":"739","line":17,"column":58,"nodeType":"589","messageId":"590","endLine":17,"endColumn":65},{"ruleId":"587","severity":1,"message":"740","line":18,"column":11,"nodeType":"589","messageId":"590","endLine":18,"endColumn":15},{"ruleId":"621","severity":1,"message":"622","line":26,"column":6,"nodeType":"623","endLine":26,"endColumn":8,"suggestions":"741"},{"ruleId":"587","severity":1,"message":"742","line":4,"column":7,"nodeType":"589","messageId":"590","endLine":4,"endColumn":14},{"ruleId":"587","severity":1,"message":"734","line":5,"column":7,"nodeType":"589","messageId":"590","endLine":5,"endColumn":20},{"ruleId":"587","severity":1,"message":"630","line":6,"column":9,"nodeType":"589","messageId":"590","endLine":6,"endColumn":19},{"ruleId":"587","severity":1,"message":"652","line":15,"column":13,"nodeType":"589","messageId":"590","endLine":15,"endColumn":18},{"ruleId":"587","severity":1,"message":"743","line":2,"column":8,"nodeType":"589","messageId":"590","endLine":2,"endColumn":17},{"ruleId":"640","severity":1,"message":"641","line":8,"column":7,"nodeType":"642","endLine":8,"endColumn":88},{"ruleId":"587","severity":1,"message":"744","line":27,"column":11,"nodeType":"589","messageId":"590","endLine":27,"endColumn":17},{"ruleId":"587","severity":1,"message":"645","line":1,"column":10,"nodeType":"589","messageId":"590","endLine":1,"endColumn":20},{"ruleId":"587","severity":1,"message":"745","line":2,"column":21,"nodeType":"589","messageId":"590","endLine":2,"endColumn":28},{"ruleId":"587","severity":1,"message":"631","line":2,"column":30,"nodeType":"589","messageId":"590","endLine":2,"endColumn":39},{"ruleId":"587","severity":1,"message":"746","line":4,"column":10,"nodeType":"589","messageId":"590","endLine":4,"endColumn":17},{"ruleId":"587","severity":1,"message":"745","line":6,"column":10,"nodeType":"589","messageId":"590","endLine":6,"endColumn":17},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["747"],"no-negated-in-lhs",["748"],"'initialValue' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'count' is assigned a value but never used.","'Login' is defined but never used.","'setAuthToken' is defined but never used.","'CreateAccount' is defined but never used.","'PublishedForm' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Paper' is defined but never used.","'axios' is defined but never used.","'appConstants' is defined but never used.","'classes' is assigned a value but never used.","'FormIO' is defined but never used.","'CreateForm' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Component' is defined but never used.","'FundingGraph' is defined but never used.","'ServiceBase' is assigned a value but never used.","'Constants' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["749"],"'Card' is defined but never used.","'Checkbox' is defined but never used.","'Tabs' is defined but never used.","'Navbar' is defined but never used.","'SideBar' is defined but never used.","'dummyForms' is defined but never used.","'startCase' is defined but never used.","'h1' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","'TEST_DISPATCH' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'textLogin' is assigned a value but never used.","'CardActionArea' is defined but never used.","'Typography' is defined but never used.","'lastIndex' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'FormBuilder' is defined but never used.","'token' is assigned a value but never used.","'camelCase' is defined but never used.","'dummyQuestionLibrary' is defined but never used.","'projects' is assigned a value but never used.","'indicatorId' is assigned a value but never used.","'linkedindicator' is assigned a value but never used.","'USER_LOADED' is defined but never used.","'AUTH_ERROR' is defined but never used.","'config' is assigned a value but never used.","'GET_INDICATORS' is defined but never used.","'alert' is defined but never used.","'message' is defined but never used.","'appHelpers' is defined but never used.","'withStore' is defined but never used.","'Form' is defined but never used.","'useDropzone' is defined but never used.","'PlacesAutocomplete' is defined but never used.","'Map' is defined but never used.","'Marker' is defined but never used.","'baseStyle' is assigned a value but never used.","'activeStyle' is assigned a value but never used.","'acceptStyle' is assigned a value but never used.","'rejectStyle' is assigned a value but never used.","'thumbsContainer' is assigned a value but never used.","'thumb' is assigned a value but never used.","'thumbInner' is assigned a value but never used.","'img' is assigned a value but never used.","'impactManager' is assigned a value but never used.","'indicatorStrings' is assigned a value but never used.","'address' is assigned a value but never used.","'imageData' is assigned a value but never used.","'payload' is assigned a value but never used.","'Bar' is defined but never used.","'Line' is defined but never used.","'data' is defined but never used.","'random' is defined but never used.","Expected '===' and instead saw '=='.","'_' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Skeleton' is defined but never used.","React Hook useEffect has a missing dependency: 'ServiceBase'. Either include it or remove the dependency array.",["750"],"'ExportOutlined' is defined but never used.","'LogoTrail' is defined but never used.","'programmeLocation' is assigned a value but never used.","'programmePlaces' is assigned a value but never used.","'image' is assigned a value but never used.","'sdgChecks' is assigned a value but never used.","'sdgDump' is assigned a value but never used.","'ExpansionPanelDetails' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Autocomplete' is defined but never used.","'DataGrid' is defined but never used.","'Option' is assigned a value but never used.","'allIndicators' is assigned a value but never used.","'useEffect' is defined but never used.","'TextField' is defined but never used.","'FormControlLabel' is defined but never used.","'MenuItem' is defined but never used.","'sdgDumping' is assigned a value but never used.","'setSdgDumping' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'useMemo' is defined but never used.","'Upload' is defined but never used.","'Button' is defined but never used.","'InputLabel' is defined but never used.","'GooglePlacesAutocomplete' is defined but never used.","'DropzoneArea' is defined but never used.","'ImpactManagerSummary' is defined but never used.","'geocodeByAddress' is defined but never used.","'getLatLng' is defined but never used.","'UploadOutlined' is defined but never used.","'InboxOutlined' is defined but never used.","'handleSelectChange' is assigned a value but never used.","'handleBannerChange' is assigned a value but never used.","'normFile' is assigned a value but never used.","'Redirect' is defined but never used.","'MenuItemGroup' is assigned a value but never used.","'logout' is assigned a value but never used.","'user' is assigned a value but never used.","'loadUser' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'history' is assigned a value but never used.","'data' is assigned a value but never used.",["751"],"'SubMenu' is assigned a value but never used.","'PropTypes' is defined but never used.","'render' is assigned a value but never used.","'isEmpty' is defined but never used.","'connect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"752","fix":"753"},{"desc":"754","fix":"755"},{"desc":"756","fix":"757"},"Update the dependencies array to be: [token, dispatch, props]",{"range":"758","text":"759"},"Update the dependencies array to be: [token, dispatch, ServiceBase]",{"range":"760","text":"761"},"Update the dependencies array to be: [props]",{"range":"762","text":"763"},[1347,1364],"[token, dispatch, props]",[890,907],"[token, dispatch, ServiceBase]",[820,822],"[props]"]