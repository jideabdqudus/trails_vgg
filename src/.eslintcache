[{"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\index.js":"1","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\App.js":"2","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\store.js":"3","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\views\\ProjectOverview\\Overview.js":"4","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\views\\Projects\\Projects.js":"5","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\views\\Dashboard\\Dashboard.js":"6","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\views\\Impact\\Manager.js":"7","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\ProjectsCard\\index.js":"8","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\ImpactManager\\ImpactManager.jsx":"9","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\reducers\\index.js":"10","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\IndicatorsCard\\index.js":"11","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\PerformanceIndicators\\index.js":"12","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\ImpactMap\\index.js":"13","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\FundingGraph\\index.js":"14","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\ActionCard\\index.js":"15","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\DoughnutChart\\index.js":"16","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\layouts\\layout-components\\sidebar\\index.js":"17","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\layouts\\layout-components\\header\\index.js":"18","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\layouts\\layout-components\\footer\\index.js":"19","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\ImpactManager\\sdgDump.js":"20","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\actions\\projectAction.js":"21","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\appHelpers\\appHelpers.js":"22","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\ImpactManager\\ImpactManagerForm2.jsx":"23","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\ImpactManager\\ImpactManagerForm1.jsx":"24","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\ImpactManager\\ImpactManagerForm3.jsx":"25","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\ImpactManager\\ImpactManagerSummary.jsx":"26","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\reducers\\projectReducer.js":"27","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\DoughnutChart\\data.js":"28","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\FundingGraph\\data.js":"29","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\hocs\\_Aux\\index.js":"30","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\constants\\Types.js":"31","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\SvgCard\\SvgCard.jsx":"32","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\SvgCard\\SvgCardView.jsx":"33","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\Indicators\\IndicatorView.jsx":"34","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\views\\Login\\Login.js":"35","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\LoginForm\\index.js":"36","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\views\\Create\\CreateAccount.js":"37","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\CreateAcct\\Index.js":"38","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\views\\FormManager\\FormManager.js":"39","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\FormIO\\Index.js":"40","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\FormIO\\CreateForm.js":"41","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\reducers\\authReducer.js":"42","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\actions\\alertActions.js":"43","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\actions\\authAuctions.js":"44","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\utils\\setAuthToken.js":"45","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\reducers\\alertReducer.js":"46","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\Alert\\index.js":"47","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\layouts\\index.js":"48","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\FormBuilder.js\\BuildForm.js":"49","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\views\\FormBuilder\\FormBuild.js":"50","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\layouts\\layout-components\\menu\\index.js":"51","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\layouts\\layout-components\\menu\\RightMenu.js":"52","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\layouts\\layout-components\\menu\\LeftMenu.js":"53","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\constants\\app.constants.js":"54"},{"size":273,"mtime":1614868058833,"results":"55","hashOfConfig":"56"},{"size":1687,"mtime":1614868058804,"results":"57","hashOfConfig":"56"},{"size":383,"mtime":1609084174154,"results":"58","hashOfConfig":"56"},{"size":1498,"mtime":1615377736833,"results":"59","hashOfConfig":"56"},{"size":1086,"mtime":1615377736835,"results":"60","hashOfConfig":"56"},{"size":2611,"mtime":1615153586986,"results":"61","hashOfConfig":"56"},{"size":1229,"mtime":1614868058846,"results":"62","hashOfConfig":"56"},{"size":3827,"mtime":1615377736827,"results":"63","hashOfConfig":"56"},{"size":21061,"mtime":1615377736798,"results":"64","hashOfConfig":"56"},{"size":217,"mtime":1611742497100,"results":"65","hashOfConfig":"56"},{"size":1288,"mtime":1615377736809,"results":"66","hashOfConfig":"56"},{"size":1069,"mtime":1611050965528,"results":"67","hashOfConfig":"56"},{"size":1827,"mtime":1615376554595,"results":"68","hashOfConfig":"56"},{"size":666,"mtime":1610984811181,"results":"69","hashOfConfig":"56"},{"size":2380,"mtime":1614868058812,"results":"70","hashOfConfig":"56"},{"size":3568,"mtime":1614868058815,"results":"71","hashOfConfig":"56"},{"size":1812,"mtime":1615153586984,"results":"72","hashOfConfig":"56"},{"size":2023,"mtime":1614868058834,"results":"73","hashOfConfig":"56"},{"size":268,"mtime":1607946611589,"results":"74","hashOfConfig":"56"},{"size":4569,"mtime":1614868058825,"results":"75","hashOfConfig":"56"},{"size":1294,"mtime":1614873748538,"results":"76","hashOfConfig":"56"},{"size":6458,"mtime":1615377736795,"results":"77","hashOfConfig":"56"},{"size":3099,"mtime":1615377736801,"results":"78","hashOfConfig":"56"},{"size":9036,"mtime":1615377736799,"results":"79","hashOfConfig":"56"},{"size":4758,"mtime":1615377736805,"results":"80","hashOfConfig":"56"},{"size":6743,"mtime":1615377736806,"results":"81","hashOfConfig":"56"},{"size":3270,"mtime":1614868058840,"results":"82","hashOfConfig":"56"},{"size":385,"mtime":1611697962430,"results":"83","hashOfConfig":"84"},{"size":451,"mtime":1609072060248,"results":"85","hashOfConfig":"56"},{"size":61,"mtime":1608821464212,"results":"86","hashOfConfig":"56"},{"size":778,"mtime":1614868058832,"results":"87","hashOfConfig":"56"},{"size":508,"mtime":1615377736828,"results":"88","hashOfConfig":"56"},{"size":474,"mtime":1608821464203,"results":"89","hashOfConfig":"56"},{"size":280,"mtime":1615377736808,"results":"90","hashOfConfig":"56"},{"size":238,"mtime":1611748349003,"results":"91","hashOfConfig":"56"},{"size":7312,"mtime":1615153586967,"results":"92","hashOfConfig":"56"},{"size":216,"mtime":1610635780796,"results":"93","hashOfConfig":"56"},{"size":10086,"mtime":1615153586962,"results":"94","hashOfConfig":"56"},{"size":1075,"mtime":1614868058845,"results":"95","hashOfConfig":"56"},{"size":222,"mtime":1610964240623,"results":"96","hashOfConfig":"56"},{"size":1608,"mtime":1614868058818,"results":"97","hashOfConfig":"56"},{"size":1564,"mtime":1615376554627,"results":"98","hashOfConfig":"56"},{"size":335,"mtime":1611741840013,"results":"99","hashOfConfig":"56"},{"size":1932,"mtime":1615376554581,"results":"100","hashOfConfig":"56"},{"size":251,"mtime":1611742088621,"results":"101","hashOfConfig":"56"},{"size":375,"mtime":1611741911928,"results":"102","hashOfConfig":"56"},{"size":605,"mtime":1611742784883,"results":"103","hashOfConfig":"56"},{"size":0,"mtime":1607260709312,"results":"104","hashOfConfig":"56"},{"size":12864,"mtime":1614868058816,"results":"105","hashOfConfig":"56"},{"size":1136,"mtime":1614868058843,"results":"106","hashOfConfig":"56"},{"size":1202,"mtime":1614868058837,"results":"107","hashOfConfig":"56"},{"size":1343,"mtime":1615376554613,"results":"108","hashOfConfig":"56"},{"size":348,"mtime":1614868058835,"results":"109","hashOfConfig":"56"},{"size":167,"mtime":1615377736829,"results":"110","hashOfConfig":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},"1q5ctx7",{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"113"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"113"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"113"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"113"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"113"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"113"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"113"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"113"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"113"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"113"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"113"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"113"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"113"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"113"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"113"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"113"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xxpeaz",{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"113"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"113"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"113"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"113"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"113"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"113"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"113"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"113"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"113"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"113"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"113"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"113"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"113"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"113"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"113"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\index.js",[],["251","252"],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\App.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\store.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\views\\ProjectOverview\\Overview.js",["253","254"],"import React, { Component, Fragment } from \"react\";\r\nimport { Layout, Row, Col } from \"antd\";\r\n\r\nimport Navbar from \"../../../src/layouts/layout-components/menu\";\r\nimport SideBar from \"../../../src/layouts/layout-components/sidebar\";\r\nimport FooterTab from \"../../../src/layouts/layout-components/footer\";\r\nimport IndicatorsCard from \"../../components/IndicatorsCard\";\r\nimport Indicators from \"../../components/PerformanceIndicators\";\r\nimport axios from \"axios\";\r\nimport { appConstants } from \"../../constants/app.constants\";\r\nimport { connect } from \"react-redux\";\r\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\r\nconst { Content } = Layout;\r\n\r\nexport class Overview extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      projectDetails:{},\r\n      projectName:\"\",\r\n      loading:true\r\n    }\r\n  }\r\n\r\n  componentDidMount =() =>{\r\n    if(this.props.location && this.props.location.state && this.props.location.state.detail){\r\n      const {detail,name} = this.props.location.state\r\n      this.setState({projectName:name})\r\n    axios({\r\n      method: \"GET\",\r\n      url:  `http://trail-api.test.vggdev.com/${appConstants.PROGRAMS}/${detail}`,\r\n       headers: { accessToken: this.props.auth.data.accessToken},\r\n    })\r\n    .then(({data})=>{\r\n      this.setState({projectDetails:data.data},()=>{\r\n        this.setState({loading:false})\r\n      })\r\n    })\r\n  }else{\r\n    this.props.history.push(\"/dashboard/projects\")\r\n  }\r\n  }\r\n  render() {\r\n\r\n    const {projectDetails,projectName,loading} = this.state\r\n    return (\r\n      <div>\r\n        <Fragment>\r\n          <Layout style={{ minHeight: \"100vh\" }}>\r\n            <SideBar />\r\n            <Layout className=\"site-layout\">\r\n              <Navbar />\r\n              <Content style={{ margin: \"0 16px\" }}>\r\n                <h1 style={h1}>{projectName}</h1>\r\n                <div>\r\n                  <IndicatorsCard \r\n                  sdgCount={projectDetails.sdgs && projectDetails.sdgs.length}\r\n                  indicatorCount={appHelpers.countProjectIndicators(projectDetails.sdgs && projectDetails.sdgs)}\r\n                  loading={loading}\r\n                  />\r\n                </div>\r\n                <div\r\n                  className=\"site-layout-background\"\r\n                  style={{ padding: 24, minHeight: 360 }}\r\n                >\r\n                  <div>\r\n                    <Indicators />\r\n                  </div>\r\n                </div>\r\n              </Content>\r\n              <FooterTab />\r\n            </Layout>\r\n          </Layout>\r\n        </Fragment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Overview)\r\n\r\nconst h1 = {\r\n  fontWeight: \"700\",\r\n  fontSize: \"23px\",\r\n  padding: \"16px\",\r\n  paddingLeft: \"0px\",\r\n  marginTop: \"80px\",\r\n};\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\views\\Projects\\Projects.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\views\\Dashboard\\Dashboard.js",["255","256","257"],"import React, { Component, Fragment } from \"react\";\r\nimport { Layout, Row, Col } from \"antd\";\r\nimport Navbar from \"../../../src/layouts/layout-components/menu\";\r\nimport SideBar from \"../../../src/layouts/layout-components/sidebar\";\r\nimport FooterTab from \"../../../src/layouts/layout-components/footer\";\r\nimport ActionCard from \"../../../src/components/ActionCard\";\r\nimport ImpactMap from \"../../../src/components/ImpactMap\";\r\nimport FundingGraph from \"../../../src/components/FundingGraph\";\r\nimport DoughnutChart from \"../../../src/components/DoughnutChart\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getPrograms } from \"../../actions/projectAction\";\r\nimport { loadUser } from \"../../actions/authAuctions\";\r\nimport axios from \"axios\";\r\n\r\nconst { Content } = Layout;\r\n\r\nexport class Dashboard extends Component {\r\n  // data = this.props\r\n  componentDidMount() {\r\n    getPrograms(this.props.auth.data.accessToken);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        accessToken: this.props.auth.data.accessToken,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\"http://trail-api.test.vggdev.com/sdgs/all/indicators\", config)\r\n      .then((res) => {\r\n        const api = res.data.data;\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fragment>\r\n          <Layout\r\n            style={{\r\n              minHeight: \"100vh\",\r\n            }}\r\n          >\r\n            <SideBar />\r\n            <Layout className=\"site-layout\">\r\n              <Navbar />\r\n              <Content style={{ margin: \"0 16px\" }}>\r\n                <h1 style={h1}>Dashboard</h1>\r\n                <ActionCard />\r\n                <div>\r\n                  <Row>\r\n                    <Col xs={{ span: 24 }} lg={{ span: 14 }}>\r\n                      <ImpactMap />\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} lg={{ span: 10 }}>\r\n                      <DoughnutChart />\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n              <FooterTab />\r\n            </Layout>\r\n          </Layout>\r\n        </Fragment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  loadUser: PropTypes.func.isRequired,\r\n  getPrograms: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadUser, getPrograms })(Dashboard);\r\n\r\nconst h1 = {\r\n  fontWeight: \"700\",\r\n  fontSize: \"23px\",\r\n  padding: \"16px\",\r\n  paddingLeft: \"0px\",\r\n  marginTop: \"80px\",\r\n};\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\views\\Impact\\Manager.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\ProjectsCard\\index.js",["258","259","260","261","262","263"],"import React, { Component } from \"react\";\r\nimport \"./index.css\";\r\nimport { Layout, Row, Col, Card, Button, Skeleton } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nconst { Meta } = Card;\r\n\r\nexport class ProjectsCard extends Component {\r\n  renderProjects = () => {\r\n    const { projects } = this.props.project;\r\n    let string = \"\";\r\n    projects.map((project, string) => {\r\n      <>\r\n        {project.image.fileList.map((image) => {\r\n          <>{image.thumbUrl}</>;\r\n        })}\r\n      </>;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      <div>\r\n        {projects.length == 0 ? (\r\n          <div>\r\n            <h3>\r\n              When you add new projects, It would appear here!,{\" \"}\r\n              <Link to=\"/dashboard/manager\">Click to add</Link>{\" \"}\r\n            </h3>\r\n          </div>\r\n        ) : (\r\n          <Row>\r\n            {projects.map((project) => (\r\n              <div>\r\n                <Col xs={{ span: 24 }} lg={{ span: 8 }}>\r\n                  <Card\r\n                    className={\"projectCard\"}\r\n                    cover={\r\n                      <img\r\n                        alt={project.name}\r\n                        // src={project.image.fileList.map((image) => {\r\n                        //   <>{image.thumbUrl}</>;\r\n                        // })}\r\n                        src={project.image}\r\n                        style={{ height: \"200px\" }}\r\n                      />\r\n                    }\r\n                    actions={[\r\n                      <Link to={\"/dashboard/projects/overview\"}>\r\n                        <Button\r\n                          shape=\"round\"\r\n                          type=\"primary\"\r\n                          className={\"projectButton\"}\r\n                        >\r\n                          Overview\r\n                        </Button>\r\n                      </Link>,\r\n                    ]}\r\n                  >\r\n                    <Meta\r\n                      title={project.name}\r\n                      description={project.description}\r\n                    />\r\n                    <div>\r\n                      <Row style={{ marginTop: \"10px\" }}>\r\n                        <Col span={8}>\r\n                          <span className={\"projectSpan\"}>Location</span>\r\n                          <p className={\"projectParagraph\"}>\r\n                            {project.location.description}\r\n                          </p>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                          <span className={\"projectSpan\"}>Project Code</span>\r\n                          <p className={\"projectParagraph\"}>{project.code}</p>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                          <span className={\"projectSpan\"}>Impact</span>\r\n                          <p className={\"projectParagraph\"}>\r\n                            <div className=\"gameStatistics\">\r\n                              {Object.entries(project.sdgCheckBoxes).map(\r\n                                ([key, val]) => (\r\n                                  <p className={\"projectParagraph\"} key={key}>\r\n                                    {\" \"}\r\n                                    SDG {key}\r\n                                  </p>\r\n                                )\r\n                              )}\r\n                            </div>\r\n                          </p>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  </Card>\r\n                </Col>\r\n              </div>\r\n            ))}\r\n          </Row>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.projects,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ProjectsCard);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\ImpactManager\\ImpactManager.jsx",["264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282"],"import React from \"react\";\r\nimport Aux from \"../hocs/_Aux\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withStore } from \"@spyna/react-store\";\r\nimport { Row, Col, Card, Form, Divider } from \"antd\";\r\nimport ImpactManagerForm1 from \"./ImpactManagerForm1\";\r\nimport ImpactManagerForm2 from \"./ImpactManagerForm2\";\r\nimport ImpactManagerForm3 from \"./ImpactManagerForm3\";\r\nimport ImpactManagerSummary from \"./ImpactManagerSummary\";\r\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\r\n//import { sdgDump } from \"./sdgDump\";\r\nimport \"./index.css\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectAction\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\nimport axios from \"axios\";\r\nimport { Map, Marker, GoogleApiWrapper } from \"google-maps-react\";\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  padding: \"20px\",\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: \"#eeeeee\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#fafafa\",\r\n  color: \"#bdbdbd\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: \"#2196f3\",\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\",\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\",\r\n};\r\n\r\nconst thumbsContainer = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  flexWrap: \"wrap\",\r\n  marginTop: 16,\r\n};\r\n\r\nconst thumb = {\r\n  display: \"inline-flex\",\r\n  borderRadius: 2,\r\n  border: \"1px solid #eaeaea\",\r\n  marginBottom: 8,\r\n  marginRight: 8,\r\n  width: \"auto\",\r\n  height: 200,\r\n  padding: 4,\r\n  boxSizing: \"border-box\",\r\n};\r\n\r\nconst thumbInner = {\r\n  display: \"flex\",\r\n  minWidth: 0,\r\n  overflow: \"hidden\",\r\n};\r\n\r\nconst img = {\r\n  display: \"block\",\r\n  width: \"auto\",\r\n  height: \"100%\",\r\n};\r\n\r\nconst { Meta } = Card;\r\n\r\n// const locationsEnum = [\r\n//   { label: \"Nigeria\", value: \"ng\" },\r\n//   { label: \"Ghana\", value: \"gh\" },\r\n// ];\r\n\r\nconst CardTitleForm1 = (\r\n  <h1 style={{ fontSize: \"20px\", fontWeight: \"normal\", margin: 0 }}>\r\n    Create your custom impact\r\n  </h1>\r\n);\r\n\r\nconst CardTitleForm3 = (\r\n  <h1 style={{ fontSize: \"20px\", fontWeight: \"normal\", margin: 0 }}>\r\n    Select Indicators\r\n  </h1>\r\n);\r\n\r\nconst CardTitleForm2 = (\r\n  <h1 style={{ fontSize: \"25px\", fontWeight: \"normal\", margin: 0 }}>\r\n    Select the Sustainable Development Goals for this programme\r\n  </h1>\r\n);\r\n\r\nclass ImpactManager extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createBtn: (\r\n        <span>\r\n          Create Project <i className=\"fa fa-angle-right\" />{\" \"}\r\n        </span>\r\n      ),\r\n      sdgDump: \"\",\r\n      name: \"\",\r\n      code: \"\",\r\n      programmeLocation: \"\",\r\n      description: \"\",\r\n      programmePlaces: \"\",\r\n      image: {},\r\n      impactManagerFormOne: true,\r\n      impactManagerFormTwo: false,\r\n      impactManagerFormThree: false,\r\n      impactManagerSummary: false,\r\n      sdgCheckBoxes: {},\r\n      sdgChecks: [],\r\n      indicatorCheckBoxes: {},\r\n      theIndicators: [],\r\n      alert: null,\r\n      allIndicators: null,\r\n      mySdg: [],\r\n      indicators: [\r\n        {\r\n          id: 1,\r\n          description: \"No Poverty\",\r\n        },\r\n        {\r\n          id: 2,\r\n          description: \"No Hunger\",\r\n        },\r\n      ],\r\n      formOneErrors: {\r\n        name: false,\r\n        description: false,\r\n        // projectLocation: false,\r\n        programmeLocation: false,\r\n        code: false,\r\n        programmePlaces: \"\",\r\n        image: false,\r\n      },\r\n      formTwoErrors: {\r\n        sdg: false,\r\n      },\r\n      formThreeErrors: {\r\n        indicator: false,\r\n      },\r\n      // for google map places autocomplete\r\n      address: \"\",\r\n      showingInfoWindow: false,\r\n      location: {},\r\n      selectedPlace: {},\r\n      mapCenter: {\r\n        lat: 49.2827291,\r\n        lng: -123.1207375,\r\n      },\r\n    };\r\n    this.createProject = this.createProject.bind(this);\r\n    this.cancelProject = this.cancelProject.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        accessToken: this.props.auth.data.accessToken,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\"http://trail-api.test.vggdev.com/sdgs/all/indicators\", config)\r\n      .then((res) => {\r\n        const sdgDump = res.data.data;\r\n        this.setState({ sdgDump });\r\n      });\r\n  }\r\n\r\n  handleChangePlace = (address) => {\r\n    this.setState({ address });\r\n  };\r\n\r\n  handleSelectPlace = (address, selectedPlace, location) => {\r\n    this.setState({ address, selectedPlace, location });\r\n    geocodeByAddress(address)\r\n      .then((results) => getLatLng(results[0]))\r\n      .then((latLng) => {\r\n        console.log(\"Success\", latLng);\r\n        // update center state\r\n        this.setState({ mapCenter: latLng });\r\n      })\r\n      .catch((error) => console.error(\"Error\", error));\r\n  };\r\n\r\n  normFile = (e) => {\r\n    this.setState({ image: e.fileList[0].thumbUrl });\r\n    if (Array.isArray(e)) {\r\n      return e.fileList[0].thumbUrl;\r\n    }\r\n    return e.fileList[0].thumbUrl;\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSelectChange = (input) => ({ target: { value } }) => {\r\n    this.setState({ [input]: value });\r\n  };\r\n\r\n  openImageManagerFormTwo = () => {\r\n    if (appHelpers.validateImpactFormOne(this)) {\r\n      this.setState({\r\n        impactManagerFormOne: false,\r\n        impactManagerFormTwo: true,\r\n      });\r\n      const impactManager = {\r\n        name: this.state.name,\r\n        code: this.state.code,\r\n        description: this.state.description,\r\n        // projectLocation: this.state.projectLocation,\r\n        programmeLocation: this.state.programmeLocation,\r\n        image: this.state.image,\r\n        programmePlaces: this.state.programmePlaces,\r\n        sdgs: [],\r\n        indicators: [],\r\n      };\r\n    } else {\r\n      console.log(\"some fields are missing\");\r\n    }\r\n  };\r\n\r\n  openImageManagerFormThree = (sdgCheckBoxes, sdgNum) => {\r\n    if (sdgCheckBoxes[sdgNum] !== true) {\r\n      this.setState({\r\n        impactManagerFormOne: false,\r\n        impactManagerFormTwo: true,\r\n        impactManagerFormThree: false,\r\n      });\r\n    }\r\n    if (appHelpers.validateImpactFormTwo(this)) {\r\n      this.setState({\r\n        impactManagerFormOne: false,\r\n        impactManagerFormTwo: false,\r\n        impactManagerFormThree: true,\r\n      });\r\n    } else {\r\n      appHelpers.failedRequestAlert(\"Select at least One SDG\");\r\n    }\r\n  };\r\n\r\n  openImpactManagerSummary = () => {\r\n    if (appHelpers.validateImpactFormThree(this)) {\r\n      this.setState({\r\n        impactManagerFormTwo: false,\r\n        impactManagerFormThree: false,\r\n        impactManagerSummary: true,\r\n      });\r\n    } else {\r\n      appHelpers.failedRequestAlert(\"Please Select at least One Indicator\");\r\n      this.setState({\r\n        impactManagerFormTwo: false,\r\n        impactManagerFormThree: false,\r\n        impactManagerSummary: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  createProject() {\r\n    const indicatorStrings = [];\r\n    const {\r\n      name,\r\n      description,\r\n      code,\r\n      mySdg,\r\n      sdgCheckBoxes,\r\n      indicatorCheckBoxes,\r\n      image,\r\n      location,\r\n      mapCenter,\r\n    } = this.state;\r\n    const payload = {\r\n      name,\r\n      description,\r\n      code,\r\n      image,\r\n      location,\r\n      mapCenter,\r\n      sdgCheckBoxes,\r\n      mySdg,\r\n      indicatorCheckBoxes,\r\n    };\r\n    this.props.createProject(payload);\r\n    appHelpers.successMessageAlert(\"Programme Successfully Created\");\r\n    console.log(payload);\r\n    // window.location.reload();\r\n  }\r\n\r\n  cancelProject() {\r\n    appHelpers.canceledRequestAlert(\"Project Cancelled!\");\r\n    window.location.reload();\r\n  }\r\n\r\n  goBack = () => {\r\n    this.setState({ impactManagerFormOne: true, impactManagerFormTwo: false });\r\n  };\r\n\r\n  goBackTwo = () => {\r\n    this.setState({\r\n      impactManagerFormTwo: true,\r\n      impactManagerFormThree: false,\r\n    });\r\n  };\r\n\r\n  handleCheckboxChange = (\r\n    indicatorValue,\r\n    e,\r\n    indicatorIndex,\r\n    sdgIndex,\r\n    indicatorID\r\n  ) => {\r\n    const { allIndicators, sdgChecks } = this.state;\r\n    const newIndicators = allIndicators.map((indicator, id) => {\r\n      if (indicatorIndex !== id) return indicator;\r\n      return {\r\n        ...indicator,\r\n        status: e.target.checked,\r\n      };\r\n    });\r\n\r\n    const newSdgChecks = sdgChecks.map((q, i) =>\r\n      q.id === sdgIndex\r\n        ? {\r\n            ...q,\r\n            indicators: q.indicators.map((o, i) =>\r\n              i === indicatorIndex\r\n                ? {\r\n                    ...o,\r\n                    status: e.target.checked,\r\n                  }\r\n                : o\r\n            ),\r\n          }\r\n        : q\r\n    );\r\n    this.setState({\r\n      indicatorCheckBoxes: {\r\n        ...this.state.indicatorCheckBoxes,\r\n        [indicatorID]: indicatorValue,\r\n      },\r\n      allIndicators: newIndicators,\r\n      sdgChecks: newSdgChecks,\r\n    });\r\n  };\r\n\r\n  updateSvgState = (sdg) => {\r\n    const { sdgChecks, sdgDump } = this.state;\r\n\r\n    let filtered = sdgDump.filter((item) => {\r\n      return parseInt(item.id) === parseInt(sdg);\r\n    });\r\n    const obj = Object.assign({}, ...filtered);\r\n    const svgExist = appHelpers.containsObject(obj, sdgChecks);\r\n    if (svgExist === true) {\r\n      this.setState({\r\n        sdgCheckBoxes: {\r\n          ...this.state.sdgCheckBoxes,\r\n          [sdg]: !this.state.sdgCheckBoxes[sdg],\r\n        },\r\n      });\r\n      this.setState((prevState) => ({\r\n        sdgChecks: prevState.sdgChecks.filter((SDG) => SDG.id !== obj.id),\r\n      }));\r\n    } else {\r\n      this.setState(\r\n        {\r\n          sdgCheckBoxes: {\r\n            ...this.state.sdgCheckBoxes,\r\n            [sdg]: !this.state.sdgCheckBoxes[sdg],\r\n          },\r\n          sdgChecks: [...this.state.sdgChecks, Object.assign({}, ...filtered)],\r\n        },\r\n        () => {\r\n          //\r\n          this.setState({\r\n            allIndicators: appHelpers.returnIndicators(\r\n              this.state.sdgCheckBoxes,\r\n              sdgDump\r\n            ),\r\n          });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  handleSdgBoxChange = (sdgNum, event) => {\r\n    this.updateSvgState(sdgNum);\r\n  };\r\n\r\n  editProjectProfile = () => {\r\n    this.setState({\r\n      impactManagerSummary: false,\r\n      impactManagerFormOne: true,\r\n      impactManagerFormTwo: false,\r\n      impactManagerFormThree: false,\r\n    });\r\n  };\r\n  editSdgGoals = () => {\r\n    this.setState({\r\n      impactManagerSummary: false,\r\n      impactManagerFormOne: false,\r\n      impactManagerFormTwo: true,\r\n      impactManagerFormThree: false,\r\n    });\r\n  };\r\n  editProjectIndicators = () => {\r\n    this.setState({\r\n      impactManagerSummary: false,\r\n      impactManagerFormOne: false,\r\n      impactManagerFormTwo: false,\r\n      impactManagerFormThree: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    //this.props.project.projects\r\n    const { projects } = this.props.project;\r\n    const {\r\n      description,\r\n      code,\r\n      name,\r\n      //projectLocation,\r\n      programmeLocation,\r\n      programmePlaces,\r\n      image,\r\n      impactManagerFormOne,\r\n      impactManagerFormTwo,\r\n      impactManagerFormThree,\r\n      impactManagerSummary,\r\n      sdgCheckBoxes,\r\n      indicators,\r\n      indicatorCheckBoxes,\r\n      allIndicators,\r\n      formOneErrors,\r\n      formTwoErrors,\r\n      sdgDump,\r\n      sdgChecks,\r\n      createBtn,\r\n    } = this.state;\r\n    return (\r\n      <Aux>\r\n        <div>\r\n          <div\r\n            className=\"site-layout-background\"\r\n            style={{ padding: 24, minHeight: 360 }}\r\n          >\r\n            {\" \"}\r\n            <div>\r\n              {/* Page One */}\r\n              {impactManagerFormOne && (\r\n                <Card>\r\n                  <Meta\r\n                    title={CardTitleForm1}\r\n                    description=\"Design your own impact profile based on your programme priorities and needs\"\r\n                  />\r\n                  <Divider />\r\n                  <ImpactManagerForm1\r\n                    description={description}\r\n                    name={name}\r\n                    code={code}\r\n                    image={image}\r\n                    programmePlaces={programmePlaces}\r\n                    programmeLocation={programmeLocation}\r\n                    // projectLocation={projectLocation}\r\n                    handleInputChange={this.handleInputChange}\r\n                    handleSelectChange={this.handleSelectChange}\r\n                    handleBannerChange={this.handleBannerChange}\r\n                    normFile={this.normFile}\r\n                    formOneErrors={formOneErrors}\r\n                    // locationsEnum={locationsEnum}\r\n                    address={this.state.address}\r\n                    handleChangePlace={this.handleChangePlace}\r\n                    handleSelectPlace={this.handleSelectPlace}\r\n                  />\r\n                  <br />\r\n                  <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    onClick={this.openImageManagerFormTwo}\r\n                    style={{\r\n                      backgroundColor: \"#53D1BE\",\r\n                      color: \"white\",\r\n                      borderRadius: \"2rem\",\r\n                      textTransform: \"none\",\r\n                      boxShadow: \"none\",\r\n                      float: \"right\",\r\n                    }}\r\n                  >\r\n                    Save & Continue\r\n                  </Button>\r\n                </Card>\r\n              )}\r\n              {/* Page Two */}\r\n              {impactManagerFormTwo && (\r\n                <Card title={CardTitleForm2}>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#53d1be1a\",\r\n                      paddingLeft: \".5rem\",\r\n                      paddingBottom: \".5rem\",\r\n                      paddingTop: \".5rem\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        fontSize: \"small\",\r\n                        marginBottom: \"0rem\",\r\n                      }}\r\n                    >\r\n                      First, select the Sustainable Development Goals (SDGs).\r\n                    </p>\r\n                    <p\r\n                      style={{\r\n                        fontSize: \"small\",\r\n                        marginBottom: \"0rem\",\r\n                      }}\r\n                    >\r\n                      Next, further specify preferred Indicators that best match\r\n                      your project goals.\r\n                    </p>\r\n                    <p\r\n                      style={{\r\n                        fontSize: \"small\",\r\n                        marginBottom: \"0rem\",\r\n                      }}\r\n                    >\r\n                      Now your priorities are complete. Click Save & View\r\n                      Questions.\r\n                    </p>\r\n                  </div>\r\n                  <ImpactManagerForm2\r\n                    handleInputChange={this.handleInputChange}\r\n                    handleSdgBoxChange={this.handleSdgBoxChange}\r\n                    sdgCheckBoxes={sdgCheckBoxes}\r\n                    formTwoErrors={formTwoErrors}\r\n                    sdgDump={sdgDump}\r\n                    {...this.props}\r\n                  />\r\n\r\n                  <br />\r\n\r\n                  <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    onClick={this.goBack}\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      color: \"#53D1BE\",\r\n                      borderRadius: \"2rem\",\r\n                      textTransform: \"none\",\r\n                      boxShadow: \"none\",\r\n                      borderColor: \"#53D1BE\",\r\n                    }}\r\n                  >\r\n                    <ArrowLeftOutlined />\r\n                    {\"  \"}Back\r\n                  </Button>\r\n                  <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.openImageManagerFormThree}\r\n                    style={{\r\n                      backgroundColor: \"#53D1BE\",\r\n                      color: \"white\",\r\n                      borderRadius: \"2rem\",\r\n                      textTransform: \"none\",\r\n                      boxShadow: \"none\",\r\n                      float: \"right\",\r\n                    }}\r\n                  >\r\n                    Save & Continue\r\n                  </Button>\r\n                </Card>\r\n              )}\r\n              {impactManagerFormThree && (\r\n                <Card title={CardTitleForm3}>\r\n                  <ImpactManagerForm3\r\n                    handleCheckboxChange={this.handleCheckboxChange}\r\n                    sdgCheckBoxes={sdgCheckBoxes}\r\n                    indicators={indicators}\r\n                    indicatorCheckBoxes={indicatorCheckBoxes}\r\n                    allIndicators={allIndicators}\r\n                    sdgDump={sdgDump}\r\n                    sdgChecks={sdgChecks}\r\n                  />\r\n\r\n                  <br />\r\n\r\n                  <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    onClick={this.goBackTwo}\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      color: \"#53D1BE\",\r\n                      borderRadius: \"2rem\",\r\n                      textTransform: \"none\",\r\n                      boxShadow: \"none\",\r\n                      borderColor: \"#53D1BE\",\r\n                    }}\r\n                  >\r\n                    <ArrowLeftOutlined />\r\n                    {\"  \"}Back\r\n                  </Button>\r\n                  <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.openImpactManagerSummary}\r\n                    style={{\r\n                      backgroundColor: \"#53D1BE\",\r\n                      color: \"white\",\r\n                      borderRadius: \"2rem\",\r\n                      textTransform: \"none\",\r\n                      boxShadow: \"none\",\r\n                      float: \"right\",\r\n                    }}\r\n                  >\r\n                    Save & View Answers\r\n                  </Button>\r\n\r\n                  {this.state.alert}\r\n                </Card>\r\n              )}\r\n\r\n              {impactManagerSummary && (\r\n                <div>\r\n                  <ImpactManagerSummary\r\n                    {...this.state}\r\n                    {...this.props}\r\n                    editProjectProfileCallback={this.editProjectProfile}\r\n                    editSdgGoalsCallback={this.editSdgGoals}\r\n                    indicatorCheckBoxes={indicatorCheckBoxes}\r\n                    editProjectIndicatorsCallback={this.editProjectIndicators}\r\n                  />\r\n\r\n                  <br />\r\n\r\n                  <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={this.cancelProject}\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      color: \"red\",\r\n                      borderRadius: \"2rem\",\r\n                      textTransform: \"none\",\r\n                      boxShadow: \"none\",\r\n                      borderColor: \"#53D1BE\",\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  {this.state.alert}\r\n\r\n                  <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.createProject}\r\n                    style={{\r\n                      backgroundColor: \"#53D1BE\",\r\n                      color: \"white\",\r\n                      borderRadius: \"2rem\",\r\n                      textTransform: \"none\",\r\n                      boxShadow: \"none\",\r\n                      float: \"right\",\r\n                    }}\r\n                  >\r\n                    {createBtn}\r\n                  </Button>\r\n                  {this.state.alert}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\n//this.props.project.projects\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.projects,\r\n  auth: state.auth,\r\n});\r\n\r\nconst WrappedContainer = GoogleApiWrapper({\r\n  apiKey: \"AIzaSyB5vf0DbG-X2_Qdya9IPHl1ZbhPdn276gQ\",\r\n})(ImpactManager);\r\n\r\nexport default connect(mapStateToProps, { createProject })(WrappedContainer);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\reducers\\index.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\IndicatorsCard\\index.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\PerformanceIndicators\\index.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\ImpactMap\\index.js",["283","284","285"],"import React, { Component } from \"react\";\r\nimport { Card, Skeleton } from \"antd\";\r\nimport \"./index.css\";\r\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class ImpactMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  displayMarkers = () => {\r\n    return this.props.project.projects.map((project) => {\r\n      return (\r\n        <Marker\r\n          key={project.mapCenter.lng}\r\n          id={project.mapCenter.lng}\r\n          position={{\r\n            lat: project.mapCenter.lat,\r\n            lng: project.mapCenter.lng,\r\n          }}\r\n          onClick={() => console.log(`You clicked me! ${project}`)}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    {\r\n      console.log(this.props.google);\r\n    }\r\n    return (\r\n      <div className=\"impactT\">\r\n        <h4>Impact Map</h4>\r\n        {this.props.google == undefined ? (\r\n          <Card>\r\n            <Skeleton active />\r\n            <br/>\r\n          </Card>\r\n        ) : (\r\n          <div className=\"map-container\">\r\n            <Map\r\n              google={this.props.google}\r\n              zoom={8}\r\n              style={mapStyles}\r\n              initialCenter={{\r\n                lat: this.props.project.projects[0].mapCenter.lat,\r\n                lng: this.props.project.projects[0].mapCenter.lng,\r\n              }}\r\n            >\r\n              {this.displayMarkers()}\r\n            </Map>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStyles = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.projects,\r\n});\r\n\r\nconst WrappedContainer = GoogleApiWrapper({\r\n  apiKey: \"AIzaSyB5vf0DbG-X2_Qdya9IPHl1ZbhPdn276gQ\",\r\n})(ImpactMap);\r\n\r\nexport default connect(mapStateToProps, {})(WrappedContainer);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\FundingGraph\\index.js",["286","287","288"],"import React, { Component } from \"react\";\r\nimport { Card, Skeleton } from \"antd\";\r\nimport \"./index.css\";\r\nimport { Bar, Line } from \"react-chartjs-2\";\r\nimport { data } from \"./data\";\r\n\r\nexport class FundingGraph extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"fundingTab\">\r\n        <Card title={\"Funding Status\"} >\r\n          <Skeleton active /> \r\n          {/* <Line\r\n            data={data}\r\n            options={{\r\n              legend: {\r\n                display: true,\r\n                position: \"bottom\",\r\n              },\r\n            }}\r\n          /> */}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FundingGraph;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\ActionCard\\index.js",["289","290","291","292","293","294"],"import React, { Component } from \"react\";\r\nimport { Row, Col, Card, Result } from \"antd\";\r\nimport \"./index.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class ActionCard extends Component {\r\n  renderObjects = () => {\r\n    const { projects, indicator } = this.props.project;\r\n    const dataArray = [];\r\n    let value = 0;\r\n    const json = projects.map((project) => (\r\n      <>\r\n        {\" \"}\r\n        {Object.entries(project.indicatorCheckBoxes, value).map(\r\n          ([key, val]) => (\r\n            <p className={\"projectParagraph\"} key={key}>\r\n              {\" \"}\r\n              {val}\r\n              {value++}\r\n            </p>\r\n          )\r\n        )}\r\n      </>\r\n    ));\r\n    return value;\r\n  };\r\n\r\n  render() {\r\n    const { projects, awarded, disbursed } = this.props.project;\r\n\r\n    return (\r\n      <div>\r\n        <Col span={24}>\r\n          <Card className={\"actionCard\"}>\r\n            <Row>\r\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\r\n                <span className={\"actionItemStyle\"}>Programmes</span>\r\n                <p className={\"actionItemParagraph\"}>\r\n                  {projects.length == 0 ? \"0\" : projects.length}\r\n                </p>\r\n              </Col>\r\n\r\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\r\n                <span className={\"actionItemStyle\"}>Impact Targets (SDG)</span>\r\n                <p className={\"actionItemParagraph\"}>\r\n                  {\" \"}\r\n                  {this.renderObjects().length == 0\r\n                    ? \"0\"\r\n                    : this.renderObjects()}\r\n                </p>\r\n              </Col>\r\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\r\n                <span className={\"actionItemStyle\"}>Amount Awarded</span>\r\n                <p className={\"actionItemParagraph\"}>\r\n                  {awarded == null ? \"-\" : awarded}\r\n                </p>\r\n              </Col>\r\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\r\n                <span className={\"actionItemStyle\"}>Amount Disbursed</span>\r\n                <p className={\"actionItemParagraph\"}>\r\n                  {disbursed == null ? \"-\" : disbursed}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.projects,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ActionCard);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\DoughnutChart\\index.js",["295","296","297","298","299","300","301","302"],"import React, { Component } from \"react\";\r\nimport { Card, Skeleton } from \"antd\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport \"./index.css\";\r\nimport { connect } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nexport class DoughnutChart extends Component {\r\n  renderObjects = () => {\r\n    const { projects, indicator } = this.props.project;\r\n    const dataArray = [];\r\n    const json = projects.map((project) => (\r\n      <>\r\n        {\" \"}\r\n        {Object.entries(project.indicatorCheckBoxes, dataArray).map(\r\n          ([key, val]) => (\r\n            <p className={\"projectParagraph\"} key={key}>\r\n              {val}\r\n              {dataArray.push(val)}\r\n            </p>\r\n          )\r\n        )}\r\n      </>\r\n    ));\r\n    var arr = dataArray;\r\n    arr = _.uniq(arr);\r\n    return arr;\r\n  };\r\n\r\n  renderOccurence = () => {\r\n    const { projects, indicator } = this.props.project;\r\n    const dataArray = [];\r\n    let countObj = {};\r\n    const json = projects.map((project) => (\r\n      <>\r\n        {\" \"}\r\n        {Object.entries(project.indicatorCheckBoxes, dataArray).map(\r\n          ([key, val]) => (\r\n            <p className={\"projectParagraph\"} key={key}>\r\n              {val}\r\n              {dataArray.push(val)}\r\n            </p>\r\n          )\r\n        )}\r\n      </>\r\n    ));\r\n    const countOccurrences = (arr) =>\r\n      arr.reduce((prev, curr) => ((prev[curr] = ++prev[curr] || 1), prev), {});\r\n\r\n    const counts = countOccurrences(dataArray);\r\n\r\n    return Object.values(counts);\r\n  };\r\n\r\n  colorArray = [\r\n    \"#4DB380\",\r\n    \"#FF4D4D\",\r\n    \"#99E6E6\",\r\n    \"#6666FF\",\r\n    \"#FF6633\",\r\n    \"#FFB399\",\r\n    \"#FF33FF\",\r\n    \"#FFFF99\",\r\n    \"#00B3E6\",\r\n    \"#E6B333\",\r\n    \"#3366E6\",\r\n    \"#999966\",\r\n    \"#99FF99\",\r\n    \"#B34D4D\",\r\n    \"#80B300\",\r\n    \"#809900\",\r\n    \"#E6B3B3\",\r\n    \"#6680B3\",\r\n    \"#66991A\",\r\n    \"#FF99E6\",\r\n    \"#CCFF1A\",\r\n    \"#FF1A66\",\r\n    \"#E6331A\",\r\n    \"#33FFCC\",\r\n    \"#66994D\",\r\n    \"#B366CC\",\r\n    \"#4D8000\",\r\n    \"#B33300\",\r\n    \"#CC80CC\",\r\n    \"#66664D\",\r\n    \"#991AFF\",\r\n    \"#E666FF\",\r\n    \"#4DB3FF\",\r\n    \"#1AB399\",\r\n    \"#E666B3\",\r\n    \"#33991A\",\r\n    \"#CC9999\",\r\n    \"#B3B31A\",\r\n    \"#00E680\",\r\n    \"#4D8066\",\r\n    \"#809980\",\r\n    \"#E6FF80\",\r\n    \"#1AFF33\",\r\n    \"#999933\",\r\n    \"#FF3380\",\r\n    \"#CCCC00\",\r\n    \"#66E64D\",\r\n    \"#4D80CC\",\r\n    \"#9900B3\",\r\n    \"#E64D66\",\r\n    \"#4DB380\",\r\n    \"#FF4D4D\",\r\n    \"#99E6E6\",\r\n    \"#6666FF\",\r\n  ];\r\n  data = {\r\n    labels: this.renderObjects(),\r\n    datasets: [\r\n      {\r\n        label: \"SDGs\",\r\n        backgroundColor: this.colorArray,\r\n        hoverBackgroundColor: [\r\n          \"#A21942\",\r\n          \"#DDA63A\",\r\n          \"#E5243B\",\r\n          \"#C5192D\",\r\n          \"#33991A\",\r\n          \"#CC9999\",\r\n          \"#B3B31A\",\r\n          \"#00E680\",\r\n        ],\r\n        data: this.renderOccurence(),\r\n      },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    const { indicator } = this.props.project;\r\n    \r\n    return (\r\n      <div>\r\n        <Card title={\"Impact Summary\"} className={\"doughnutCard\"}>\r\n          {this.renderOccurence().length == 0 ? (\r\n            <Skeleton active />\r\n          ) : (\r\n            <Doughnut\r\n              data={this.data}\r\n              width={100}\r\n              height={100}\r\n              options={{\r\n                legend: {\r\n                  display: true,\r\n                  position: \"bottom\",\r\n                },\r\n              }}\r\n            />\r\n          )}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.projects,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(DoughnutChart);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\layouts\\layout-components\\sidebar\\index.js",["303","304"],"import React, { Component } from \"react\";\r\n\r\nimport {\r\n  DesktopOutlined,\r\n  PieChartOutlined,\r\n  FileOutlined,\r\n  HighlightOutlined,\r\n  ExportOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./index.css\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport class SideBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: false,\r\n    };\r\n  }\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed: collapsed });\r\n  };\r\n  render() {\r\n    return (\r\n      <Sider\r\n        collapsed={this.state.collapsed}\r\n        onCollapse={this.onCollapse}\r\n        collapsible\r\n        style={{\r\n          border: \"none\",\r\n          backgroundColor: \"#001529\",\r\n          position: \"fixed\",\r\n          zIndex: \"999\",\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        <div className=\"logos\"></div>\r\n        <Menu theme=\"dark\" mode=\"inline\" style={{ backgroundColor: \"#001529\" }}>\r\n          <Menu.Item to=\"/dashboard\" key=\"1\" icon={<PieChartOutlined />}>\r\n            <Link to=\"/dashboard\">Dashboard</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\r\n            <Link to=\"/dashboard/projects\">Programme Report</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\" icon={<HighlightOutlined />}>\r\n            <Link to=\"/dashboard/manager\">Programme Manager</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"4\" icon={<FileOutlined />}>\r\n            <Link to=\"/dashboard/form\"></Link> Forms Management\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\layouts\\layout-components\\header\\index.js",["305","306","307","308"],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\layouts\\layout-components\\footer\\index.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\ImpactManager\\sdgDump.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\actions\\projectAction.js",["309","310","311"],"import {\r\n  CREATE_PROJECT,\r\n  GET_PROJECT,\r\n  TEST_DISPATCH,\r\n  GET_INDICATORS,\r\n  PROJECT_ERROR,\r\n  GET_PROGRAMS,\r\n} from \"../constants/Types\";\r\nimport axios from \"axios\";\r\n\r\nexport const getPrograms = (token) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      accessToken: token,\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.get(\r\n      \"http://trail-api.test.vggdev.com/programs\",\r\n      config\r\n    );\r\n    dispatch({\r\n      type: GET_PROGRAMS,\r\n      payload: res.data,\r\n    });\r\n    console.log(\"Sameerah\", res.data);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROJECT_ERROR,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProject = () => {\r\n  return {\r\n    type: GET_PROJECT,\r\n  };\r\n};\r\n\r\nexport const createProject = (project) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    // const res = await axios.post(\r\n    //   \"/api/plans\",\r\n    //   project,\r\n    //   config\r\n    // );\r\n    dispatch({\r\n      type: CREATE_PROJECT,\r\n      payload: project,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROJECT_ERROR,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\appHelpers\\appHelpers.js",["312","313","314","315","316","317","318","319","320","321","322","323"],"import swal from \"sweetalert2\";\r\n\r\nexport const appHelpers = {\r\n  returnLabelsforDonut: (arr) => {\r\n    let label = [];\r\n    for (let i in arr) {\r\n      label.push(arr[i][0]);\r\n    }\r\n    return label;\r\n  },\r\n\r\n  toCapitalLetters: (value) => {\r\n    if (typeof value === \"string\") {\r\n      return value.toLocaleUpperCase();\r\n    }\r\n  },\r\n  formatLargeNumbers: (x) => {\r\n    if (isNaN(x)) return x;\r\n\r\n    if (x < 9999) {\r\n      return x;\r\n    }\r\n\r\n    if (x < 1000000) {\r\n      return Math.round(x / 1000) + \"K\";\r\n    }\r\n    if (x < 10000000) {\r\n      return (x / 1000000).toFixed(2) + \"M\";\r\n    }\r\n\r\n    if (x < 1000000000) {\r\n      return Math.round(x / 1000000) + \"M\";\r\n    }\r\n\r\n    if (x < 1000000000000) {\r\n      return Math.round(x / 1000000000) + \"B\";\r\n    }\r\n\r\n    return \"1T+\";\r\n  },\r\n\r\n  returnSelectedSdgs: (sdgCheckBoxes, sdgDump) => {\r\n    Object.entries(sdgCheckBoxes).forEach(([key, value]) => {\r\n      if (value === false) {\r\n        delete sdgCheckBoxes[key];\r\n      }\r\n    });\r\n    return Object.keys(sdgCheckBoxes).map((id) =>\r\n      sdgDump.find((sdg) => sdg.id === id)\r\n    );\r\n  },\r\n\r\n  addDots: (value) => {\r\n    let valueCopy = value.substring(0, 20);\r\n    if (value.length > 15) return (valueCopy += \"...\");\r\n    else return value;\r\n  },\r\n\r\n  returnIndicators: (sdgCheckBoxes, sdgDump) => {\r\n    const filtered = appHelpers.returnSelectedSdgs(sdgCheckBoxes, sdgDump);\r\n    const returnedIndicators = [];\r\n    filtered.map((filteredItem, index) => {\r\n      filteredItem.indicators.map((item, index) => {\r\n        returnedIndicators.push({\r\n          value: item.description,\r\n          status: false,\r\n          sdgId: filteredItem.id,\r\n        });\r\n      });\r\n    });\r\n    //console.log(\"asjaskj\",filtered)\r\n    return returnedIndicators;\r\n  },\r\n\r\n  indicatorSummary: (sdgChecks) => {\r\n    const returnedIndicators = [];\r\n\r\n    sdgChecks.map((item, index) => {\r\n      item.indicators.map((indicator, indicatorIndex) => {\r\n        if (indicator.status === true) {\r\n          returnedIndicators.push({\r\n            description: indicator.description,\r\n            SdgId: item.id,\r\n          });\r\n        }\r\n      });\r\n    });\r\n    return returnedIndicators;\r\n  },\r\n\r\n  formatApiMapData: (apiGeoData) => {\r\n    const returnedLocations = [];\r\n    let count = 0;\r\n\r\n    apiGeoData.map((geolocation, geolocationIndex) => {\r\n      returnedLocations.push({\r\n        id: count++,\r\n        shelter: geolocation.Area,\r\n        latitude: parseFloat(geolocation.Latitude),\r\n        longitude: parseFloat(geolocation.Longitude),\r\n      });\r\n    });\r\n    return returnedLocations;\r\n  },\r\n  formatMapData: (dashboardData) => {\r\n    const returnedLocations = [];\r\n    let count = 0;\r\n\r\n    dashboardData.map((item, index) => {\r\n      item.GeoLocations.map((geolocation, geolocationIndex) => {\r\n        returnedLocations.push({\r\n          id: count++,\r\n          latitude: parseFloat(geolocation.Latitude),\r\n          longitude: parseFloat(geolocation.Longitude),\r\n        });\r\n      });\r\n    });\r\n    return returnedLocations;\r\n  },\r\n\r\n  returnApiMapDefaultCenter: (apiGeoData) => {\r\n    const defautlCenter = [];\r\n    let count = 0;\r\n\r\n    apiGeoData.map((geolocation, geolocationIndex) => {\r\n      defautlCenter.push({\r\n        lat: parseFloat(geolocation.Latitude),\r\n        lng: parseFloat(geolocation.Longitude),\r\n      });\r\n    });\r\n    return defautlCenter[0];\r\n  },\r\n\r\n  returnMapDefaultCenter: (dashboardData) => {\r\n    const defautlCenter = [];\r\n    let count = 0;\r\n\r\n    dashboardData.map((item, index) => {\r\n      item.GeoLocations.map((geolocation, geolocationIndex) => {\r\n        defautlCenter.push({\r\n          lat: parseFloat(geolocation.Latitude),\r\n          lng: parseFloat(geolocation.Longitude),\r\n        });\r\n      });\r\n    });\r\n    return defautlCenter[0];\r\n  },\r\n\r\n  containsObject: (obj, list) => {\r\n    var i;\r\n    for (i = 0; i < list.length; i++) {\r\n      if (list[i].id === obj.id) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  },\r\n  filterSdgById: (id, allIndicators) => {\r\n    let filtered = allIndicators.filter((item) => {\r\n      return item.sdgId === id;\r\n    });\r\n    return filtered;\r\n  },\r\n  returnSdgNameById: (id, sdgDump) => {\r\n    let filtered = sdgDump.filter((item) => {\r\n      return item.id === id;\r\n    });\r\n    const filteredObj = Object.assign({}, ...filtered);\r\n    return filteredObj.description;\r\n  },\r\n  setIndicatorCheckBoxes: (indicators, index) => {\r\n    let isTrue = false;\r\n    Object.keys(indicators).forEach(function (key) {\r\n      isTrue = key === index ? true : false;\r\n    });\r\n    return isTrue;\r\n  },\r\n  validateImpactFormOne: (context) => {\r\n    let _errs_ = {};\r\n    let formValid = true;\r\n    if (context.state.name === \"\") {\r\n      _errs_[\"name\"] = true;\r\n      formValid = false;\r\n    }\r\n    if (context.state.code === \"\") {\r\n      _errs_[\"code\"] = true;\r\n      formValid = false;\r\n    }\r\n    if (context.state.description === \"\") {\r\n      _errs_[\"description\"] = true;\r\n      formValid = false;\r\n    }\r\n    if (context.state.projectLocation === \"\") {\r\n      _errs_[\"projectLocation\"] = true;\r\n      formValid = false;\r\n    }\r\n\r\n    context.setState({ formOneErrors: _errs_ });\r\n    return formValid;\r\n  },\r\n\r\n  validateImpactFormTwo: (context) => {\r\n    let _errs_ = {};\r\n    let formValid = true;\r\n    if (Object.keys(context.state.sdgCheckBoxes).length === 0) {\r\n      _errs_[\"sdg\"] = true;\r\n      formValid = false;\r\n    }\r\n    context.setState({ formTwoErrors: _errs_ });\r\n    return formValid;\r\n  },\r\n  validateImpactFormThree: (context) => {\r\n    let _errs_ = {};\r\n    let formValid = true;\r\n    if (Object.keys(context.state.indicatorCheckBoxes).length === 0) {\r\n      _errs_[\"indicator\"] = true;\r\n      formValid = false;\r\n    }\r\n    context.setState({ formThreeErrors: _errs_ });\r\n    return formValid;\r\n  },\r\n\r\n  failedRequestAlert: (message, timer = 2000) => {\r\n    swal.fire({\r\n      titleText: \"Sorry!\",\r\n      text: message,\r\n      icon: \"error\",\r\n      timer: timer,\r\n      showConfirmButton: true,\r\n    });\r\n  },\r\n\r\n  canceledRequestAlert: (message, timer = 2000) => {\r\n    swal.fire({\r\n      titleText: \"Too bad\",\r\n      text: message,\r\n      icon: \"error\",\r\n      timer: timer,\r\n      showConfirmButton: true,\r\n    });\r\n  },\r\n\r\n  successMessageAlert: (message, timer = 2000) => {\r\n    swal.fire({\r\n      titleText: \"Success!\",\r\n      text: message,\r\n      icon: \"success\",\r\n      timer: timer,\r\n      showConfirmButton: true,\r\n    });\r\n  },\r\n};\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\ImpactManager\\ImpactManagerForm2.jsx",["324","325","326","327","328","329","330","331","332"],"import React, { useState, useEffect } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { withStore } from \"@spyna/react-store\";\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\n//import { sdgDump } from \"./sdgDump\";\r\nimport SvgCard from \"../SvgCard/SvgCard\";\r\nimport axios from \"axios\";\r\nconst styles = (theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(),\r\n    marginRight: theme.spacing(),\r\n    width: \"100%\",\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  formRoot: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  searchButton: {\r\n    backgroundColor: \" #66bb6a\",\r\n  },\r\n  select: {\r\n    marginTop: \"0px\",\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(),\r\n    marginTop: \"16px\",\r\n    color: \"#ffffff\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n    paddingTop: \"15px\",\r\n    paddingBottom: \"15px\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nconst ImpactManagerForm2 = (props) => {\r\n  const [sdgDumping, setSdgDumping] = useState(\"\");\r\n\r\n  useEffect(async () => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        accessToken: props.auth.data.accessToken,\r\n      },\r\n    };\r\n    const result = await axios.get(\r\n      \"http://trail-api.test.vggdev.com/sdgs/all/indicators\",\r\n      config\r\n    );\r\n    setSdgDumping(result.data.data);\r\n  });\r\n\r\n  const { classes } = props;\r\n\r\n  const setOpacity = (sdgCheckBoxes, sdgNum) => {\r\n    let opacity = \"\";\r\n    if (sdgCheckBoxes[sdgNum] === true) {\r\n      opacity = \"1\";\r\n    } else {\r\n      opacity = \"0.3\";\r\n    }\r\n    return opacity;\r\n  };\r\n\r\n  const {\r\n    handleInputChange,\r\n    handleSdgBoxChange,\r\n    sdgCheckBoxes,\r\n    formTwoErrors,\r\n    sdgDump,\r\n  } = props;\r\n\r\n  const renderSdgs = () => {\r\n    const allSdgs = props.sdgDump.map((item, index) => {\r\n      return (\r\n        <SvgCard\r\n          key={index}\r\n          path={item.image}\r\n          sdgCheckBoxes={sdgCheckBoxes}\r\n          opacity={setOpacity(sdgCheckBoxes, item.id)}\r\n          onClick={handleSdgBoxChange.bind(this, item.id)}\r\n        />\r\n      );\r\n    });\r\n\r\n    return allSdgs;\r\n  };\r\n\r\n  return (\r\n    <div className={`flex items-center ${classes.root}`}>\r\n      <Grid>\r\n        <Grid item sm={4} md={12}>\r\n          <p\r\n            style={{\r\n              color: formTwoErrors.svg === true ? \"red\" : \"black\",\r\n              marginTop: \"15px\",\r\n            }}\r\n          >\r\n            Which SDGs aligns with your impact priorities?\r\n          </p>\r\n\r\n          <Grid item sm={12} md={12}>\r\n            {renderSdgs(sdgDump)}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ImpactManagerForm2);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\ImpactManager\\ImpactManagerForm1.jsx",["333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361"],"import React, { useState, useEffect, useRef, useMemo } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  MenuItem,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\nimport { Upload, Form, Row, Col, Button } from \"antd\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport ImpactManagerSummary from \"./ImpactManagerSummary\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst styles = (theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(),\r\n    marginRight: theme.spacing(),\r\n    marginTop: 0,\r\n    width: \"100%\",\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  formRoot: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  searchButton: {\r\n    backgroundColor: \" #66bb6a\",\r\n  },\r\n  select: {\r\n    marginTop: \"0px\",\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(),\r\n    marginTop: \"16px\",\r\n    color: \"#ffffff\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n    paddingTop: \"15px\",\r\n    paddingBottom: \"15px\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  padding: \"20px\",\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: \"#eeeeee\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#fafafa\",\r\n  color: \"#bdbdbd\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: \"#2196f3\",\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\",\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\",\r\n};\r\n\r\nconst thumbsContainer = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  flexWrap: \"wrap\",\r\n  marginTop: 16,\r\n};\r\n\r\nconst thumb = {\r\n  display: \"inline-flex\",\r\n  borderRadius: 2,\r\n  border: \"1px solid #eaeaea\",\r\n  marginBottom: 8,\r\n  marginRight: 8,\r\n  width: \"auto\",\r\n  height: 200,\r\n  padding: 4,\r\n  boxSizing: \"border-box\",\r\n};\r\n\r\nconst thumbInner = {\r\n  display: \"flex\",\r\n  minWidth: 0,\r\n  overflow: \"hidden\",\r\n};\r\n\r\nconst img = {\r\n  display: \"block\",\r\n  width: \"auto\",\r\n  height: \"100%\",\r\n};\r\n\r\nfunction ImpactManagerForm1(props) {\r\n  const {\r\n    classes,\r\n    description,\r\n    code,\r\n    name,\r\n    //projectLocation,\r\n    programmeLocation,\r\n    formOneErrors,\r\n    //locationsEnum,\r\n    image,\r\n    programmePlaces,\r\n    address,\r\n  } = props;\r\n\r\n  const {\r\n    handleInputChange,\r\n    handleSelectChange,\r\n    handleBannerChange,\r\n    handleChangePlace,\r\n    handleSelectPlace,\r\n    normFile,\r\n  } = props;\r\n\r\n  return (\r\n    <div className={`flex items-center ${classes.root}`}>\r\n      <Row>\r\n        <Col span={8}>\r\n          <form className={classes.container} noValidate>\r\n            <label for=\"project-name\" style={{ margin: 0 }}>\r\n              Programme Name\r\n            </label>\r\n            <TextField\r\n              id=\"project-name\"\r\n              error={formOneErrors.name}\r\n              name={\"name\"}\r\n              value={name}\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={handleInputChange}\r\n            />\r\n          </form>\r\n        </Col>\r\n        <Col span={1}></Col>\r\n        <Col span={4}>\r\n          <form className={classes.container} noValidate>\r\n            <label for=\"project-code\" style={{ margin: 0 }}>\r\n              Programme Code\r\n            </label>\r\n            <TextField\r\n              id=\"project-code\"\r\n              name={\"code\"}\r\n              error={formOneErrors.code}\r\n              value={code}\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={handleInputChange}\r\n            />\r\n          </form>\r\n        </Col>\r\n        <Col span={1}></Col>\r\n        <Col span={5}>\r\n          <form className={classes.container} noValidate>\r\n            <label for=\"outlined-select-currency\" style={{ margin: 0 }}>\r\n              Programme Location\r\n            </label>\r\n            <FormControl fullWidth required>\r\n              <PlacesAutocomplete\r\n                className={classes.textField}\r\n                variant=\"outlined\"\r\n                value={address}\r\n                onChange={handleChangePlace}\r\n                onSelect={handleSelectPlace}\r\n              >\r\n                {({\r\n                  getInputProps,\r\n                  suggestions,\r\n                  getSuggestionItemProps,\r\n                  loading,\r\n                }) => (\r\n                  <div>\r\n                    <input\r\n                      style={{ padding: \"15px\" }}\r\n                      {...getInputProps({\r\n                        placeholder: \"Search Location\",\r\n                        className: \"location-search-input\",\r\n                      })}\r\n                    />\r\n                    <div className=\"autocomplete-dropdown-container\">\r\n                      {loading && <div>...</div>}\r\n                      {suggestions.map((suggestion) => {\r\n                        const className = suggestion.active\r\n                          ? \"suggestion-item--active\"\r\n                          : \"suggestion-item\";\r\n                        // inline style for demonstration purpose\r\n                        const style = suggestion.active\r\n                          ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\r\n                          : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\r\n                        return (\r\n                          <div\r\n                            {...getSuggestionItemProps(suggestion, {\r\n                              className,\r\n                              style,\r\n                            })}\r\n                          >\r\n                            <span>{suggestion.description}</span>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </PlacesAutocomplete>\r\n            </FormControl> \r\n          </form>\r\n        </Col>\r\n        <Col span={1}></Col>\r\n        <Col span={3}>\r\n          <form className={classes.container} noValidate>\r\n            <label for=\"outlined-select-currency\" style={{ margin: 0 }}>\r\n              Banner\r\n            </label>\r\n            <FormControl fullWidth required margin=\"normal\">\r\n              <Form.Item\r\n                name=\"upload\"\r\n                valuePropName=\"fileList\"\r\n                getValueFromEvent={normFile}\r\n              >\r\n                <Upload name=\"logo\" action=\"/\" listType=\"picture\">\r\n                  <Button icon={<UploadOutlined />} type=\"dashed\" size=\"large\">\r\n                    Click to upload\r\n                  </Button>\r\n                </Upload>\r\n              </Form.Item>\r\n            </FormControl>\r\n          </form>\r\n        </Col>\r\n      </Row>\r\n      <Grid container spacing={3}>\r\n        {/* Project Name */}\r\n\r\n        {/* Project Banner */}\r\n        <Grid item sm={3} md={3}></Grid>\r\n\r\n        {/* Project Location */}\r\n        <Grid item sm={3} md={3}></Grid>\r\n      </Grid>\r\n\r\n      {/* Second Row */}\r\n\r\n      <Grid container spacing={8}>\r\n        {/* Project Description */}\r\n        <Grid item sm={4} md={12}>\r\n          <form className={classes.container} noValidate>\r\n            <label for=\"project-description\" style={{ margin: 0 }}>\r\n              Programme Description\r\n            </label>\r\n            <TextField\r\n              id=\"project-description\"\r\n              name={\"description\"}\r\n              value={description}\r\n              error={formOneErrors.description}\r\n              multiline\r\n              rows={4}\r\n              rowsMax={6}\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={handleInputChange}\r\n            />\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(ImpactManagerForm1);\r\n\r\n// export default GoogleApiWrapper({\r\n//   apiKey: \"AIzaSyB5vf0DbG-X2_Qdya9IPHl1ZbhPdn276gQ\",\r\n// })(MapContainer);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\ImpactManager\\ImpactManagerForm3.jsx",["362","363","364","365","366","367","368","369","370","371","372","373"],"import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { Grid, Checkbox, FormControlLabel } from \"@material-ui/core\";\r\n//import { sdgDump } from \"./sdgDump\";\r\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Row, Col, Select } from \"antd\";\r\nimport SvgCard from \"../SvgCard/SvgCard\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nconst { Option } = Select;\r\nconst styles = (theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(),\r\n    marginRight: theme.spacing(),\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    display: \"block\",\r\n    margin: \"50px\",\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  formRoot: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  searchButton: {\r\n    backgroundColor: \" #66bb6a\",\r\n  },\r\n  select: {\r\n    marginTop: \"0px\",\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(),\r\n    marginTop: \"16px\",\r\n    color: \"#ffffff\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n    paddingTop: \"15px\",\r\n    paddingBottom: \"15px\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nconst renderIndicators = (indicators, props, sdgIndex) => {\r\n  const {sdgDump} = props\r\n  const { allIndicators } = props;\r\n  const allUIIndicators = indicators.map((item, index) => {\r\n    return (\r\n      <FormControlLabel\r\n        key={index}\r\n        style={{ width: \"100%\", }}\r\n        control={\r\n          <Checkbox\r\n            checked={item.status}\r\n            onChange={(e) =>\r\n              props.handleCheckboxChange(\r\n                item.description,\r\n                e,\r\n                index,\r\n                sdgIndex,\r\n                item.id\r\n              )\r\n            }\r\n            value={item.description}\r\n          />\r\n        }\r\n        label={item.description}\r\n      />\r\n    );\r\n  });\r\n  return allUIIndicators;\r\n};\r\n\r\nconst returnSdgPanels = (sdgChecks, classes, props, sdgDump) => {\r\n  const { allIndicators } = props;\r\n  const sdgPanels = sdgChecks.map((opt, index) => {\r\n    return (\r\n      <ExpansionPanel key={index}>\r\n        <Grid container spacing={1}>\r\n          <ExpansionPanelSummary\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n          >\r\n            <SvgCard\r\n              key={index}\r\n              path={opt.image}\r\n              opacity={\"1\"}\r\n              style={{ height: \"10px\" }}\r\n            />\r\n            <Grid item xs={3} sm={3}>\r\n              <Typography className={classes.heading}>{opt.description}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <div\r\n                style={{\r\n                  overflowX: \"auto\",\r\n                  width: \"100%\",\r\n                  height: \"200px\",\r\n                }}\r\n                className=\"impact\"\r\n              >\r\n                <form\r\n                  className={classes.container}\r\n                  style={{ width: \"100%\" }}\r\n                  noValidate\r\n                >\r\n                  {renderIndicators(opt.indicators, props, opt.id)}\r\n                </form>\r\n              </div>\r\n            </Grid>\r\n          </ExpansionPanelSummary>\r\n        </Grid>\r\n      </ExpansionPanel>\r\n    );\r\n  });\r\n\r\n  return sdgPanels;\r\n};\r\n\r\nfunction ImpactManagerForm3(props) {\r\n  const { classes } = props;\r\n  const {sdgDump} = props\r\n  const { allIndicators, sdgChecks } = props;\r\n\r\n  return (\r\n    <div className={`flex items-center ${classes.root}`}>\r\n      <Grid container spacing={8}>\r\n        {/* <Grid item sm={4} md={12}>\r\n          <form className={classes.container} noValidate>\r\n            {renderIndicators(allIndicators, props)}\r\n          </form>\r\n        </Grid> */}\r\n\r\n        <Grid item sm={4} md={12}>\r\n          <div className={classes.root}>\r\n            {returnSdgPanels(sdgChecks, classes, props, sdgDump)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(ImpactManagerForm3);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\ImpactManager\\ImpactManagerSummary.jsx",["374","375","376","377","378","379"],"import React from \"react\";\r\nimport Aux from \"../hocs/_Aux\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withStore } from \"@spyna/react-store\";\r\nimport { Row, Col, Card } from \"antd\";\r\n//import { sdgDump } from \"./sdgDump\";\r\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\r\nimport SvgCardView from \"../SvgCard/SvgCardView\";\r\nimport IndicatorView from \"../Indicators/IndicatorView\";\r\nimport { EditOutlined } from \"@ant-design/icons\";\r\n\r\nclass ImpactManagerSummary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: this.props.name,\r\n      code: this.props.code,\r\n      projectLocation: this.props.projectLocation,\r\n      image: this.props.image,\r\n      programmeLocation: this.props.programmeLocation,\r\n      description: this.props.description,\r\n      sdgCheckBoxes: this.props.sdgCheckBoxes,\r\n      programmePlaces: this.props.programmePlaces,\r\n      indicators: this.props.indicators,\r\n      allImpacts: this.props.allImpacts,\r\n      sdgDump: this.props.sdgDump,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  editProjectProfile = () => {\r\n    this.props.editProjectProfileCallback();\r\n  };\r\n  editSdgGoals = () => {\r\n    this.props.editSdgGoalsCallback();\r\n  };\r\n\r\n  editProjectIndicators = () => {\r\n    this.props.editProjectIndicatorsCallback();\r\n  };\r\n\r\n  renderSvgCards = () => {\r\n    const filtered = appHelpers.returnSelectedSdgs(\r\n      this.state.sdgCheckBoxes,\r\n      this.state.sdgDump\r\n    );\r\n    const allSdgs = filtered.map((item, index) => {\r\n      return <SvgCardView key={index} path={item.image} width=\"10%\" />;\r\n    });\r\n\r\n    return allSdgs;\r\n  };\r\n\r\n  renderIndicators = () => {\r\n    const indicators = appHelpers.indicatorSummary(this.props.sdgChecks);\r\n    const allIndicators = indicators.map((item, index) => {\r\n      return <IndicatorView key={index} indicator={item.description} />;\r\n    });\r\n    return allIndicators;\r\n\r\n    // this.setState({ allImpacts: allIndicators });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      description,\r\n      code,\r\n      name,\r\n      programmeLocation,\r\n      programmePlaces,\r\n      //projectLocation,\r\n      image,\r\n      sdgChecks,\r\n      sdgDump,\r\n    } = this.state;\r\n    \r\n    return (\r\n      <Aux>\r\n        <Row>\r\n          <Col md={24}>\r\n            <div>\r\n              <Card\r\n                title={\"Programme Profile\"}\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Button\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.editProjectProfile}\r\n                  style={{\r\n                    backgroundColor: \"white\",\r\n                    color: \"#53D1BE\",\r\n                    borderRadius: \"2rem\",\r\n                    textTransform: \"none\",\r\n                    boxShadow: \"none\",\r\n                    borderColor: \"#53D1BE\",\r\n                  }}\r\n                >\r\n                  <EditOutlined />\r\n                  Edit\r\n                </Button>\r\n              </Card>\r\n              <Card>\r\n                <Row style={{ display: \"flex\" }}>\r\n                  <Col span={\"12\"}>\r\n                    <h6>Programme Name</h6>\r\n                    <h6 style={{ fontWeight: \"normal\", color: \"grey\" }}>\r\n                      {name}\r\n                    </h6>\r\n                  </Col>\r\n                  <Col span={12}>\r\n                    <h6>Project Code</h6>\r\n                    <h6 style={{ fontWeight: \"normal\", color: \"grey\" }}>\r\n                      {code}\r\n                    </h6>\r\n                  </Col>\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                  <Col span={12}>\r\n                    <h6>Programme Description</h6>\r\n                    <h6 style={{ fontWeight: \"normal\", color: \"grey\" }}>\r\n                      {description}\r\n                    </h6>\r\n                  </Col>\r\n                </Row>\r\n                <br />\r\n                <div>\r\n                  {/* <h6>Programme Location</h6> */}\r\n                  <h6 style={{ fontWeight: \"normal\", color: \"grey\" }}>\r\n                    {/* {programmeLocation} */}\r\n                    {/* {programmePlaces} */}\r\n                  </h6>\r\n                </div>\r\n              </Card>\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <Card\r\n                title={\"Sustainable Development Goals\"}\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Button\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.editSdgGoals}\r\n                  style={{\r\n                    backgroundColor: \"white\",\r\n                    color: \"#53D1BE\",\r\n                    borderRadius: \"2rem\",\r\n                    textTransform: \"none\",\r\n                    boxShadow: \"none\",\r\n                    borderColor: \"#53D1BE\",\r\n                  }}\r\n                >\r\n                  <EditOutlined />\r\n                  Edit\r\n                </Button>\r\n              </Card>\r\n              <Card>\r\n                <Row>\r\n                  <Col span={\"24\"}>\r\n                    <div style={{ paddingTop: 0 }}>{this.renderSvgCards()}</div>\r\n                  </Col>\r\n                </Row>\r\n              </Card>\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <Card\r\n                title={\"Programme Indicators\"}\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Button\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.editProjectIndicators}\r\n                  style={{\r\n                    backgroundColor: \"white\",\r\n                    color: \"#53D1BE\",\r\n                    borderRadius: \"2rem\",\r\n                    textTransform: \"none\",\r\n                    boxShadow: \"none\",\r\n                    borderColor: \"#53D1BE\",\r\n                  }}\r\n                >\r\n                  <EditOutlined />\r\n                  Edit\r\n                </Button>\r\n              </Card>\r\n              <Card style={{ paddingTop: 0 }}>\r\n                <h6 style={{ fontWeight: \"normal\", color: \"grey\" }}>\r\n                  {this.renderIndicators()}\r\n                </h6>\r\n              </Card>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImpactManagerSummary;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\reducers\\projectReducer.js",["380","381"],"import {\r\n  CREATE_PROJECT,\r\n  GET_PROJECT,\r\n  TEST_DISPATCH,\r\n  GET_PROGRAMS,\r\n} from \"../constants/Types\";\r\n\r\nconst initialState = {\r\n  projects: [\r\n    {\r\n      name: \"Home Grown School Feeding\",\r\n      image:\r\n        \"https://tdma.info/assets/uploads/2017/12/Using_sunlight_to_clean_water_Featured_Image-1.jpg\",\r\n      code: \"HGSF\",\r\n      projectLocation: \"ng\",\r\n      description:\r\n        \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Non, sint!\",\r\n      sdgCheckBoxes: { 3: true, 13: true },\r\n      indicatorCheckBoxes: { 0: \"Good Health\", 2: \"Food Security\" },\r\n      location: {\r\n        active: true,\r\n        description: \"Aspen, CO, USA\",\r\n        formattedSuggestion: { mainText: \"Aspen\", secondaryText: \"CO, USA\" },\r\n        id: undefined,\r\n        index: 1,\r\n        placeId: \"ChIJfTxB93w5QIcRcvYseNxCK8E\",\r\n        types: (3)[(\"locality\", \"political\", \"geocode\")],\r\n      },\r\n      mapCenter: { lat: 7.3775355, lng: 3.9470396 },\r\n    },\r\n    {\r\n      name: \"World Reduced Inequalities\",\r\n      image:\r\n        \"https://media.pri.org/s3fs-public/styles/open_graph/public/migration/PriMigrationsDamanticWordpressAttachmentsImagesMigration/www.theworld.org/wp-content/uploads/IMG_4297.jpg?itok=iB8n0R4j\",\r\n      code: \"FEC\",\r\n      projectLocation: \"gh\",\r\n      description:\r\n        \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Non, sint!\",\r\n      sdgCheckBoxes: { 12: true, 8: true },\r\n      indicatorCheckBoxes: { 0: \"Small Agriculture\", 1: \"Financial Literacy\" },\r\n      location: {\r\n        active: true,\r\n        description: \"Ottawa, OT, CAD\",\r\n        formattedSuggestion: { mainText: \"Aspen\", secondaryText: \"CO, USA\" },\r\n        id: undefined,\r\n        index: 1,\r\n        placeId: \"ChIJfTxB93w5QIcRcvYseNxCK8E\",\r\n        types: (3)[(\"locality\", \"political\", \"geocode\")],\r\n      },\r\n      mapCenter: { lat: 6.334986, lng: 5.6037465 },\r\n    },\r\n    {\r\n      name: \"National Woman Rights\",\r\n      image:\r\n        \"https://politicalyouthnetwork.org/wp-content/uploads/2019/01/Womens-rights-are-human-rights.jpg\",\r\n      code: \"NWR\",\r\n      projectLocation: \"ng\",\r\n      description:\r\n        \"National lorem ipsum dolor sit amet consectetur adipisicing elit. Non, sint!\",\r\n      sdgCheckBoxes: { 5: true, 2: true },\r\n      indicatorCheckBoxes: { 0: \"Small Agriculture\", 1: \"Financial Literacy\" },\r\n      location: {\r\n        active: true,\r\n        description: \"Accra, GH, Ghana\",\r\n        formattedSuggestion: { mainText: \"Aspen\", secondaryText: \"CO, USA\" },\r\n        id: undefined,\r\n        index: 1,\r\n        placeId: \"ChIJfTxB93w5QIcRcvYseNxCK8E\",\r\n        types: (3)[(\"locality\", \"political\", \"geocode\")],\r\n      },\r\n      mapCenter: { lat: 47.3084488, lng: -122.2140121 },\r\n    },\r\n  ],\r\n  awarded: null,\r\n  disbursed: null,\r\n  loading: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PROGRAMS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n      };\r\n    case CREATE_PROJECT:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        projects: [...state.projects, action.payload],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\DoughnutChart\\data.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\FundingGraph\\data.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\hocs\\_Aux\\index.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\constants\\Types.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\SvgCard\\SvgCard.jsx",["382"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SvgCard = props => {\r\n  const {onClick,opacity} = props;\r\n  return (\r\n    <>\r\n      <img href=\"svg\" onClick={onClick} src={props.path} style={{ width: \"10%\", opacity:`${opacity}`,cursor:\"pointer\",padding:\".2rem\" }} />\r\n    </>\r\n  );\r\n};\r\n\r\nSvgCard.defaultProps = {\r\n  path: \"/sdgs/E_SDG_PRINT-01.svg\",\r\n  opacity:\"0.3\"\r\n};\r\n\r\nSvgCard.propTypes = {\r\n  path: PropTypes.string,\r\n  opacity:PropTypes.string\r\n};\r\n\r\nexport default SvgCard;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\SvgCard\\SvgCardView.jsx",["383"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SvgCardView = props => {\r\n  const {width} = props;\r\n  return (\r\n    <>\r\n      <img href=\"svg\" src={props.path} style={{ width: `${width}`,padding:\".2rem\" }} />\r\n    </>\r\n  );\r\n};\r\n\r\nSvgCardView.defaultProps = {\r\n  path: \"/sdgs/E_SDG_PRINT-01.svg\",\r\n  opacity:\"1\",\r\n  width:\"20%\"\r\n};\r\n\r\nSvgCardView.propTypes = {\r\n  path: PropTypes.string,\r\n  width:PropTypes.string\r\n};\r\n\r\nexport default SvgCardView;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\Indicators\\IndicatorView.jsx",["384"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst IndicatorView = props => {\r\n  return (\r\n    <ul>\r\n      <li>{props.indicator}</li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nIndicatorView.defaultProps = {};\r\n\r\nIndicatorView.propTypes = {};\r\n\r\nexport default IndicatorView;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\views\\Login\\Login.js",["385","386"],"import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport LoginForm from \"../../../src/components/LoginForm\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div>\r\n      <LoginForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\LoginForm\\index.js",["387","388","389","390","391","392","393"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport { Form, Input, Button, Row, Col, Card, Checkbox, Tabs } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoginImg from \"../../assets/graphic_login.svg\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { setAlert } from \"../../actions/alertActions\";\r\nimport { login, clearErrors } from \"../../actions/authAuctions\";\r\nimport { Redirect } from \"react-router\";\r\nimport AlertInfo from \"../Alert/index\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst LoginForm = (\r\n  { setAlert, error, login, isAuthenticated, clearErrors },\r\n  props\r\n) => {\r\n  useEffect(() => {\r\n    if (error) {\r\n      setAlert(error, \"error\");\r\n      clearErrors();\r\n    } //eslint-disable-next-line\r\n  }, [error, isAuthenticated, props.history]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const onFinish = async () => {\r\n    if (email === \"\") {\r\n      setAlert(\"Please enter all fields\", \"error\");\r\n    } else {\r\n      login(formData);\r\n      console.log(formData);\r\n    }\r\n  };\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"loginAltBg\" style={{ backgroundColor: \"#064E89\" }}>\r\n        <Row>\r\n          <Col xs={{ span: 0 }} lg={{ span: 10 }} className=\"login_container\">\r\n            <div className=\"left_container\">\r\n              <div>\r\n                {\" \"}\r\n                <h3\r\n                  className=\"loginH3\"\r\n                  style={{ color: \"#064E89\", textAlign: \"left\" }}\r\n                >\r\n                  Track your objectives using Trails.\r\n                </h3>\r\n                <p className=\"loginP\">\r\n                  Access to the most powerfull tool in the youth and agor\r\n                  sector.\r\n                </p>\r\n              </div>\r\n              <img src={LoginImg} width=\"350px\" className=\"loginImg\" />\r\n            </div>\r\n          </Col>\r\n          <Col xs={{ span: 20 }} lg={{ span: 14 }} className=\"logins_container\">\r\n            <div className=\"right_container\">\r\n              <div className=\"logo\"></div>\r\n              <div className=\"cardWrap\">\r\n                <div style={{ marginBottom: \"30px\" }}>\r\n                  <Link to=\"/\">\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"16px\",\r\n                        fontWeight: \"900\",\r\n                        color: \"#fff\",\r\n                        paddingBottom: \"10px\",\r\n                        marginRight: \"20px\",\r\n                        borderBottom: \"2px solid white\",\r\n                        marginBottom: \"30px\",\r\n                      }}\r\n                    >\r\n                      Login\r\n                    </span>\r\n                  </Link>\r\n                  <Link to=\"/create\">\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"400\",\r\n                        color: \"#5183AD\",\r\n                        paddingBottom: \"10px\",\r\n                        marginRight: \"20px\",\r\n                        borderBottom: \"2px solid #5183AD\",\r\n                        marginBottom: \"30px\",\r\n                      }}\r\n                    >\r\n                      Register\r\n                    </span>\r\n                  </Link>\r\n                </div>\r\n                <div>\r\n                  <AlertInfo />\r\n                  <br />\r\n                  <Form\r\n                    name=\"normal_login\"\r\n                    className=\"login-form\"\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={onFinish}\r\n                  >\r\n                    <Form.Item\r\n                      name=\"email\"\r\n                      rules={[\r\n                        { required: true, message: \"Confirm your Input\" },\r\n                      ]}\r\n                      style={{ marginBottom: \"15px\" }}\r\n                    >\r\n                      <Input\r\n                        style={{\r\n                          height: \"40px\",\r\n                          borderRadius: \"7px\",\r\n                          fontSize: \"0.9rem\",\r\n                          border: \"1px solid rgba(10,46,101,.1)\",\r\n                        }}\r\n                        placeholder=\"E-mail Address\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={onChange}\r\n                      />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      name=\"password\"\r\n                      rules={[\r\n                        { required: true, message: \"Confirm your Input\" },\r\n                      ]}\r\n                    >\r\n                      <Input.Password\r\n                        style={{\r\n                          height: \"40px\",\r\n                          borderRadius: \"7px\",\r\n                          fontSize: \"0.9rem\",\r\n                          border: \"1px solid rgba(10,46,101,.1)\",\r\n                        }}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={onChange}\r\n                      />\r\n                    </Form.Item>\r\n                    <Row>\r\n                      <Col xs={{ span: 12 }} lg={{ span: 6 }}>\r\n                        {\" \"}\r\n                        <Form.Item>\r\n                          <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className=\"loginBtn\"\r\n                          >\r\n                            Login\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={{ span: 12 }} lg={{ span: 12 }}>\r\n                        {\" \"}\r\n                        <Link to=\"/\">\r\n                          <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className=\"forgetBtn\"\r\n                          >\r\n                            Forgot Password ?\r\n                          </Button>\r\n                        </Link>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst textLogin = {\r\n  textAlign: \"center\",\r\n  marginBottom: 10,\r\n  paddingBottom: 10,\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  login: PropTypes.func.isRequired,\r\n  clearErrors: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.auth.error,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, login, clearErrors })(\r\n  LoginForm\r\n);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\views\\Create\\CreateAccount.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\CreateAcct\\Index.js",["394","395","396"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Index.css\";\r\nimport { Form, Input, Button, Row, Col, Card, Checkbox, Tabs } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoginImg from \"../../assets/graphic_login.svg\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { setAlert } from \"../../actions/alertActions\";\r\nimport { register, clearErrors } from \"../../actions/authAuctions\";\r\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\r\nimport { Redirect } from \"react-router\";\r\nimport AlertInfo from \"../Alert/index\";\r\n\r\nconst CreateAcct = (\r\n  { setAlert, error, register, isAuthenticated, clearErrors, registerSuccess },\r\n  props\r\n) => {\r\n  useEffect(() => {\r\n    if (error === \"A user with this email already exists\") {\r\n      setAlert(error, \"error\");\r\n      clearErrors();\r\n    } //eslint-disable-next-line\r\n  }, [error, isAuthenticated, props.history]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { firstName, lastName, email, password, password2 } = formData;\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const onFinish = async () => {\r\n    if (firstName === \"\" || lastName === \"\" || email === \"\") {\r\n      setAlert(\"Please enter all fields\", \"error\");\r\n    } else if (password.length < 8) {\r\n      setAlert(\"Password must be more than 8 characters\", \"warning\");\r\n    } else if (password != password2) {\r\n      setAlert(\"Check if passwords are equal\", \"warning\");\r\n    } else {\r\n      register({ firstName, lastName, email, password });\r\n    }\r\n  };\r\n\r\n  if (registerSuccess) {\r\n    appHelpers.successMessageAlert(\"Succesfully Registered, Login here\", 2000);\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  console.log(registerSuccess);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"loginAltBg\" style={{ backgroundColor: \"#064E89\" }}>\r\n        <Row>\r\n          <Col xs={{ span: 0 }} lg={{ span: 10 }} className=\"login_container\">\r\n            <div className=\"left_container\">\r\n              <div>\r\n                {\" \"}\r\n                <h3\r\n                  className=\"loginH3\"\r\n                  style={{ color: \"#064E89\", textAlign: \"left\" }}\r\n                >\r\n                  Track your objectives using Trails.\r\n                </h3>\r\n                <p className=\"loginP\">\r\n                  Access to the most powerfull tool in the youth and agor\r\n                  sector.\r\n                </p>\r\n              </div>\r\n              <img src={LoginImg} width=\"350px\" className=\"loginImg\" />\r\n            </div>\r\n          </Col>\r\n          <Col xs={{ span: 20 }} lg={{ span: 14 }} className=\"logins_container\">\r\n            <div className=\"right_container\">\r\n              <div className=\"logo\"></div>\r\n              <div className=\"cardWrap\">\r\n                <div>\r\n                  <Link to=\"/\">\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"400\",\r\n                        color: \"#5183AD\",\r\n                        paddingBottom: \"10px\",\r\n                        marginRight: \"20px\",\r\n                        borderBottom: \"2px solid #5183AD\",\r\n                        marginBottom: \"30px\",\r\n                      }}\r\n                    >\r\n                      Login\r\n                    </span>\r\n                  </Link>\r\n                  <Link to=\"/create\">\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"16px\",\r\n                        fontWeight: \"900\",\r\n                        color: \"#fff\",\r\n                        paddingBottom: \"10px\",\r\n                        marginRight: \"20px\",\r\n                        borderBottom: \"2px solid white\",\r\n                        marginBottom: \"30px\",\r\n                      }}\r\n                    >\r\n                      Register\r\n                    </span>\r\n                  </Link>\r\n                </div>\r\n                <div>\r\n                  <AlertInfo />\r\n                  <br />\r\n                  <Form\r\n                    name=\"normal_login\"\r\n                    className=\"login-form\"\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={onFinish}\r\n                  >\r\n                    <Form.Item\r\n                      name=\"firstName\"\r\n                      rules={[\r\n                        { required: true, message: \"This field is compulsory\" },\r\n                      ]}\r\n                      style={{ marginBottom: \"15px\" }}\r\n                    >\r\n                      <Input\r\n                        style={{\r\n                          height: \"40px\",\r\n                          borderRadius: \"7px\",\r\n                          fontSize: \"0.9rem\",\r\n                          border: \"1px solid rgba(10,46,101,.1)\",\r\n                        }}\r\n                        placeholder=\"First Name\"\r\n                        name=\"firstName\"\r\n                        type=\"text\"\r\n                        value={firstName}\r\n                        onChange={onChange}\r\n                      />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      name=\"lastName\"\r\n                      rules={[\r\n                        { required: true, message: \"This field is compulsory\" },\r\n                      ]}\r\n                      style={{ marginBottom: \"15px\" }}\r\n                    >\r\n                      <Input\r\n                        style={{\r\n                          height: \"40px\",\r\n                          borderRadius: \"7px\",\r\n                          fontSize: \"0.9rem\",\r\n                          border: \"1px solid rgba(10,46,101,.1)\",\r\n                        }}\r\n                        placeholder=\"Last Name\"\r\n                        name=\"lastName\"\r\n                        type=\"text\"\r\n                        value={lastName}\r\n                        onChange={onChange}\r\n                      />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      name=\"email\"\r\n                      rules={[\r\n                        { required: true, message: \"Confirm your Input\" },\r\n                      ]}\r\n                      style={{ marginBottom: \"15px\" }}\r\n                    >\r\n                      <Input\r\n                        style={{\r\n                          height: \"40px\",\r\n                          borderRadius: \"7px\",\r\n                          fontSize: \"0.9rem\",\r\n                          border: \"1px solid rgba(10,46,101,.1)\",\r\n                        }}\r\n                        placeholder=\"E-mail Address\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        onChange={onChange}\r\n                      />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      name=\"password\"\r\n                      rules={[\r\n                        { required: true, message: \"Confirm your Input\" },\r\n                      ]}\r\n                    >\r\n                      <Input.Password\r\n                        style={{\r\n                          height: \"40px\",\r\n                          borderRadius: \"7px\",\r\n                          fontSize: \"0.9rem\",\r\n                          border: \"1px solid rgba(10,46,101,.1)\",\r\n                        }}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={onChange}\r\n                      />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      name=\"password2\"\r\n                      rules={[\r\n                        { required: true, message: \"Confirm your Input\" },\r\n                      ]}\r\n                    >\r\n                      <Input.Password\r\n                        style={{\r\n                          height: \"40px\",\r\n                          borderRadius: \"7px\",\r\n                          fontSize: \"0.9rem\",\r\n                          border: \"1px solid rgba(10,46,101,.1)\",\r\n                        }}\r\n                        type=\"password\"\r\n                        name=\"password2\"\r\n                        placeholder=\"Re-type Password\"\r\n                        value={password2}\r\n                        onChange={onChange}\r\n                      />\r\n                    </Form.Item>\r\n                    <Row>\r\n                      <Col xs={{ span: 12 }} lg={{ span: 6 }}>\r\n                        {\" \"}\r\n                        <Form.Item>\r\n                          <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className=\"loginBtn\"\r\n                          >\r\n                            Register\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst textLogin = {\r\n  textAlign: \"center\",\r\n  marginBottom: 10,\r\n  paddingBottom: 10,\r\n};\r\n\r\nCreateAcct.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  clearErrors: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.auth.error,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  registerSuccess: state.auth.registerSuccess,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register, clearErrors })(\r\n  CreateAcct\r\n);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\views\\FormManager\\FormManager.js",["397","398","399"],"import React, { Fragment } from \"react\";\r\nimport FormIO from \"../../components/FormIO/Index\";\r\nimport { Layout, Row, Col } from \"antd\";\r\n\r\nimport TopHeader from \"../../../src/layouts/layout-components/header\";\r\nimport SideBar from \"../../../src/layouts/layout-components/sidebar\";\r\nimport FooterTab from \"../../../src/layouts/layout-components/footer\";\r\nimport CreateForm from \"../../components/FormIO/CreateForm\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst FormManager = () => {\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        <Layout style={{ minHeight: \"100vh\" }}>\r\n          <SideBar />\r\n          <Layout className=\"site-layout\">\r\n            <TopHeader />\r\n            <Content style={{ margin: \"0 16px\" }}>\r\n              <h1 style={h1}>Form Manager</h1>\r\n              <CreateForm />\r\n            </Content>\r\n            <FooterTab />\r\n          </Layout>\r\n        </Layout>\r\n      </Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormManager;\r\n\r\nconst h1 = {\r\n  fontWeight: \"700\",\r\n  fontSize: \"23px\",\r\n  padding: \"16px\",\r\n  paddingLeft: \"0px\",\r\n  marginTop: \"80px\",\r\n};\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\FormIO\\Index.js",["400"],"import React from \"react\";\r\nimport { FormBuilder } from \"react-formio\";\r\nimport \"./styles.scss\";\r\nimport \"./Index.css\";\r\nconst FormIO = () => {\r\n  return (\r\n    <div>\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormIO;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\FormIO\\CreateForm.js",["401","402","403","404"],"import React from \"react\";\r\nimport { Row, Col, Layout, Card } from \"antd\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst CreateForm = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Layout>\r\n      <Row>\r\n        <Col span={6}>\r\n          <h1 style={{ fontSize: \"20px\" }}>Create new form</h1>\r\n          <br />\r\n          <Link to=\"/dashboard/build_form\">\r\n            <Card style={{ width: 300, height: 350, borderColor: \"black\" }}>\r\n              <h1\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  fontSize: \"150px\",\r\n                  margin: \"0\",\r\n                  padding: \"0\",\r\n                  fontWeight: \"200\",\r\n                }}\r\n              >\r\n                +\r\n              </h1>\r\n            </Card>\r\n          </Link>\r\n        </Col>\r\n        <Col span={2}></Col>\r\n        <Col span={16}>\r\n          <h6 style={{ fontSize: \"20px\" }}>Available Forms</h6>\r\n          <br />\r\n          <Link to=\"/dashboard/build_form\">\r\n            <Card\r\n              style={{ width: 100, height: 150, borderColor: \"black\" }}\r\n              title=\"GEEP\"\r\n            ></Card>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CreateForm;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\reducers\\authReducer.js",["405"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  CLEAR_ERRORS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"../constants/Types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  registerSuccess: false,\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: {},\r\n  data: {},\r\n  programs:[]\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        registerSuccess: true,\r\n        loading: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", action.payload.data.accessToken);\r\n      return {\r\n        ...state,\r\n        user: action.payload.data,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        token: action.payload.data.accessToken\r\n      };\r\n    case LOGIN_FAIL:\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n        error: action.payload,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\actions\\alertActions.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\actions\\authAuctions.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\utils\\setAuthToken.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\reducers\\alertReducer.js",["406"],"import { SET_ALERT, REMOVE_ALERT } from \"../constants/Types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return [...state, action.payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\Alert\\index.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\layouts\\index.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\components\\FormBuilder.js\\BuildForm.js",["407","408","409","410","411","412"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Radio,\r\n  Select,\r\n  Divider,\r\n  Space,\r\n  Checkbox,\r\n} from \"antd\";\r\nimport \"./index.css\";\r\n\r\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst areas = [\r\n  { label: \"Beijing\", value: \"Beijing\" },\r\n  { label: \"Shanghai\", value: \"Shanghai\" },\r\n];\r\n\r\nconst BuildForm = ({ project }) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    name: \"\",\r\n    button: true,\r\n    program: \"\",\r\n    instruction: \"\",\r\n    components: [],\r\n  });\r\n\r\n  const { title, program, instruction, components, name, button } = formData;\r\n\r\n  const { projects } = project;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const onFinish = (formData) => {\r\n    console.log(\"Data\", formData);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Form\r\n            name=\"normal_login\"\r\n            layout={\"vertical\"}\r\n            className=\"login-form\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n          >\r\n            <Card title={\"Create your custom form\"}>\r\n              <Row>\r\n                <Col span={8}>\r\n                  <Form.Item\r\n                    label={titleName}\r\n                    name=\"title\"\r\n                    rules={[{ required: true, message: \"Confirm your Input\" }]}\r\n                    style={{ marginBottom: \"15px\" }}\r\n                  >\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      value={title}\r\n                      onChange={onChange}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={1}></Col>\r\n                <Col span={5}>\r\n                  <Form.Item\r\n                    label={titleName2}\r\n                    name={\"program\"}\r\n                    value={program}\r\n                    rules={[\r\n                      { required: true, message: \"Please select a program\" },\r\n                    ]}\r\n                  >\r\n                    <Select placeholder=\"Select program\">\r\n                      {projects.map((project) => (\r\n                        <Fragment>\r\n                          <Option value={project.code}>{project.code}</Option>\r\n                        </Fragment>\r\n                      ))}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={1}></Col>\r\n                <Col span={8}>\r\n                  <Form.Item\r\n                    label={titleName4}\r\n                    name=\"name\"\r\n                    rules={[{ required: true, message: \"Confirm your Input\" }]}\r\n                    style={{ marginBottom: \"15px\" }}\r\n                  >\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      value={name}\r\n                      onChange={onChange}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span={24}>\r\n                  <Form.Item label={titleName3} name=\"instruction\">\r\n                    <Input.TextArea\r\n                      type=\"text\"\r\n                      name=\"instruction\"\r\n                      value={instruction}\r\n                      onChange={onChange}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={{ span: 12 }} lg={{ span: 12 }}>\r\n                  <Form.Item name=\"remember\" valuePropName=\"checked\">\r\n                    <Checkbox checked disabled />\r\n                  </Form.Item>\r\n                  <Form.Item></Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n            <Divider />\r\n\r\n            {/* Form Builder */}\r\n\r\n            <Card>\r\n              <Form.List\r\n                name=\"components\"\r\n                value={components}\r\n                className=\"newComponents\"\r\n              >\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map((field) => (\r\n                      <div key={field.key} size=\"100%\" width={\"100%\"}>\r\n                        <Form.Item noStyle> {() => <div></div>}</Form.Item>\r\n                        <Card>\r\n                          <Row>\r\n                            <Col span={7}>\r\n                              <Form.Item\r\n                                {...field}\r\n                                name={[field.name, \"linkedIndicator\"]}\r\n                                fieldKey={[field.fieldKey, \"linkedIndicator\"]}\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message:\r\n                                      \"Please select a question indicator\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Select\r\n                                  placeholder=\"Select Indicator\"\r\n                                  label={\"Indicators\"}\r\n                                >\r\n                                  {projects.map((project) => (\r\n                                    <Fragment>\r\n                                      {Object.entries(\r\n                                        project.indicatorCheckBoxes\r\n                                      ).map(([key, val]) => (\r\n                                        <Option value={val} key={key}>\r\n                                          {\" \"}\r\n                                          {val}\r\n                                        </Option>\r\n                                      ))}\r\n                                    </Fragment>\r\n                                  ))}\r\n                                </Select>\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={1}></Col>\r\n                            <Col span={4}>\r\n                              <Form.Item\r\n                                {...field}\r\n                                name={[field.name, \"value\"]}\r\n                                fieldKey={[field.fieldKey, \"value\"]}\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please select an input type\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Select\r\n                                  placeholder=\"Select Input\"\r\n                                  label={\"Short free text\"}\r\n                                >\r\n                                  <Option value=\"text\">Short Free Text</Option>\r\n                                </Select>\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                              <Form.Item\r\n                                {...field}\r\n                                name={[field.name, \"label\"]}\r\n                                fieldKey={[field.fieldKey, \"label\"]}\r\n                              >\r\n                                {\" \"}\r\n                                <Input\r\n                                  type=\"text\"\r\n                                  placeholder={\"Input Label\"}\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={1}></Col>\r\n                            <Col span={4}>\r\n                              <Form.Item\r\n                                {...field}\r\n                                name={[field.name, \"target\"]}\r\n                                fieldKey={[field.fieldKey, \"target\"]}\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Confirm your Input\",\r\n                                  },\r\n                                ]}\r\n                                style={{ marginBottom: \"15px\" }}\r\n                              >\r\n                                <Input\r\n                                  type=\"number\"\r\n                                  placeholder={\"Target line\"}\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={1}></Col>\r\n                            <Col span={4}>\r\n                              <Form.Item\r\n                                {...field}\r\n                                name={[field.name, \"indicatorMetric\"]}\r\n                                fieldKey={[field.fieldKey, \"indicatorMetric\"]}\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please select a metric\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Select\r\n                                  placeholder=\"Select indicator metric\"\r\n                                  label={\"Select indicator metric\"}\r\n                                >\r\n                                  <Option value=\"numeric\">Numeric</Option>\r\n                                  <Option value=\"percentage\">Percentage</Option>\r\n                                </Select>\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={1}></Col>\r\n                            <Col span={1}>\r\n                              <Button\r\n                                type=\"danger\"\r\n                                onClick={() => remove(field.name)}\r\n                                icon={<MinusCircleOutlined />}\r\n                                size={\"medium\"}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                        <br />\r\n                        <br />\r\n                      </div>\r\n                    ))}\r\n                    <Divider />\r\n                    <Row>\r\n                      <Col span={2}>\r\n                        <Form.Item>\r\n                          <Button\r\n                            type=\"dashed\"\r\n                            onClick={() => add()}\r\n                            icon={<PlusOutlined />}\r\n                          >\r\n                            Create Field\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={1}></Col>\r\n                      <Col span={2}>\r\n                        <Form.Item>\r\n                          <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className=\"forgetBtn\"\r\n                            onSubmit={onFinish}\r\n                          >\r\n                            Create Form\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Card>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Divider />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst titleName = (\r\n  <p\r\n    style={{\r\n      margin: \"0px\",\r\n      padding: \"0px\",\r\n      color: \"#001529\",\r\n      fontSize: \"14px\",\r\n      border: \"none\",\r\n      fontWeight: \"bold\",\r\n    }}\r\n  >\r\n    Form Title\r\n  </p>\r\n);\r\n\r\nconst titleName2 = (\r\n  <p\r\n    style={{\r\n      margin: \"0px\",\r\n      padding: \"0px\",\r\n      color: \"#001529\",\r\n      fontSize: \"14px\",\r\n      border: \"none\",\r\n      fontWeight: \"bold\",\r\n    }}\r\n  >\r\n    Link Form to program\r\n  </p>\r\n);\r\nconst titleName3 = (\r\n  <p\r\n    style={{\r\n      margin: \"0px\",\r\n      padding: \"0px\",\r\n      color: \"#001529\",\r\n      fontSize: \"14px\",\r\n      border: \"none\",\r\n      fontWeight: \"bold\",\r\n    }}\r\n  >\r\n    Instruction (Optional)\r\n  </p>\r\n);\r\n\r\nconst titleName4 = (\r\n  <p\r\n    style={{\r\n      margin: \"0px\",\r\n      padding: \"0px\",\r\n      color: \"#001529\",\r\n      fontSize: \"14px\",\r\n      border: \"none\",\r\n      fontWeight: \"bold\",\r\n    }}\r\n  >\r\n    Name\r\n  </p>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.projects,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(BuildForm);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\views\\FormBuilder\\FormBuild.js",["413","414","415","416"],"import React, { Fragment } from \"react\";\r\nimport FormIO from \"../../components/FormIO/Index\";\r\nimport { Layout, Row, Col } from \"antd\";\r\n\r\nimport TopHeader from \"../../../src/layouts/layout-components/header\";\r\nimport SideBar from \"../../../src/layouts/layout-components/sidebar\";\r\nimport FooterTab from \"../../../src/layouts/layout-components/footer\";\r\nimport CreateForm from \"../../components/FormIO/CreateForm\";\r\nimport BuildForm from \"../../components/FormBuilder.js/BuildForm\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst FormBuild = () => {\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        <Layout style={{ minHeight: \"100vh\" }}>\r\n          <SideBar />\r\n          <Layout className=\"site-layout\">\r\n            <TopHeader />\r\n            <Content style={{ margin: \"0 16px\" }}>\r\n              <h1 style={h1}>Form Manager</h1>\r\n              <BuildForm />\r\n            </Content>\r\n            <FooterTab />\r\n          </Layout>\r\n        </Layout>\r\n      </Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormBuild;\r\n\r\nconst h1 = {\r\n  fontWeight: \"700\",\r\n  fontSize: \"23px\",\r\n  padding: \"16px\",\r\n  paddingLeft: \"0px\",\r\n  marginTop: \"80px\",\r\n};\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\layouts\\layout-components\\menu\\index.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\layouts\\layout-components\\menu\\RightMenu.js",["417","418"],"import React, { useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logout, loadUser } from \"../../../actions/authAuctions\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport { Menu, Grid } from \"antd\";\r\nimport { Link } from \"@material-ui/core\";\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const RightMenu = (\r\n  { logout, user, loadUser, isAuthenticated, auth },\r\n  props\r\n) => {\r\n  const { data } = auth;\r\n  useEffect(() => {\r\n   // loadUser();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onLogout = () => {\r\n    return <Redirect to=\"/\" />;\r\n  };\r\n\r\n  const { md } = useBreakpoint();\r\n  return (\r\n    <Menu mode={md ? \"horizontal\" : \"inline\"}>\r\n      <SubMenu key=\"sub1\" title={`${data.firstName} ${data.lastName}`}>\r\n        <Menu.Item key=\"setting:1\">Settings</Menu.Item>\r\n        <Menu.Item key=\"setting:2\">\r\n          <Link to=\"/\">Logout</Link>\r\n        </Menu.Item>\r\n      </SubMenu>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nRightMenu.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout, loadUser })(RightMenu);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\layouts\\layout-components\\menu\\LeftMenu.js",["419","420"],"import \"./index.css\";\r\nimport React from \"react\";\r\nimport { Menu, Grid } from \"antd\";\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst LeftMenu = () => {\r\n  const { md } = useBreakpoint();\r\n  return <Menu mode={md ? \"horizontal\" : \"inline\"}></Menu>;\r\n};\r\n\r\nexport default LeftMenu;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\src\\constants\\app.constants.js",[],{"ruleId":"421","replacedBy":"422"},{"ruleId":"423","replacedBy":"424"},{"ruleId":"425","severity":1,"message":"426","line":2,"column":18,"nodeType":"427","messageId":"428","endLine":2,"endColumn":21},{"ruleId":"425","severity":1,"message":"429","line":2,"column":23,"nodeType":"427","messageId":"428","endLine":2,"endColumn":26},{"ruleId":"425","severity":1,"message":"430","line":8,"column":8,"nodeType":"427","messageId":"428","endLine":8,"endColumn":20},{"ruleId":"431","severity":1,"message":"432","line":24,"column":3,"nodeType":"433","messageId":"434","endLine":37,"endColumn":4},{"ruleId":"425","severity":1,"message":"435","line":35,"column":15,"nodeType":"427","messageId":"428","endLine":35,"endColumn":18},{"ruleId":"425","severity":1,"message":"436","line":3,"column":10,"nodeType":"427","messageId":"428","endLine":3,"endColumn":16},{"ruleId":"425","severity":1,"message":"437","line":3,"column":42,"nodeType":"427","messageId":"428","endLine":3,"endColumn":50},{"ruleId":"425","severity":1,"message":"438","line":11,"column":9,"nodeType":"427","messageId":"428","endLine":11,"endColumn":15},{"ruleId":"439","severity":1,"message":"440","line":12,"column":36,"nodeType":"441","messageId":"442","endLine":12,"endColumn":38},{"ruleId":"439","severity":1,"message":"440","line":14,"column":45,"nodeType":"441","messageId":"442","endLine":14,"endColumn":47},{"ruleId":"443","severity":1,"message":"444","line":26,"column":26,"nodeType":"445","messageId":"434","endLine":26,"endColumn":28},{"ruleId":"425","severity":1,"message":"446","line":4,"column":10,"nodeType":"427","messageId":"428","endLine":4,"endColumn":19},{"ruleId":"425","severity":1,"message":"426","line":5,"column":10,"nodeType":"427","messageId":"428","endLine":5,"endColumn":13},{"ruleId":"425","severity":1,"message":"429","line":5,"column":15,"nodeType":"427","messageId":"428","endLine":5,"endColumn":18},{"ruleId":"425","severity":1,"message":"447","line":5,"column":26,"nodeType":"427","messageId":"428","endLine":5,"endColumn":30},{"ruleId":"425","severity":1,"message":"448","line":17,"column":10,"nodeType":"427","messageId":"428","endLine":17,"endColumn":21},{"ruleId":"425","severity":1,"message":"449","line":18,"column":8,"nodeType":"427","messageId":"428","endLine":18,"endColumn":26},{"ruleId":"425","severity":1,"message":"450","line":23,"column":10,"nodeType":"427","messageId":"428","endLine":23,"endColumn":13},{"ruleId":"425","severity":1,"message":"451","line":23,"column":15,"nodeType":"427","messageId":"428","endLine":23,"endColumn":21},{"ruleId":"425","severity":1,"message":"452","line":25,"column":7,"nodeType":"427","messageId":"428","endLine":25,"endColumn":16},{"ruleId":"425","severity":1,"message":"453","line":41,"column":7,"nodeType":"427","messageId":"428","endLine":41,"endColumn":18},{"ruleId":"425","severity":1,"message":"454","line":45,"column":7,"nodeType":"427","messageId":"428","endLine":45,"endColumn":18},{"ruleId":"425","severity":1,"message":"455","line":49,"column":7,"nodeType":"427","messageId":"428","endLine":49,"endColumn":18},{"ruleId":"425","severity":1,"message":"456","line":53,"column":7,"nodeType":"427","messageId":"428","endLine":53,"endColumn":22},{"ruleId":"425","severity":1,"message":"457","line":60,"column":7,"nodeType":"427","messageId":"428","endLine":60,"endColumn":12},{"ruleId":"425","severity":1,"message":"458","line":72,"column":7,"nodeType":"427","messageId":"428","endLine":72,"endColumn":17},{"ruleId":"425","severity":1,"message":"459","line":78,"column":7,"nodeType":"427","messageId":"428","endLine":78,"endColumn":10},{"ruleId":"425","severity":1,"message":"460","line":229,"column":13,"nodeType":"427","messageId":"428","endLine":229,"endColumn":26},{"ruleId":"425","severity":1,"message":"461","line":282,"column":11,"nodeType":"427","messageId":"428","endLine":282,"endColumn":27},{"ruleId":"425","severity":1,"message":"462","line":439,"column":13,"nodeType":"427","messageId":"428","endLine":439,"endColumn":21},{"ruleId":"463","severity":1,"message":"464","line":8,"column":3,"nodeType":"433","messageId":"465","endLine":10,"endColumn":4},{"ruleId":"466","severity":1,"message":"467","line":29,"column":5,"nodeType":"468","messageId":"469","endLine":31,"endColumn":6},{"ruleId":"443","severity":1,"message":"444","line":35,"column":28,"nodeType":"445","messageId":"434","endLine":35,"endColumn":30},{"ruleId":"425","severity":1,"message":"470","line":4,"column":10,"nodeType":"427","messageId":"428","endLine":4,"endColumn":13},{"ruleId":"425","severity":1,"message":"471","line":4,"column":15,"nodeType":"427","messageId":"428","endLine":4,"endColumn":19},{"ruleId":"425","severity":1,"message":"472","line":5,"column":10,"nodeType":"427","messageId":"428","endLine":5,"endColumn":14},{"ruleId":"425","severity":1,"message":"473","line":2,"column":26,"nodeType":"427","messageId":"428","endLine":2,"endColumn":32},{"ruleId":"425","severity":1,"message":"474","line":8,"column":23,"nodeType":"427","messageId":"428","endLine":8,"endColumn":32},{"ruleId":"425","severity":1,"message":"475","line":9,"column":11,"nodeType":"427","messageId":"428","endLine":9,"endColumn":20},{"ruleId":"425","severity":1,"message":"476","line":11,"column":11,"nodeType":"427","messageId":"428","endLine":11,"endColumn":15},{"ruleId":"443","severity":1,"message":"444","line":39,"column":36,"nodeType":"445","messageId":"434","endLine":39,"endColumn":38},{"ruleId":"443","severity":1,"message":"444","line":47,"column":48,"nodeType":"445","messageId":"434","endLine":47,"endColumn":50},{"ruleId":"425","severity":1,"message":"474","line":10,"column":23,"nodeType":"427","messageId":"428","endLine":10,"endColumn":32},{"ruleId":"425","severity":1,"message":"476","line":12,"column":11,"nodeType":"427","messageId":"428","endLine":12,"endColumn":15},{"ruleId":"425","severity":1,"message":"474","line":31,"column":23,"nodeType":"427","messageId":"428","endLine":31,"endColumn":32},{"ruleId":"425","severity":1,"message":"477","line":33,"column":9,"nodeType":"427","messageId":"428","endLine":33,"endColumn":17},{"ruleId":"425","severity":1,"message":"476","line":34,"column":11,"nodeType":"427","messageId":"428","endLine":34,"endColumn":15},{"ruleId":"478","severity":1,"message":"479","line":48,"column":67,"nodeType":"480","messageId":"481","endLine":48,"endColumn":68},{"ruleId":"425","severity":1,"message":"474","line":133,"column":13,"nodeType":"427","messageId":"428","endLine":133,"endColumn":22},{"ruleId":"443","severity":1,"message":"444","line":138,"column":42,"nodeType":"445","messageId":"434","endLine":138,"endColumn":44},{"ruleId":"425","severity":1,"message":"482","line":8,"column":3,"nodeType":"427","messageId":"428","endLine":8,"endColumn":17},{"ruleId":"483","severity":1,"message":"484","line":42,"column":13,"nodeType":"485","endLine":42,"endColumn":58},{"ruleId":"425","severity":1,"message":"486","line":1,"column":28,"nodeType":"427","messageId":"428","endLine":1,"endColumn":36},{"ruleId":"425","severity":1,"message":"487","line":3,"column":32,"nodeType":"427","messageId":"428","endLine":3,"endColumn":42},{"ruleId":"425","severity":1,"message":"488","line":3,"column":44,"nodeType":"427","messageId":"428","endLine":3,"endColumn":50},{"ruleId":"425","severity":1,"message":"489","line":4,"column":10,"nodeType":"427","messageId":"428","endLine":4,"endColumn":24},{"ruleId":"425","severity":1,"message":"490","line":4,"column":3,"nodeType":"427","messageId":"428","endLine":4,"endColumn":16},{"ruleId":"425","severity":1,"message":"491","line":5,"column":3,"nodeType":"427","messageId":"428","endLine":5,"endColumn":17},{"ruleId":"425","severity":1,"message":"492","line":43,"column":9,"nodeType":"427","messageId":"428","endLine":43,"endColumn":15},{"ruleId":"439","severity":1,"message":"440","line":62,"column":40,"nodeType":"441","messageId":"442","endLine":62,"endColumn":42},{"ruleId":"439","severity":1,"message":"440","line":63,"column":49,"nodeType":"441","messageId":"442","endLine":63,"endColumn":51},{"ruleId":"439","severity":1,"message":"440","line":78,"column":33,"nodeType":"441","messageId":"442","endLine":78,"endColumn":35},{"ruleId":"439","severity":1,"message":"440","line":79,"column":55,"nodeType":"441","messageId":"442","endLine":79,"endColumn":57},{"ruleId":"439","severity":1,"message":"440","line":95,"column":52,"nodeType":"441","messageId":"442","endLine":95,"endColumn":54},{"ruleId":"439","severity":1,"message":"440","line":109,"column":37,"nodeType":"441","messageId":"442","endLine":109,"endColumn":39},{"ruleId":"439","severity":1,"message":"440","line":110,"column":61,"nodeType":"441","messageId":"442","endLine":110,"endColumn":63},{"ruleId":"425","severity":1,"message":"493","line":123,"column":9,"nodeType":"427","messageId":"428","endLine":123,"endColumn":14},{"ruleId":"439","severity":1,"message":"440","line":125,"column":52,"nodeType":"441","messageId":"442","endLine":125,"endColumn":54},{"ruleId":"425","severity":1,"message":"493","line":136,"column":9,"nodeType":"427","messageId":"428","endLine":136,"endColumn":14},{"ruleId":"439","severity":1,"message":"440","line":138,"column":37,"nodeType":"441","messageId":"442","endLine":138,"endColumn":39},{"ruleId":"439","severity":1,"message":"440","line":139,"column":61,"nodeType":"441","messageId":"442","endLine":139,"endColumn":63},{"ruleId":"425","severity":1,"message":"446","line":3,"column":10,"nodeType":"427","messageId":"428","endLine":3,"endColumn":19},{"ruleId":"425","severity":1,"message":"494","line":5,"column":3,"nodeType":"427","messageId":"428","endLine":5,"endColumn":12},{"ruleId":"425","severity":1,"message":"495","line":7,"column":3,"nodeType":"427","messageId":"428","endLine":7,"endColumn":11},{"ruleId":"425","severity":1,"message":"496","line":8,"column":3,"nodeType":"427","messageId":"428","endLine":8,"endColumn":19},{"ruleId":"425","severity":1,"message":"497","line":9,"column":3,"nodeType":"427","messageId":"428","endLine":9,"endColumn":11},{"ruleId":"425","severity":1,"message":"498","line":62,"column":10,"nodeType":"427","messageId":"428","endLine":62,"endColumn":20},{"ruleId":"499","severity":1,"message":"500","line":64,"column":3,"nodeType":"427","endLine":64,"endColumn":12,"suggestions":"501"},{"ruleId":"499","severity":1,"message":"502","line":64,"column":13,"nodeType":"441","endLine":76,"endColumn":4},{"ruleId":"425","severity":1,"message":"503","line":91,"column":5,"nodeType":"427","messageId":"428","endLine":91,"endColumn":22},{"ruleId":"425","severity":1,"message":"504","line":1,"column":17,"nodeType":"427","messageId":"428","endLine":1,"endColumn":25},{"ruleId":"425","severity":1,"message":"505","line":1,"column":27,"nodeType":"427","messageId":"428","endLine":1,"endColumn":36},{"ruleId":"425","severity":1,"message":"506","line":1,"column":38,"nodeType":"427","messageId":"428","endLine":1,"endColumn":44},{"ruleId":"425","severity":1,"message":"507","line":1,"column":46,"nodeType":"427","messageId":"428","endLine":1,"endColumn":53},{"ruleId":"425","severity":1,"message":"495","line":6,"column":3,"nodeType":"427","messageId":"428","endLine":6,"endColumn":11},{"ruleId":"425","severity":1,"message":"496","line":7,"column":3,"nodeType":"427","messageId":"428","endLine":7,"endColumn":19},{"ruleId":"425","severity":1,"message":"497","line":8,"column":3,"nodeType":"427","messageId":"428","endLine":8,"endColumn":11},{"ruleId":"425","severity":1,"message":"508","line":13,"column":8,"nodeType":"427","messageId":"428","endLine":13,"endColumn":18},{"ruleId":"425","severity":1,"message":"509","line":14,"column":8,"nodeType":"427","messageId":"428","endLine":14,"endColumn":32},{"ruleId":"425","severity":1,"message":"510","line":15,"column":10,"nodeType":"427","messageId":"428","endLine":15,"endColumn":22},{"ruleId":"425","severity":1,"message":"448","line":16,"column":10,"nodeType":"427","messageId":"428","endLine":16,"endColumn":21},{"ruleId":"425","severity":1,"message":"511","line":17,"column":8,"nodeType":"427","messageId":"428","endLine":17,"endColumn":28},{"ruleId":"425","severity":1,"message":"512","line":19,"column":3,"nodeType":"427","messageId":"428","endLine":19,"endColumn":19},{"ruleId":"425","severity":1,"message":"513","line":20,"column":3,"nodeType":"427","messageId":"428","endLine":20,"endColumn":12},{"ruleId":"425","severity":1,"message":"514","line":22,"column":26,"nodeType":"427","messageId":"428","endLine":22,"endColumn":39},{"ruleId":"425","severity":1,"message":"515","line":24,"column":9,"nodeType":"427","messageId":"428","endLine":24,"endColumn":15},{"ruleId":"425","severity":1,"message":"452","line":74,"column":7,"nodeType":"427","messageId":"428","endLine":74,"endColumn":16},{"ruleId":"425","severity":1,"message":"453","line":90,"column":7,"nodeType":"427","messageId":"428","endLine":90,"endColumn":18},{"ruleId":"425","severity":1,"message":"454","line":94,"column":7,"nodeType":"427","messageId":"428","endLine":94,"endColumn":18},{"ruleId":"425","severity":1,"message":"455","line":98,"column":7,"nodeType":"427","messageId":"428","endLine":98,"endColumn":18},{"ruleId":"425","severity":1,"message":"456","line":102,"column":7,"nodeType":"427","messageId":"428","endLine":102,"endColumn":22},{"ruleId":"425","severity":1,"message":"457","line":109,"column":7,"nodeType":"427","messageId":"428","endLine":109,"endColumn":12},{"ruleId":"425","severity":1,"message":"458","line":121,"column":7,"nodeType":"427","messageId":"428","endLine":121,"endColumn":17},{"ruleId":"425","severity":1,"message":"459","line":127,"column":7,"nodeType":"427","messageId":"428","endLine":127,"endColumn":10},{"ruleId":"425","severity":1,"message":"516","line":140,"column":5,"nodeType":"427","messageId":"428","endLine":140,"endColumn":22},{"ruleId":"425","severity":1,"message":"517","line":143,"column":5,"nodeType":"427","messageId":"428","endLine":143,"endColumn":10},{"ruleId":"425","severity":1,"message":"518","line":144,"column":5,"nodeType":"427","messageId":"428","endLine":144,"endColumn":20},{"ruleId":"425","severity":1,"message":"519","line":150,"column":5,"nodeType":"427","messageId":"428","endLine":150,"endColumn":23},{"ruleId":"425","severity":1,"message":"520","line":151,"column":5,"nodeType":"427","messageId":"428","endLine":151,"endColumn":23},{"ruleId":"425","severity":1,"message":"521","line":5,"column":10,"nodeType":"427","messageId":"428","endLine":5,"endColumn":20},{"ruleId":"425","severity":1,"message":"522","line":8,"column":8,"nodeType":"427","messageId":"428","endLine":8,"endColumn":29},{"ruleId":"425","severity":1,"message":"523","line":10,"column":8,"nodeType":"427","messageId":"428","endLine":10,"endColumn":22},{"ruleId":"425","severity":1,"message":"524","line":11,"column":8,"nodeType":"427","messageId":"428","endLine":11,"endColumn":20},{"ruleId":"425","severity":1,"message":"426","line":12,"column":10,"nodeType":"427","messageId":"428","endLine":12,"endColumn":13},{"ruleId":"425","severity":1,"message":"429","line":12,"column":15,"nodeType":"427","messageId":"428","endLine":12,"endColumn":18},{"ruleId":"425","severity":1,"message":"525","line":14,"column":10,"nodeType":"427","messageId":"428","endLine":14,"endColumn":18},{"ruleId":"425","severity":1,"message":"515","line":16,"column":9,"nodeType":"427","messageId":"428","endLine":16,"endColumn":15},{"ruleId":"425","severity":1,"message":"526","line":71,"column":10,"nodeType":"427","messageId":"428","endLine":71,"endColumn":17},{"ruleId":"425","severity":1,"message":"527","line":72,"column":11,"nodeType":"427","messageId":"428","endLine":72,"endColumn":24},{"ruleId":"425","severity":1,"message":"527","line":101,"column":11,"nodeType":"427","messageId":"428","endLine":101,"endColumn":24},{"ruleId":"425","severity":1,"message":"527","line":149,"column":11,"nodeType":"427","messageId":"428","endLine":149,"endColumn":24},{"ruleId":"425","severity":1,"message":"446","line":4,"column":10,"nodeType":"427","messageId":"428","endLine":4,"endColumn":19},{"ruleId":"425","severity":1,"message":"516","line":70,"column":7,"nodeType":"427","messageId":"428","endLine":70,"endColumn":24},{"ruleId":"425","severity":1,"message":"518","line":71,"column":7,"nodeType":"427","messageId":"428","endLine":71,"endColumn":22},{"ruleId":"425","severity":1,"message":"517","line":73,"column":7,"nodeType":"427","messageId":"428","endLine":73,"endColumn":12},{"ruleId":"425","severity":1,"message":"528","line":74,"column":7,"nodeType":"427","messageId":"428","endLine":74,"endColumn":16},{"ruleId":"425","severity":1,"message":"526","line":75,"column":7,"nodeType":"427","messageId":"428","endLine":75,"endColumn":14},{"ruleId":"425","severity":1,"message":"490","line":4,"column":3,"nodeType":"427","messageId":"428","endLine":4,"endColumn":16},{"ruleId":"529","severity":1,"message":"530","line":79,"column":1,"nodeType":"531","endLine":100,"endColumn":3},{"ruleId":"483","severity":1,"message":"484","line":8,"column":7,"nodeType":"485","endLine":8,"endColumn":140},{"ruleId":"483","severity":1,"message":"484","line":8,"column":7,"nodeType":"485","endLine":8,"endColumn":88},{"ruleId":"425","severity":1,"message":"532","line":2,"column":8,"nodeType":"427","messageId":"428","endLine":2,"endColumn":17},{"ruleId":"425","severity":1,"message":"426","line":2,"column":10,"nodeType":"427","messageId":"428","endLine":2,"endColumn":13},{"ruleId":"425","severity":1,"message":"429","line":2,"column":15,"nodeType":"427","messageId":"428","endLine":2,"endColumn":18},{"ruleId":"425","severity":1,"message":"533","line":3,"column":41,"nodeType":"427","messageId":"428","endLine":3,"endColumn":45},{"ruleId":"425","severity":1,"message":"495","line":3,"column":47,"nodeType":"427","messageId":"428","endLine":3,"endColumn":55},{"ruleId":"425","severity":1,"message":"534","line":3,"column":57,"nodeType":"427","messageId":"428","endLine":3,"endColumn":61},{"ruleId":"425","severity":1,"message":"535","line":4,"column":10,"nodeType":"427","messageId":"428","endLine":4,"endColumn":22},{"ruleId":"425","severity":1,"message":"536","line":4,"column":24,"nodeType":"427","messageId":"428","endLine":4,"endColumn":36},{"ruleId":"483","severity":1,"message":"484","line":66,"column":15,"nodeType":"485","endLine":66,"endColumn":72},{"ruleId":"425","severity":1,"message":"537","line":192,"column":7,"nodeType":"427","messageId":"428","endLine":192,"endColumn":16},{"ruleId":"425","severity":1,"message":"533","line":3,"column":41,"nodeType":"427","messageId":"428","endLine":3,"endColumn":45},{"ruleId":"425","severity":1,"message":"495","line":3,"column":47,"nodeType":"427","messageId":"428","endLine":3,"endColumn":55},{"ruleId":"425","severity":1,"message":"534","line":3,"column":57,"nodeType":"427","messageId":"428","endLine":3,"endColumn":61},{"ruleId":"425","severity":1,"message":"538","line":2,"column":8,"nodeType":"427","messageId":"428","endLine":2,"endColumn":14},{"ruleId":"425","severity":1,"message":"426","line":3,"column":18,"nodeType":"427","messageId":"428","endLine":3,"endColumn":21},{"ruleId":"425","severity":1,"message":"429","line":3,"column":23,"nodeType":"427","messageId":"428","endLine":3,"endColumn":26},{"ruleId":"425","severity":1,"message":"539","line":2,"column":10,"nodeType":"427","messageId":"428","endLine":2,"endColumn":21},{"ruleId":"425","severity":1,"message":"540","line":4,"column":8,"nodeType":"427","messageId":"428","endLine":4,"endColumn":11},{"ruleId":"425","severity":1,"message":"541","line":5,"column":8,"nodeType":"427","messageId":"428","endLine":5,"endColumn":15},{"ruleId":"425","severity":1,"message":"542","line":6,"column":8,"nodeType":"427","messageId":"428","endLine":6,"endColumn":22},{"ruleId":"425","severity":1,"message":"543","line":19,"column":9,"nodeType":"427","messageId":"428","endLine":19,"endColumn":16},{"ruleId":"529","severity":1,"message":"544","line":22,"column":1,"nodeType":"531","endLine":72,"endColumn":2},{"ruleId":"529","severity":1,"message":"544","line":5,"column":1,"nodeType":"531","endLine":14,"endColumn":2},{"ruleId":"425","severity":1,"message":"505","line":1,"column":27,"nodeType":"427","messageId":"428","endLine":1,"endColumn":36},{"ruleId":"425","severity":1,"message":"545","line":9,"column":3,"nodeType":"427","messageId":"428","endLine":9,"endColumn":8},{"ruleId":"425","severity":1,"message":"546","line":12,"column":3,"nodeType":"427","messageId":"428","endLine":12,"endColumn":8},{"ruleId":"425","severity":1,"message":"547","line":22,"column":7,"nodeType":"427","messageId":"428","endLine":22,"endColumn":12},{"ruleId":"425","severity":1,"message":"548","line":28,"column":10,"nodeType":"427","messageId":"428","endLine":28,"endColumn":14},{"ruleId":"425","severity":1,"message":"549","line":39,"column":58,"nodeType":"427","messageId":"428","endLine":39,"endColumn":64},{"ruleId":"425","severity":1,"message":"538","line":2,"column":8,"nodeType":"427","messageId":"428","endLine":2,"endColumn":14},{"ruleId":"425","severity":1,"message":"426","line":3,"column":18,"nodeType":"427","messageId":"428","endLine":3,"endColumn":21},{"ruleId":"425","severity":1,"message":"429","line":3,"column":23,"nodeType":"427","messageId":"428","endLine":3,"endColumn":26},{"ruleId":"425","severity":1,"message":"550","line":7,"column":8,"nodeType":"427","messageId":"428","endLine":7,"endColumn":18},{"ruleId":"425","severity":1,"message":"551","line":6,"column":10,"nodeType":"427","messageId":"428","endLine":6,"endColumn":18},{"ruleId":"425","severity":1,"message":"552","line":11,"column":7,"nodeType":"427","messageId":"428","endLine":11,"endColumn":20},{"ruleId":"425","severity":1,"message":"553","line":4,"column":7,"nodeType":"427","messageId":"428","endLine":4,"endColumn":14},{"ruleId":"425","severity":1,"message":"552","line":5,"column":7,"nodeType":"427","messageId":"428","endLine":5,"endColumn":20},"no-native-reassign",["554"],"no-negated-in-lhs",["555"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'FundingGraph' is defined but never used.","no-dupe-class-members","Duplicate name 'componentDidMount'.","MethodDefinition","unexpected","'api' is assigned a value but never used.","'Layout' is defined but never used.","'Skeleton' is defined but never used.","'string' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'withStore' is defined but never used.","'Form' is defined but never used.","'useDropzone' is defined but never used.","'PlacesAutocomplete' is defined but never used.","'Map' is defined but never used.","'Marker' is defined but never used.","'baseStyle' is assigned a value but never used.","'activeStyle' is assigned a value but never used.","'acceptStyle' is assigned a value but never used.","'rejectStyle' is assigned a value but never used.","'thumbsContainer' is assigned a value but never used.","'thumb' is assigned a value but never used.","'thumbInner' is assigned a value but never used.","'img' is assigned a value but never used.","'impactManager' is assigned a value but never used.","'indicatorStrings' is assigned a value but never used.","'projects' is assigned a value but never used.","no-useless-constructor","Useless constructor.","noUselessConstructor","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Bar' is defined but never used.","'Line' is defined but never used.","'data' is defined but never used.","'Result' is defined but never used.","'indicator' is assigned a value but never used.","'dataArray' is assigned a value but never used.","'json' is assigned a value but never used.","'countObj' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'ExportOutlined' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Fragment' is defined but never used.","'PageHeader' is defined but never used.","'Button' is defined but never used.","'LogoutOutlined' is defined but never used.","'TEST_DISPATCH' is defined but never used.","'GET_INDICATORS' is defined but never used.","'config' is assigned a value but never used.","'count' is assigned a value but never used.","'TextField' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'MenuItem' is defined but never used.","'sdgDumping' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setSdgDumping'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.auth.data.accessToken] as a second argument to the useEffect Hook.",["556"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","'handleInputChange' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useMemo' is defined but never used.","'InputLabel' is defined but never used.","'GooglePlacesAutocomplete' is defined but never used.","'DropzoneArea' is defined but never used.","'ImpactManagerSummary' is defined but never used.","'geocodeByAddress' is defined but never used.","'getLatLng' is defined but never used.","'InboxOutlined' is defined but never used.","'Option' is assigned a value but never used.","'programmeLocation' is assigned a value but never used.","'image' is assigned a value but never used.","'programmePlaces' is assigned a value but never used.","'handleSelectChange' is assigned a value but never used.","'handleBannerChange' is assigned a value but never used.","'appHelpers' is defined but never used.","'ExpansionPanelDetails' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Autocomplete' is defined but never used.","'DataGrid' is defined but never used.","'sdgDump' is assigned a value but never used.","'allIndicators' is assigned a value but never used.","'sdgChecks' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'PropTypes' is defined but never used.","'Card' is defined but never used.","'Tabs' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","'textLogin' is assigned a value but never used.","'FormIO' is defined but never used.","'FormBuilder' is defined but never used.","'Fab' is defined but never used.","'AddIcon' is defined but never used.","'NavigationIcon' is defined but never used.","'classes' is assigned a value but never used.","Unexpected default export of anonymous function","'Radio' is defined but never used.","'Space' is defined but never used.","'areas' is assigned a value but never used.","'form' is assigned a value but never used.","'button' is assigned a value but never used.","'CreateForm' is defined but never used.","'Redirect' is defined but never used.","'MenuItemGroup' is assigned a value but never used.","'SubMenu' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"557","fix":"558"},"Add dependencies array: [props.auth.data.accessToken]",{"range":"559","text":"560"},[1733,1733],", [props.auth.data.accessToken]"]