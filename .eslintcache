[{"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\index.js":"1","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\history.js":"2","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\Constants.js":"3","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\configuration.js":"4","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\Services.js":"5","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\store.js":"6","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\hocs\\Layout.jsx":"7","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\appHelpers\\appHelpers.js":"8","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\App.js":"9","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Loader\\Loader.js":"10","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\Create\\CreateAccount.js":"11","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\Login\\Login.js":"12","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\404\\index.js":"13","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\reducers\\index.js":"14","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\ScrollToTop\\index.js":"15","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\hocs\\_Aux\\index.js":"16","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\Dashboard\\Dashboard.js":"17","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\Projects\\Projects.js":"18","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\Impact\\Manager.js":"19","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\ProjectOverview\\Overview.js":"20","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\FormManager\\FormManager.js":"21","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\utils\\setAuthToken.js":"22","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\FormBuilder\\FormBuild.js":"23","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\PublishedForm\\index.jsx":"24","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\CreateAcct\\Index.js":"25","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\reducers\\projectReducer.js":"26","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\reducers\\alertReducer.js":"27","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\reducers\\authReducer.js":"28","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\reducers\\formReducer.js":"29","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\reducers\\reportReducer.js":"30","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\LoginForm\\index.js":"31","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Loader\\CatalogMagic.js":"32","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\FormPreview\\index.jsx":"33","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\actions\\authAuctions.js":"34","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\actions\\projectAction.js":"35","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\constants\\app.constants.js":"36","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Card\\ImageCard.js":"37","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FormBuilder.js\\BuildForm.js":"38","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FormIO\\Index.js":"39","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FormIO\\CreateForm.js":"40","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FormIO\\constants.js":"41","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\actions\\alertActions.js":"42","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Alert\\index.js":"43","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\constants\\Types.js":"44","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\ImpactManager\\ImpactManager.jsx":"45","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\ActionCard\\index.js":"46","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\DoughnutChart\\index.js":"47","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\ImpactMap\\index.js":"48","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FundingGraph\\index.js":"49","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\IndicatorsCard\\index.js":"50","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\PerformanceIndicators\\index.js":"51","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\layouts\\layout-components\\menu\\index.js":"52","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\layouts\\layout-components\\sidebar\\index.js":"53","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\layouts\\layout-components\\footer\\index.js":"54","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\actions\\formActions.js":"55","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FormBuilder.js\\constants.js":"56","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\appHelpers\\constants.js":"57","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\PublishedForm\\index.jsx":"58","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\CustomButton\\CustomButton.js":"59","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\ImpactManager\\ImpactManagerSummary.jsx":"60","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\ImpactManager\\ImpactManagerForm3.jsx":"61","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\ImpactManager\\ImpactManagerForm1.jsx":"62","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\ImpactManager\\ImpactManagerForm2.jsx":"63","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\actions\\reportActions.js":"64","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Loader\\CustomCircularProgress.js":"65","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FundingGraph\\data.js":"66","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\layouts\\layout-components\\menu\\RightMenu.js":"67","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\layouts\\layout-components\\menu\\LeftMenu.js":"68","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\PublishedForm\\Summary.jsx":"69","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\PublishedForm\\Questions.jsx":"70","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FormPreview\\index.jsx":"71","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Space\\TopSpace.js":"72","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Indicators\\IndicatorView.jsx":"73","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\SvgCard\\SvgCard.jsx":"74","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\appHelpers\\Builder.jsx":"75","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FormPreview\\PreviewQuestions.jsx":"76","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Widgets\\ShortFreeText.jsx":"77","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Widgets\\RadioInput.jsx":"78","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Widgets\\Layout.jsx":"79","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FormPreview\\ProgrammeSummary.jsx":"80","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Upload\\ImageUpload.jsx":"81","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\SvgCard\\SvgCardView.jsx":"82"},{"size":1534,"mtime":1616518251020,"results":"83","hashOfConfig":"84"},{"size":116,"mtime":1616417696408,"results":"85","hashOfConfig":"84"},{"size":839,"mtime":1616518921934,"results":"86","hashOfConfig":"84"},{"size":102,"mtime":1616417696405,"results":"87","hashOfConfig":"84"},{"size":3652,"mtime":1616417696266,"results":"88","hashOfConfig":"84"},{"size":383,"mtime":1616417696436,"results":"89","hashOfConfig":"84"},{"size":2243,"mtime":1616417696402,"results":"90","hashOfConfig":"84"},{"size":7341,"mtime":1616417696283,"results":"91","hashOfConfig":"84"},{"size":6088,"mtime":1616417696262,"results":"92","hashOfConfig":"84"},{"size":291,"mtime":1616417696376,"results":"93","hashOfConfig":"84"},{"size":232,"mtime":1616417696442,"results":"94","hashOfConfig":"84"},{"size":253,"mtime":1616417696450,"results":"95","hashOfConfig":"84"},{"size":247,"mtime":1616417696441,"results":"96","hashOfConfig":"84"},{"size":303,"mtime":1616417696434,"results":"97","hashOfConfig":"84"},{"size":485,"mtime":1616417696388,"results":"98","hashOfConfig":"84"},{"size":61,"mtime":1616417696404,"results":"99","hashOfConfig":"84"},{"size":2788,"mtime":1616417696444,"results":"100","hashOfConfig":"84"},{"size":3865,"mtime":1616417696453,"results":"101","hashOfConfig":"84"},{"size":1363,"mtime":1616417696449,"results":"102","hashOfConfig":"84"},{"size":3539,"mtime":1616417696451,"results":"103","hashOfConfig":"84"},{"size":1228,"mtime":1616417696446,"results":"104","hashOfConfig":"84"},{"size":251,"mtime":1616417696439,"results":"105","hashOfConfig":"84"},{"size":1498,"mtime":1616417696446,"results":"106","hashOfConfig":"84"},{"size":933,"mtime":1616417696455,"results":"107","hashOfConfig":"84"},{"size":10380,"mtime":1616417696314,"results":"108","hashOfConfig":"84"},{"size":857,"mtime":1616417696435,"results":"109","hashOfConfig":"84"},{"size":375,"mtime":1616417696430,"results":"110","hashOfConfig":"84"},{"size":1815,"mtime":1616417696432,"results":"111","hashOfConfig":"84"},{"size":1219,"mtime":1616417696432,"results":"112","hashOfConfig":"84"},{"size":682,"mtime":1616417696436,"results":"113","hashOfConfig":"84"},{"size":7478,"mtime":1616417696380,"results":"114","hashOfConfig":"84"},{"size":554,"mtime":1616417696375,"results":"115","hashOfConfig":"84"},{"size":1107,"mtime":1616417696447,"results":"116","hashOfConfig":"84"},{"size":2317,"mtime":1616417696274,"results":"117","hashOfConfig":"84"},{"size":2149,"mtime":1616417696278,"results":"118","hashOfConfig":"84"},{"size":0,"mtime":1616417696407,"results":"119","hashOfConfig":"84"},{"size":2926,"mtime":1616417696310,"results":"120","hashOfConfig":"84"},{"size":19235,"mtime":1616417696320,"results":"121","hashOfConfig":"84"},{"size":222,"mtime":1616417696326,"results":"122","hashOfConfig":"84"},{"size":3213,"mtime":1616417696324,"results":"123","hashOfConfig":"84"},{"size":1900,"mtime":1616417696326,"results":"124","hashOfConfig":"84"},{"size":335,"mtime":1616417696272,"results":"125","hashOfConfig":"84"},{"size":605,"mtime":1616417696310,"results":"126","hashOfConfig":"84"},{"size":1548,"mtime":1616417696406,"results":"127","hashOfConfig":"84"},{"size":24142,"mtime":1616417696336,"results":"128","hashOfConfig":"84"},{"size":2067,"mtime":1616417696309,"results":"129","hashOfConfig":"84"},{"size":3045,"mtime":1616417696318,"results":"130","hashOfConfig":"84"},{"size":1883,"mtime":1616417696371,"results":"131","hashOfConfig":"84"},{"size":666,"mtime":1616417696333,"results":"132","hashOfConfig":"84"},{"size":2122,"mtime":1616417696374,"results":"133","hashOfConfig":"84"},{"size":3118,"mtime":1616417696383,"results":"134","hashOfConfig":"84"},{"size":1756,"mtime":1616417696427,"results":"135","hashOfConfig":"84"},{"size":2296,"mtime":1616417696429,"results":"136","hashOfConfig":"84"},{"size":268,"mtime":1616417696420,"results":"137","hashOfConfig":"84"},{"size":5322,"mtime":1616417696276,"results":"138","hashOfConfig":"84"},{"size":336,"mtime":1616417696321,"results":"139","hashOfConfig":"84"},{"size":74,"mtime":1616417696283,"results":"140","hashOfConfig":"84"},{"size":2271,"mtime":1616417696387,"results":"141","hashOfConfig":"84"},{"size":854,"mtime":1616417696315,"results":"142","hashOfConfig":"84"},{"size":6996,"mtime":1616417696339,"results":"143","hashOfConfig":"84"},{"size":4817,"mtime":1616417696339,"results":"144","hashOfConfig":"84"},{"size":10314,"mtime":1616417696337,"results":"145","hashOfConfig":"84"},{"size":3342,"mtime":1616417696338,"results":"146","hashOfConfig":"84"},{"size":1588,"mtime":1616417696280,"results":"147","hashOfConfig":"84"},{"size":274,"mtime":1616417696376,"results":"148","hashOfConfig":"84"},{"size":451,"mtime":1616417696332,"results":"149","hashOfConfig":"84"},{"size":2823,"mtime":1616417696425,"results":"150","hashOfConfig":"84"},{"size":348,"mtime":1616417696424,"results":"151","hashOfConfig":"84"},{"size":1256,"mtime":1616417696386,"results":"152","hashOfConfig":"84"},{"size":256,"mtime":1616417696386,"results":"153","hashOfConfig":"84"},{"size":2374,"mtime":1616417696330,"results":"154","hashOfConfig":"84"},{"size":171,"mtime":1616417696389,"results":"155","hashOfConfig":"84"},{"size":313,"mtime":1616417696372,"results":"156","hashOfConfig":"84"},{"size":564,"mtime":1616417696390,"results":"157","hashOfConfig":"84"},{"size":684,"mtime":1616417696281,"results":"158","hashOfConfig":"84"},{"size":281,"mtime":1616417696328,"results":"159","hashOfConfig":"84"},{"size":1079,"mtime":1616417696396,"results":"160","hashOfConfig":"84"},{"size":1214,"mtime":1616417696396,"results":"161","hashOfConfig":"84"},{"size":804,"mtime":1616417696395,"results":"162","hashOfConfig":"84"},{"size":1603,"mtime":1616417696329,"results":"163","hashOfConfig":"84"},{"size":1860,"mtime":1616417696393,"results":"164","hashOfConfig":"84"},{"size":474,"mtime":1616417696391,"results":"165","hashOfConfig":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"tjjqg4",{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"170"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"170"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"170"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"170"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"170"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"170"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"170"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"170"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"170"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"170"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"170"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"170"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"170"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"170"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"170"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"170"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"170"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"170"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"170"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"170"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"170"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"170"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"170"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"170"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"170"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"170"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"170"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"170"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"170"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"170"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"170"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"170"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"170"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"170"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"170"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"170"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"170"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"170"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"170"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"170"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"170"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"170"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"170"},"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\index.js",["374"],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\history.js",[],["375","376"],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\Constants.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\configuration.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\Services.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\store.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\hocs\\Layout.jsx",["377","378"],"import React, { Suspense } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport ScrollToTop from \"../ScrollToTop\";\r\nimport Aux from \"../hocs/_Aux\";\r\n\r\nimport App from \"../../App\";\r\nimport Login from \"../../views/Login/Login\";\r\nimport CreateAccount from \"../../views/Create/CreateAccount\";\r\nimport PublishedForm from \"../../views/PublishedForm\";\r\n\r\nimport NotFound from \"../../views/404/index\";\r\n\r\nexport class Layout extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <ScrollToTop>\r\n          <Suspense fallback={<Loader />}>\r\n            <Switch>\r\n              <Router>\r\n                {/* All unthenticated Routes will go here */}\r\n                {/* login, reset-password, update-password */}\r\n                <Route\r\n                  exact\r\n                  path=\"/app/form/:id\"\r\n                  render={(props) => <PublishedForm {...this.props} />}\r\n                />\r\n\r\n                <Route\r\n                  path={\"/\"}\r\n                  exact\r\n                  render={(props) => <Login {...this.props} />}\r\n                />\r\n\r\n                <Route\r\n                  path={\"/login\"}\r\n                  exact\r\n                  render={(props) => <Login {...this.props} />}\r\n                />\r\n\r\n                <Route\r\n                  path={\"/signup\"}\r\n                  exact\r\n                  render={(props) => <CreateAccount {...this.props} />}\r\n                />\r\n\r\n                {/* This layout with house a layout containing all authenticated routes */}\r\n                <Route\r\n                  path=\"/app\"\r\n                  render={(props) => <App {...this.props} {...props} />}\r\n                />\r\n              </Router>\r\n              {/* <Route component={NotFound} /> */}\r\n            </Switch>\r\n          </Suspense>\r\n        </ScrollToTop>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\nconst initialValue = {\r\n  userData: {\r\n    firstname: \"John\",\r\n  },\r\n  impactManager: {\r\n    name: \"\",\r\n    description: \"\",\r\n    code: \"\",\r\n    projectLocation: \"\",\r\n    sdgs: [],\r\n    indicators: [],\r\n  },\r\n};\r\n\r\nexport default Layout;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\appHelpers\\appHelpers.js",["379","380","381","382","383","384","385","386","387","388","389","390"],"import swal from \"sweetalert2\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const appHelpers = {\r\n  returnLabelsforDonut: (arr) => {\r\n    let label = [];\r\n    for (let i in arr) {\r\n      label.push(arr[i][0]);\r\n    }\r\n    return label;\r\n  },\r\n  alertError: (message, duration) => {\r\n    toast.error(message, {\r\n      position: toast.POSITION.TOP_CENTER,\r\n      autoClose: duration,\r\n    });\r\n  },\r\n  toCapitalLetters: (value) => {\r\n    if (typeof value === \"string\") {\r\n      return value.toLocaleUpperCase();\r\n    }\r\n  },\r\n  formatLargeNumbers: (x) => {\r\n    if (isNaN(x)) return x;\r\n\r\n    if (x < 9999) {\r\n      return x;\r\n    }\r\n\r\n    if (x < 1000000) {\r\n      return Math.round(x / 1000) + \"K\";\r\n    }\r\n    if (x < 10000000) {\r\n      return (x / 1000000).toFixed(2) + \"M\";\r\n    }\r\n\r\n    if (x < 1000000000) {\r\n      return Math.round(x / 1000000) + \"M\";\r\n    }\r\n\r\n    if (x < 1000000000000) {\r\n      return Math.round(x / 1000000000) + \"B\";\r\n    }\r\n\r\n    return \"1T+\";\r\n  },\r\n\r\n  returnIndicatorsOnly : (indicators)=>{\r\n    let ind =[]\r\n    let f = indicators.filter((o) => o.status === true)\r\n    for(let i in f){\r\n      ind.push(parseInt(f[i].id))\r\n    }\r\n    return ind;\r\n  },\r\n  countProjectIndicators : (sdgs) =>{\r\n    let projectIndicators = [];\r\n    for(let i in sdgs){\r\n      const indicators = sdgs[i].indicators\r\n      projectIndicators.push(indicators)\r\n    }\r\n    return projectIndicators.length\r\n  },\r\n  formatSdgsIndicatorsPayload : (finalSdgChecks) =>{\r\n    let sdgs = []\r\n    for(let i in finalSdgChecks){\r\n      sdgs.push({\r\n        indicators:finalSdgChecks[i].indicators,\r\n        id:finalSdgChecks[i].id\r\n      })\r\n    }\r\n    return sdgs\r\n  },\r\n  returnSelectedSdgs: (sdgCheckBoxes, sdgDump) => {\r\n    Object.entries(sdgCheckBoxes).forEach(([key, value]) => {\r\n      if (value === false) {\r\n        delete sdgCheckBoxes[key];\r\n      }\r\n    });\r\n    return Object.keys(sdgCheckBoxes).map((id) =>\r\n      sdgDump.find((sdg) => sdg.id === id)\r\n    );\r\n  },\r\n\r\n  addDots: (value) => {\r\n    let valueCopy = value.substring(0, 20);\r\n    if (value.length > 15) return (valueCopy += \"...\");\r\n    else return value;\r\n  },\r\n\r\n  returnIndicators: (sdgCheckBoxes, sdgDump) => {\r\n    const filtered = appHelpers.returnSelectedSdgs(sdgCheckBoxes, sdgDump);\r\n    const returnedIndicators = [];\r\n    filtered.map((filteredItem, index) => {\r\n      filteredItem.indicators.map((item, index) => {\r\n        returnedIndicators.push({\r\n          value: item.description,\r\n          status: false,\r\n          sdgId: filteredItem.id,\r\n        });\r\n      });\r\n    });\r\n    //console.log(\"asjaskj\",filtered)\r\n    return returnedIndicators;\r\n  },\r\n\r\n  indicatorSummary: (sdgChecks) => {\r\n    const returnedIndicators = [];\r\n\r\n    sdgChecks.map((item, index) => {\r\n      item.indicators.map((indicator, indicatorIndex) => {\r\n        if (indicator.status === true) {\r\n          returnedIndicators.push({\r\n            description: indicator.description,\r\n            SdgId: item.id,\r\n          });\r\n        }\r\n      });\r\n    });\r\n    return returnedIndicators;\r\n  },\r\n\r\n  formatApiMapData: (apiGeoData) => {\r\n    const returnedLocations = [];\r\n    let count = 0;\r\n\r\n    apiGeoData.map((geolocation, geolocationIndex) => {\r\n      returnedLocations.push({\r\n        id: count++,\r\n        shelter: geolocation.Area,\r\n        latitude: parseFloat(geolocation.Latitude),\r\n        longitude: parseFloat(geolocation.Longitude),\r\n      });\r\n    });\r\n    return returnedLocations;\r\n  },\r\n  formatMapData: (dashboardData) => {\r\n    const returnedLocations = [];\r\n    let count = 0;\r\n\r\n    dashboardData.map((item, index) => {\r\n      item.GeoLocations.map((geolocation, geolocationIndex) => {\r\n        returnedLocations.push({\r\n          id: count++,\r\n          latitude: parseFloat(geolocation.Latitude),\r\n          longitude: parseFloat(geolocation.Longitude),\r\n        });\r\n      });\r\n    });\r\n    return returnedLocations;\r\n  },\r\n\r\n  returnApiMapDefaultCenter: (apiGeoData) => {\r\n    const defautlCenter = [];\r\n    let count = 0;\r\n\r\n    apiGeoData.map((geolocation, geolocationIndex) => {\r\n      defautlCenter.push({\r\n        lat: parseFloat(geolocation.Latitude),\r\n        lng: parseFloat(geolocation.Longitude),\r\n      });\r\n    });\r\n    return defautlCenter[0];\r\n  },\r\n\r\n  returnMapDefaultCenter: (dashboardData) => {\r\n    const defautlCenter = [];\r\n    let count = 0;\r\n\r\n    dashboardData.map((item, index) => {\r\n      item.GeoLocations.map((geolocation, geolocationIndex) => {\r\n        defautlCenter.push({\r\n          lat: parseFloat(geolocation.Latitude),\r\n          lng: parseFloat(geolocation.Longitude),\r\n        });\r\n      });\r\n    });\r\n    return defautlCenter[0];\r\n  },\r\n\r\n  containsObject: (obj, list) => {\r\n    var i;\r\n    for (i = 0; i < list.length; i++) {\r\n      if (list[i].id === obj.id) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  },\r\n\r\n  filterSdgById: (id, allIndicators) => {\r\n    let filtered = allIndicators.filter((item) => {\r\n      return item.sdgId === id;\r\n    });\r\n    return filtered;\r\n  },\r\n  returnSdgNameById: (id, sdgDump) => {\r\n    let filtered = sdgDump.filter((item) => {\r\n      return item.id === id;\r\n    });\r\n    const filteredObj = Object.assign({}, ...filtered);\r\n    return filteredObj.description;\r\n  },\r\n  setIndicatorCheckBoxes: (indicators, index) => {\r\n    let isTrue = false;\r\n    Object.keys(indicators).forEach(function (key) {\r\n      isTrue = key === index ? true : false;\r\n    });\r\n    return isTrue;\r\n  },\r\n  validateImpactFormOne: (context) => {\r\n    let _errs_ = {};\r\n    let formValid = true;\r\n    if (context.state.name === \"\") {\r\n      _errs_[\"name\"] = true;\r\n      formValid = false;\r\n    }\r\n    if (context.state.code === \"\") {\r\n      _errs_[\"code\"] = true;\r\n      formValid = false;\r\n    }\r\n    if (context.state.description === \"\") {\r\n      _errs_[\"description\"] = true;\r\n      formValid = false;\r\n    }\r\n    if (context.state.projectLocation === \"\") {\r\n      _errs_[\"projectLocation\"] = true;\r\n      formValid = false;\r\n    }\r\n\r\n    context.setState({ formOneErrors: _errs_ });\r\n    return formValid;\r\n  },\r\n\r\n  validateImpactFormTwo: (context) => {\r\n    let _errs_ = {};\r\n    let formValid = true;\r\n    if (Object.keys(context.state.sdgCheckBoxes).length === 0) {\r\n      _errs_[\"sdg\"] = true;\r\n      formValid = false;\r\n    }\r\n    context.setState({ formTwoErrors: _errs_ });\r\n    return formValid;\r\n  },\r\n  validateImpactFormThree: (context) => {\r\n    let _errs_ = {};\r\n    let formValid = true;\r\n    if (Object.keys(context.state.indicatorCheckBoxes).length === 0) {\r\n      _errs_[\"indicator\"] = true;\r\n      formValid = false;\r\n    }\r\n    context.setState({ formThreeErrors: _errs_ });\r\n    return formValid;\r\n  },\r\n\r\n  failedRequestAlert: (message, timer = 2000) => {\r\n    swal.fire({\r\n      titleText: \"Sorry!\",\r\n      text: message,\r\n      icon: \"error\",\r\n      timer: timer,\r\n      showConfirmButton: true,\r\n    });\r\n  },\r\n\r\n  canceledRequestAlert: (message, timer = 2000) => {\r\n    swal.fire({\r\n      titleText: \"Too bad\",\r\n      text: message,\r\n      icon: \"error\",\r\n      timer: timer,\r\n      showConfirmButton: true,\r\n    });\r\n  },\r\n\r\n  successMessageAlert: (message, timer = 2000) => {\r\n    swal.fire({\r\n      titleText: \"Success!\",\r\n      text: message,\r\n      icon: \"success\",\r\n      timer: timer,\r\n      showConfirmButton: true,\r\n    });\r\n  },\r\n};\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\App.js",["391","392","393","394","395","396"],"import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"./views/Dashboard/Dashboard\";\r\nimport Projects from \"./views/Projects/Projects\";\r\nimport Overview from \"./views/ProjectOverview/Overview\";\r\nimport Manager from \"./views/Impact/Manager\";\r\nimport Login from \"./views/Login/Login\";\r\nimport setAuthToken from \"../src/utils/setAuthToken\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport CreateAccount from \"./views/Create/CreateAccount\";\r\nimport FormManager from \"./views/FormManager/FormManager\";\r\nimport FormBuild from \"./views/FormBuilder/FormBuild\";\r\nimport { appHelpers } from \"./appHelpers/appHelpers\";\r\nimport FormPreview from \"./views/FormPreview\";\r\nimport PublishedForm from \"./views/PublishedForm\";\r\nimport NotFound from \"./views/404/index.js\";\r\n\r\n// if (localStorage.token) {\r\n//   setAuthToken(localStorage.token);\r\n//   console.log(localStorage.token)\r\n// }\r\n\r\nexport class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      token: \"\",\r\n      ServiceBase: null,\r\n      userData: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let token = JSON.parse(localStorage.getItem(\"TRAIL_TOKEN\"));\r\n    let user = JSON.parse(localStorage.getItem(\"TRAIL_USER\"));\r\n    if (token !== null && user !== null) {\r\n      const AUTH_TOKEN = `${token}`;\r\n      // the token in LocalStorage was set on Login\r\n      this.setState({ token: AUTH_TOKEN, userData: user }, () => {\r\n        this.setState({\r\n          ServiceBase: this.props.Service(this.state.token, this.props.history),\r\n        });\r\n        this.setState({ sending: false });\r\n      });\r\n    } else {\r\n      appHelpers.alertError(\"Invalid session, login again.\");\r\n      this.props.history.push(\"/\");\r\n    }\r\n\r\n    // api call would be made to get detailed user information then the user state would be set and cascaded to all wrapper.\r\n  }\r\n  render() {\r\n    const { ServiceBase, sending, userData } = this.state;\r\n    return (\r\n      <Provider store={store}>\r\n        {ServiceBase !== null && sending === false && userData !== null && (\r\n          <Switch>\r\n            {/* <Route exact path=\"/\" component={Login} /> */}\r\n            {/* <Route exact path=\"/create\" component={CreateAccount} /> */}\r\n            {/* <Route exact path=\"/app/dashboard\" component={Dashboard} /> */}\r\n            <Route\r\n              exact\r\n              path=\"/app/dashboard\"\r\n              render={(props) => (\r\n                <Dashboard\r\n                  {...props}\r\n                  {...this.state}\r\n                  userData={userData}\r\n                  {...this.props}\r\n                  ServiceBase={ServiceBase}\r\n                  Constants={this.props.Constants}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Route\r\n              path=\"/app/dashboard/projects\"\r\n              exact\r\n              render={(props) => (\r\n                <Projects\r\n                  {...props}\r\n                  {...this.state}\r\n                  userData={userData}\r\n                  {...this.props}\r\n                  ServiceBase={ServiceBase}\r\n                  Constants={this.props.Constants}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/app/dashboard/overview\"\r\n              exact\r\n              render={(props) => (\r\n                <Overview\r\n                  {...props}\r\n                  {...this.state}\r\n                  userData={userData}\r\n                  {...this.props}\r\n                  ServiceBase={ServiceBase}\r\n                  Constants={this.props.Constants}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/app/dashboard/manager\"\r\n              render={(props) => (\r\n                <Manager\r\n                  {...props}\r\n                  {...this.state}\r\n                  userData={userData}\r\n                  {...this.props}\r\n                  ServiceBase={ServiceBase}\r\n                  Constants={this.props.Constants}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/app/dashboard/form\"\r\n              render={(props) => (\r\n                <FormManager\r\n                  {...props}\r\n                  {...this.state}\r\n                  userData={userData}\r\n                  {...this.props}\r\n                  ServiceBase={ServiceBase}\r\n                  Constants={this.props.Constants}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/app/dashboard/build_form\"\r\n              render={(props) => (\r\n                <FormBuild\r\n                  {...props}\r\n                  {...this.state}\r\n                  userData={userData}\r\n                  {...this.props}\r\n                  ServiceBase={ServiceBase}\r\n                  Constants={this.props.Constants}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/app/dashboard/build_form/:id\"\r\n              render={(props) => (\r\n                <FormBuild\r\n                  {...props}\r\n                  {...this.state}\r\n                  userData={userData}\r\n                  {...this.props}\r\n                  ServiceBase={ServiceBase}\r\n                  Constants={this.props.Constants}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/app/dashboard/form/preview/:id\"\r\n              render={(props) => (\r\n                <FormPreview\r\n                  {...props}\r\n                  {...this.state}\r\n                  userData={userData}\r\n                  {...this.props}\r\n                  ServiceBase={ServiceBase}\r\n                  Constants={this.props.Constants}\r\n                />\r\n              )}\r\n            />\r\n            {/* <Route component={NotFound} /> */}\r\n          </Switch>\r\n        )}\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Loader\\Loader.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\Create\\CreateAccount.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\Login\\Login.js",["397","398"],"import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport LoginForm from \"../../../src/components/LoginForm\";\r\n\r\nconst Login = (props) => {\r\n  return (\r\n    <div>\r\n      <LoginForm {...props}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\404\\index.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\reducers\\index.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\ScrollToTop\\index.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\hocs\\_Aux\\index.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\Dashboard\\Dashboard.js",["399","400","401","402","403","404"],"import React, { Component, Fragment, useEffect } from \"react\";\r\nimport { Layout, Row, Col } from \"antd\";\r\nimport Navbar from \"../../../src/layouts/layout-components/menu\";\r\nimport SideBar from \"../../../src/layouts/layout-components/sidebar\";\r\nimport FooterTab from \"../../../src/layouts/layout-components/footer\";\r\nimport ActionCard from \"../../../src/components/ActionCard\";\r\nimport ImpactMap from \"../../../src/components/ImpactMap\";\r\nimport FundingGraph from \"../../../src/components/FundingGraph\";\r\nimport DoughnutChart from \"../../../src/components/DoughnutChart\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getPrograms } from \"../../actions/projectAction\";\r\nimport { loadUser } from \"../../actions/authAuctions\";\r\nimport axios from \"axios\";\r\n\r\nconst { Content } = Layout;\r\n\r\nexport const Dashboard = (props) => {\r\n  // data = this.props\r\n  // componentDidMount() {\r\n\r\n  // }\r\n\r\n  // componentDidMount() {\r\n  //   console.log(\"props in dashboard\", this.props);\r\n  //   const { ServiceBase, Constants } = this.props;\r\n  // getPrograms(this.props.auth.data.accessToken, ServiceBase, Constants);\r\n  // }\r\n\r\n  const { token } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const { ServiceBase, Constants } = props;\r\n    dispatch(getPrograms(token));\r\n  }, [token, dispatch]);\r\n\r\n  const { userData, history, ServiceBase } = props;\r\n\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        <Layout\r\n          style={{\r\n            minHeight: \"100vh\",\r\n          }}\r\n        >\r\n          <SideBar userData={userData} history={history} />\r\n          <Layout className=\"site-layout\">\r\n            <Navbar {...props} userData={userData} history={history} />\r\n            <Content style={{ margin: \"0 16px\" }}>\r\n              <h1 style={h1}>Dashboard</h1>\r\n              <ActionCard ServiceBase={ServiceBase} />\r\n              <div>\r\n                <Row>\r\n                  <Col xs={{ span: 24 }} lg={{ span: 14 }}>\r\n                    <ImpactMap />\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} lg={{ span: 10 }}>\r\n                    <DoughnutChart />\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n            <FooterTab />\r\n          </Layout>\r\n        </Layout>\r\n      </Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  loadUser: PropTypes.func.isRequired,\r\n  getPrograms: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadUser, getPrograms })(Dashboard);\r\n\r\nconst h1 = {\r\n  fontWeight: \"700\",\r\n  fontSize: \"23px\",\r\n  padding: \"16px\",\r\n  paddingLeft: \"0px\",\r\n  marginTop: \"80px\",\r\n};\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\Projects\\Projects.js",["405","406","407","408"],"import React, { Component, Fragment } from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport Navbar from \"../../../src/layouts/layout-components/menu\";\r\nimport SideBar from \"../../../src/layouts/layout-components/sidebar\";\r\nimport FooterTab from \"../../../src/layouts/layout-components/footer\";\r\n// import ProjectsCard from \"../../components/ProjectsCard/index.js\";\r\nimport { Grid, Paper, withStyles } from \"@material-ui/core\";\r\nimport ImageCard from \"../../components/Card/ImageCard\";\r\nimport axios from \"axios\";\r\nimport { appConstants } from \"../../constants/app.constants\";\r\nimport { connect } from \"react-redux\";\r\nimport CatalogMagic from \"../../components/Loader/CatalogMagic\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./index.css\"\r\nconst { Content } = Layout;\r\n\r\nconst styles = theme => ({\r\n\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n});\r\nexport class Projects extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projects: [],\r\n      loading: true\r\n    }\r\n  }\r\n\r\n\r\n\r\n  componentDidMount = () => {\r\n\r\n    const {ServiceBase, Constants} = this.props;\r\n    ServiceBase.getItems(Constants.PROGRAMS)\r\n      .then(({ data }) => {\r\n        this.setState({ projects: data.data }, () => {\r\n          this.setState({ loading: false })\r\n        })\r\n      })\r\n  }\r\n\r\n\r\n  renderProjectList = (projects) => {\r\n    let projectElem = []\r\n    for (let i in projects) {\r\n      projectElem.push(\r\n        <Grid item xs={12} sm={4} key={projects[i].id}>\r\n          <ImageCard\r\n            name={projects[i].name}\r\n            code={projects[i].code}\r\n            handleOverview={this.handleOverview}\r\n            id={projects[i].id}\r\n            image={projects[i].image}\r\n            sdgs={projects[i].sdgs}\r\n          />\r\n        </Grid>\r\n      )\r\n    }\r\n    return projectElem\r\n  }\r\n\r\n  handleOverview = (id,name) => {\r\n    this.props.history.push({\r\n      pathname: '/app/dashboard/overview',\r\n      state: { detail: id ,name:name }\r\n    })\r\n  }\r\n  render() {\r\n\r\n\r\n    const { classes } = this.props;\r\n    const { projects, loading } = this.state;\r\n    return (\r\n      <div>\r\n        <Fragment>\r\n          <Layout style={{ minHeight: \"100vh\" }}>\r\n            <SideBar userData={this.props.userData} history={this.props.history}/>\r\n            <Layout className=\"site-layout\">\r\n              <Navbar userData={this.props.userData} history={this.props.history}/>\r\n              <Content style={{ margin: \"0 16px\" }}>\r\n                <h1 style={h1}>Program</h1>\r\n                {!loading && projects.length === 0&&\r\n                  <div>\r\n                  <h3>\r\n                    When you add new projects, It would appear here!,{\" \"}\r\n                    <Link to=\"/app/dashboard/manager\">Click to add</Link>{\" \"}\r\n                  </h3>\r\n                </div>\r\n                }\r\n                <Grid container spacing={3}>\r\n                  {loading &&\r\n                    [0, 1, 2, 3, 4, 5].map((index) => {\r\n                      return (\r\n                        <Grid item xs={12} sm={4} key={index}>\r\n                          <CatalogMagic />\r\n                        </Grid>\r\n                      )\r\n                    })\r\n\r\n                  }\r\n                  {!loading && this.renderProjectList(projects)}\r\n\r\n\r\n                </Grid>\r\n              </Content>\r\n              <FooterTab />\r\n            </Layout>\r\n          </Layout>\r\n        </Fragment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\n// export default connect(mapStateToProps, {})(ProjectsCard);\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, {})(Projects))\r\n\r\n\r\nconst h1 = {\r\n  fontWeight: \"700\",\r\n  fontSize: \"23px\",\r\n  padding: \"16px\",\r\n  paddingLeft: \"0px\",\r\n  marginTop: \"80px\",\r\n};\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\Impact\\Manager.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\ProjectOverview\\Overview.js",["409","410","411","412"],"import React, { Component, Fragment } from \"react\";\r\nimport { Layout, Row, Col } from \"antd\";\r\n\r\nimport Navbar from \"../../../src/layouts/layout-components/menu\";\r\nimport SideBar from \"../../../src/layouts/layout-components/sidebar\";\r\nimport FooterTab from \"../../../src/layouts/layout-components/footer\";\r\nimport IndicatorsCard from \"../../components/IndicatorsCard\";\r\nimport Indicators from \"../../components/PerformanceIndicators\";\r\nimport axios from \"axios\";\r\nimport { appConstants } from \"../../constants/app.constants\";\r\nimport { connect } from \"react-redux\";\r\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\r\nconst { Content } = Layout;\r\n\r\nexport class Overview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projectDetails: {},\r\n      projectName: \"\",\r\n      loading: true,\r\n      projectId: null\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const { ServiceBase, Constants } = this.props;\r\n    if (\r\n      this.props.location &&\r\n      this.props.location.state &&\r\n      this.props.location.state.detail\r\n    ) {\r\n      console.log(this.props.location)\r\n      const { detail, name } = this.props.location.state;\r\n      this.setState({ projectName: name, projectId: detail });\r\n      ServiceBase &&\r\n        ServiceBase.getDataUsingId(Constants.PROGRAMS, detail).then(\r\n          ({ data }) => {\r\n            this.setState({ projectDetails: data.data }, () => {\r\n              this.setState({ loading: false });\r\n            });\r\n          }\r\n        );\r\n    } else {\r\n      this.props.history.push(\"/dashboard/projects\");\r\n    }\r\n  };\r\n  render() {\r\n    const { projectDetails, projectName, loading, projectId } = this.state;\r\n    return (\r\n      <div>\r\n        <Fragment>\r\n          <Layout style={{ minHeight: \"100vh\" }}>\r\n            <SideBar\r\n              userData={this.props.userData}\r\n              history={this.props.history}\r\n            />\r\n            <Layout className=\"site-layout\">\r\n              <Navbar\r\n                userData={this.props.userData}\r\n                history={this.props.history}\r\n              />\r\n              <Content style={{ margin: \"0 16px\" }}>\r\n                <h1 style={h1}>{projectName}</h1>\r\n                <div>\r\n                  <IndicatorsCard\r\n                    sdgCount={projectDetails.sdgs && projectDetails.sdgs.length}\r\n                    indicatorCount={appHelpers.countProjectIndicators(\r\n                      projectDetails.sdgs && projectDetails.sdgs\r\n                    )}\r\n                    loading={loading}\r\n                    totalNumberOfBeneficiaries={\r\n                      projectDetails.totalNumberOfBeneficiaries\r\n                    }\r\n                    budget={projectDetails.budget}\r\n                  />\r\n                </div>\r\n                <div\r\n                  className=\"site-layout-background\"\r\n                  style={{ padding: 24, minHeight: 360 }}\r\n                >\r\n                  <div>\r\n                    <Indicators projectDetails={projectDetails} programId={projectId} service={this.props.ServiceBase} />\r\n                  </div>\r\n                </div>\r\n              </Content>\r\n              <FooterTab />\r\n            </Layout>\r\n          </Layout>\r\n        </Fragment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Overview);\r\n\r\nconst h1 = {\r\n  fontWeight: \"700\",\r\n  fontSize: \"23px\",\r\n  padding: \"16px\",\r\n  paddingLeft: \"0px\",\r\n  marginTop: \"80px\",\r\n};\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\FormManager\\FormManager.js",["413","414","415"],"import React, { Fragment } from \"react\";\r\nimport FormIO from \"../../components/FormIO/Index\";\r\nimport { Layout, Row, Col } from \"antd\";\r\n\r\nimport Navbar from \"../../../src/layouts/layout-components/menu\";\r\nimport SideBar from \"../../../src/layouts/layout-components/sidebar\";\r\nimport FooterTab from \"../../../src/layouts/layout-components/footer\";\r\nimport CreateForm from \"../../components/FormIO/CreateForm\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst FormManager = (props) => {\r\n  const {userData,history, ServiceBase} = props\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        <Layout style={{ minHeight: \"100vh\" }}>\r\n          <SideBar userData={userData} history={history}/>\r\n          <Layout className=\"site-layout\">\r\n            <Navbar userData={userData} history={history}/>\r\n            <Content style={{ margin: \"0 16px\" }}>\r\n              <h1 style={h1}>Form Management</h1>\r\n              <CreateForm service={ServiceBase} />\r\n            </Content>\r\n            <FooterTab />\r\n          </Layout>\r\n        </Layout>\r\n      </Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormManager;\r\n\r\nconst h1 = {\r\n  fontWeight: \"700\",\r\n  fontSize: \"23px\",\r\n  padding: \"16px\",\r\n  paddingLeft: \"0px\",\r\n  marginTop: \"80px\",\r\n};\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\utils\\setAuthToken.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\FormBuilder\\FormBuild.js",["416","417","418","419","420"],"import React, { Fragment } from \"react\";\r\nimport FormIO from \"../../components/FormIO/Index\";\r\nimport { Layout, Row, Col } from \"antd\";\r\nimport Navbar from \"../../../src/layouts/layout-components/menu\";\r\nimport SideBar from \"../../../src/layouts/layout-components/sidebar\";\r\nimport FooterTab from \"../../../src/layouts/layout-components/footer\";\r\nimport CreateForm from \"../../components/FormIO/CreateForm\";\r\nimport BuildForm from \"../../components/FormBuilder.js/BuildForm\";\r\n\r\nconst { Content } = Layout;\r\n\r\nclass FormBuild extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fragment>\r\n          <Layout style={{ minHeight: \"100vh\" }}>\r\n            <SideBar\r\n              userData={this.props.userData}\r\n              history={this.props.history}\r\n            />\r\n            <Layout className=\"site-layout\">\r\n              <Navbar\r\n                userData={this.props.userData}\r\n                history={this.props.history}\r\n              />\r\n              <Content style={{ margin: \"0 16px\" }}>\r\n                <h1 style={h1}>Form Management</h1>\r\n                <BuildForm service={this.props.ServiceBase} />\r\n              </Content>\r\n              <FooterTab />\r\n            </Layout>\r\n          </Layout>\r\n        </Fragment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FormBuild;\r\n\r\nconst h1 = {\r\n  fontWeight: \"700\",\r\n  fontSize: \"23px\",\r\n  padding: \"16px\",\r\n  paddingLeft: \"0px\",\r\n  marginTop: \"80px\",\r\n};\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\PublishedForm\\index.jsx",["421","422","423","424","425"],"import Layout, { Content } from 'antd/lib/layout/layout'\r\nimport React from 'react'\r\nimport FooterTab from '../../layouts/layout-components/footer'\r\nimport Navbar from '../../layouts/layout-components/menu'\r\nimport SideBar from '../../layouts/layout-components/sidebar'\r\nimport PublishedSection from '../../components/PublishedForm'\r\nimport { dummyForms } from '../../components/FormIO/constants'\r\nimport { startCase } from 'lodash'\r\n\r\nconst PublishedForm = (props) => {\r\n  console.log(props)\r\n    return (\r\n        <Layout style={{ minHeight: \"100vh\" }}>\r\n            <Content className=\"published-section-container\">\r\n              <PublishedSection service={props.Service(null,null)} />\r\n            </Content>\r\n            <FooterTab />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst h1 = {\r\n  fontWeight: \"700\",\r\n  fontSize: \"23px\",\r\n  padding: \"16px\",\r\n  paddingLeft: \"0px\",\r\n  marginTop: \"80px\",\r\n};\r\n\r\n\r\nexport default PublishedForm\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\CreateAcct\\Index.js",["426","427","428"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Index.css\";\r\nimport { Form, Input, Button, Row, Col, Card, Checkbox, Tabs } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoginImg from \"../../assets/graphic_login.svg\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { setAlert } from \"../../actions/alertActions\";\r\nimport { register, clearErrors } from \"../../actions/authAuctions\";\r\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\r\nimport { Redirect } from \"react-router\";\r\nimport AlertInfo from \"../Alert/index\";\r\n\r\n/* eslint-disable */\r\nconst regEx = new RegExp(\r\n  /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[^\\w\\s]).{8,}$/\r\n);\r\n\r\nconst CreateAcct = (\r\n  {\r\n    setAlert,\r\n    error,\r\n    register,\r\n    isAuthenticated,\r\n    clearErrors,\r\n    registerSuccess,\r\n    Service,\r\n    Constants,\r\n  },\r\n  props\r\n) => {\r\n  useEffect(() => {\r\n    console.log(\"props in login\", Service, { Constants });\r\n\r\n    if (error === \"A user with this email already exists\") {\r\n      setAlert(error, \"error\");\r\n      clearErrors();\r\n    } //eslint-disable-next-line\r\n  }, [error, isAuthenticated, props.history]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { firstName, lastName, email, password, password2 } = formData;\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const onFinish = async () => {\r\n    if (firstName === \"\" || lastName === \"\" || email === \"\") {\r\n      setAlert(\"Please enter all fields\", \"error\");\r\n    } else if (password.length < 8) {\r\n      setAlert(\"Password must be more than 8 characters\", \"warning\");\r\n    } else if (password != password2) {\r\n      setAlert(\"Check if passwords are equal\", \"warning\");\r\n    } else if (regEx.test(password) == false) {\r\n      setAlert(\r\n        \"Passwords must contain at least 1 Capital letter, 1 small letter and a special character\",\r\n        \"warning\"\r\n      );\r\n    } else {\r\n      const ServiceBase = Service(null, null);\r\n      register(\r\n        { firstName, lastName, email, password },\r\n        ServiceBase,\r\n        Constants\r\n      );\r\n    }\r\n  };\r\n\r\n  if (registerSuccess) {\r\n    appHelpers.successMessageAlert(\"Succesfully Registered, Login here\", 2000);\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"loginAltBg\" style={{ backgroundColor: \"#064E89\" }}>\r\n        <Row>\r\n          <Col xs={{ span: 0 }} lg={{ span: 10 }} className=\"login_container\">\r\n            <div className=\"left_container\">\r\n              <div>\r\n                {\" \"}\r\n                <h3\r\n                  className=\"loginH3\"\r\n                  style={{ color: \"#064E89\", textAlign: \"left\" }}\r\n                >\r\n                  Track your objectives using Trail.\r\n                </h3>\r\n                <p className=\"loginP\">\r\n                  Access to the most powerfull tool that allows you track your\r\n                  Objectives and Goals.{\" \"}\r\n                </p>\r\n              </div>\r\n              <img src={LoginImg} width=\"350px\" className=\"loginImg\" />\r\n            </div>\r\n          </Col>\r\n          <Col xs={{ span: 20 }} lg={{ span: 14 }} className=\"logins_container\">\r\n            <div className=\"right_container\">\r\n              <div className=\"logo\"></div>\r\n              <div className=\"cardWrap\">\r\n                <div>\r\n                  <Link to=\"/login\">\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"400\",\r\n                        color: \"#5183AD\",\r\n                        paddingBottom: \"10px\",\r\n                        marginRight: \"20px\",\r\n                        borderBottom: \"2px solid #5183AD\",\r\n                        marginBottom: \"30px\",\r\n                      }}\r\n                    >\r\n                      Login\r\n                    </span>\r\n                  </Link>\r\n                  <Link to=\"/signup\">\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"16px\",\r\n                        fontWeight: \"900\",\r\n                        color: \"#fff\",\r\n                        paddingBottom: \"10px\",\r\n                        marginRight: \"20px\",\r\n                        borderBottom: \"2px solid white\",\r\n                        marginBottom: \"30px\",\r\n                      }}\r\n                    >\r\n                      Register\r\n                    </span>\r\n                  </Link>\r\n                </div>\r\n                <div>\r\n                  <AlertInfo />\r\n                  <br />\r\n                  <Form\r\n                    name=\"normal_login\"\r\n                    className=\"login-form\"\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={onFinish}\r\n                  >\r\n                    <Form.Item\r\n                      name=\"firstName\"\r\n                      rules={[\r\n                        { required: true, message: \"This field is compulsory\" },\r\n                      ]}\r\n                      style={{ marginBottom: \"15px\" }}\r\n                    >\r\n                      <Input\r\n                        style={{\r\n                          height: \"40px\",\r\n                          borderRadius: \"7px\",\r\n                          fontSize: \"0.9rem\",\r\n                          border: \"1px solid rgba(10,46,101,.1)\",\r\n                        }}\r\n                        placeholder=\"First Name\"\r\n                        name=\"firstName\"\r\n                        type=\"text\"\r\n                        value={firstName}\r\n                        onChange={onChange}\r\n                      />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      name=\"lastName\"\r\n                      rules={[\r\n                        { required: true, message: \"This field is compulsory\" },\r\n                      ]}\r\n                      style={{ marginBottom: \"15px\" }}\r\n                    >\r\n                      <Input\r\n                        style={{\r\n                          height: \"40px\",\r\n                          borderRadius: \"7px\",\r\n                          fontSize: \"0.9rem\",\r\n                          border: \"1px solid rgba(10,46,101,.1)\",\r\n                        }}\r\n                        placeholder=\"Last Name\"\r\n                        name=\"lastName\"\r\n                        type=\"text\"\r\n                        value={lastName}\r\n                        onChange={onChange}\r\n                      />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      name=\"email\"\r\n                      rules={[\r\n                        { required: true, message: \"Confirm your Input\" },\r\n                      ]}\r\n                      style={{ marginBottom: \"15px\" }}\r\n                    >\r\n                      <Input\r\n                        style={{\r\n                          height: \"40px\",\r\n                          borderRadius: \"7px\",\r\n                          fontSize: \"0.9rem\",\r\n                          border: \"1px solid rgba(10,46,101,.1)\",\r\n                        }}\r\n                        placeholder=\"E-mail Address\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        onChange={onChange}\r\n                      />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      name=\"password\"\r\n                      rules={[\r\n                        { required: true, message: \"Confirm your Input\" },\r\n                      ]}\r\n                    >\r\n                      <Input.Password\r\n                        style={{\r\n                          height: \"40px\",\r\n                          borderRadius: \"7px\",\r\n                          fontSize: \"0.9rem\",\r\n                          border: \"1px solid rgba(10,46,101,.1)\",\r\n                        }}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={onChange}\r\n                      />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      name=\"password2\"\r\n                      rules={[\r\n                        { required: true, message: \"Confirm your Input\" },\r\n                      ]}\r\n                    >\r\n                      <Input.Password\r\n                        style={{\r\n                          height: \"40px\",\r\n                          borderRadius: \"7px\",\r\n                          fontSize: \"0.9rem\",\r\n                          border: \"1px solid rgba(10,46,101,.1)\",\r\n                        }}\r\n                        type=\"password\"\r\n                        name=\"password2\"\r\n                        placeholder=\"Re-type Password\"\r\n                        value={password2}\r\n                        onChange={onChange}\r\n                      />\r\n                    </Form.Item>\r\n                    <Row>\r\n                      <Col xs={{ span: 12 }} lg={{ span: 6 }}>\r\n                        {\" \"}\r\n                        <Form.Item>\r\n                          <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className=\"loginBtn\"\r\n                          >\r\n                            Register\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst textLogin = {\r\n  textAlign: \"center\",\r\n  marginBottom: 10,\r\n  paddingBottom: 10,\r\n};\r\n\r\nCreateAcct.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  clearErrors: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.auth.error,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  registerSuccess: state.auth.registerSuccess,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register, clearErrors })(\r\n  CreateAcct\r\n);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\reducers\\projectReducer.js",["429","430"],"import {\r\n  CREATE_PROJECT,\r\n  GET_PROJECT,\r\n  TEST_DISPATCH,\r\n  GET_PROGRAMS,\r\n  GET_BUDGET_AND_BENEFICIARIES,\r\n} from \"../constants/Types\";\r\n\r\nconst initialState = {\r\n  programs: [],\r\n  awarded: null,\r\n  disbursed: null,\r\n  loading: false,\r\n  totalbudget: \"\",\r\n  totalbeneficiaries: \"\",\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PROGRAMS:\r\n      return {\r\n        ...state,\r\n        programs: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n      };\r\n    case CREATE_PROJECT:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        projects: [...state.projects, action.payload],\r\n      };\r\n    case GET_BUDGET_AND_BENEFICIARIES:\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\reducers\\alertReducer.js",["431"],"import { SET_ALERT, REMOVE_ALERT } from \"../constants/Types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return [...state, action.payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\reducers\\authReducer.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\reducers\\formReducer.js",["432"],"import {FORM} from '../constants/Types'\r\n\r\nconst initialState = {\r\n    form: {},\r\n    error: null,\r\n    forms: [],\r\n    loading: false,\r\n    pagination: {},\r\n    answers: {},\r\n    programs: [],\r\n    indicatorQuestions: []\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case FORM.setLoadingState:\r\n            return {...state, loading: payload}\r\n\r\n    case FORM.createFormSuccess:\r\n        return { ...state, form: payload, loading: false }\r\n    \r\n    case FORM.errors:\r\n        return {...state, forms:[], form: {}, error: payload, loading: false}\r\n\r\n    case FORM.getFormSuccess:\r\n            return { ...state, form: payload, loading: false }\r\n        \r\n        case FORM.getFormsSuccess:\r\n            return {...state, forms: payload.data, pagination: payload.pagination}\r\n    \r\n        case FORM.buildAnswers:\r\n            return {...state, answers: {...state.answers, [payload.questionId]: payload }}\r\n        \r\n            case FORM.getPrograms:\r\n                return {...state, programs: payload}\r\n\r\n    case FORM.getIndicatorQuestionSuccess:\r\n        return {...state, indicatorQuestions: payload}\r\n        \r\n    default:\r\n        return state\r\n    }\r\n}\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\reducers\\reportReducer.js",["433"],"import {REPORT} from '../constants/Types'\r\n\r\nconst initialState = {\r\n    reports:[],\r\n    errors: null,\r\n    loading: false,\r\n    programForms: []\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n    case REPORT.setLoadingState:\r\n            return {...state, loading: payload}\r\n\r\n    case REPORT.getReportSuccess:\r\n        return { ...state, reports: payload, loading: false }\r\n    \r\n    case REPORT.errors:\r\n        return {...state, reports:[],  error: payload, loading: false}\r\n\r\n    case REPORT.getProgramFormsSuccess:\r\n        return {...state, programForms: payload, loading: false}\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\LoginForm\\index.js",["434","435","436","437","438","439","440"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport { Form, Input, Button, Row, Col, Card, Checkbox, Tabs } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoginImg from \"../../assets/graphic_login.svg\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { setAlert } from \"../../actions/alertActions\";\r\nimport { login, clearErrors } from \"../../actions/authAuctions\";\r\nimport { Redirect } from \"react-router\";\r\nimport AlertInfo from \"../Alert/index\";\r\n\r\nconst LoginForm = (\r\n  { setAlert, error, login, isAuthenticated, clearErrors, auth,  Service, Constants },\r\n  props\r\n) => {\r\n  useEffect(() => {\r\n    console.log(\"props in login\",Service ,{Constants})\r\n\r\n    if (error) {\r\n      setAlert(error.data.message, \"error\");\r\n      clearErrors();\r\n    } //eslint-disable-next-line\r\n  }, [error, isAuthenticated, props.history]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const onFinish = async () => {\r\n\r\n    if (email === \"\") {\r\n      setAlert(\"Please enter all fields\", \"error\");\r\n    } else if (password === \"\") {\r\n      setAlert(\"Please enter all fields\", \"error\");\r\n    } else {\r\n      const ServiceBase = Service(null,null)\r\n      login(formData,ServiceBase,Constants );\r\n    }\r\n  };\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/app/dashboard\" />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"loginAltBg\" style={{ backgroundColor: \"#064E89\" }}>\r\n        <Row>\r\n          <Col xs={{ span: 0 }} lg={{ span: 10 }} className=\"login_container\">\r\n            <div className=\"left_container\">\r\n              <div>\r\n                {\" \"}\r\n                <h3\r\n                  className=\"loginH3\"\r\n                  style={{ color: \"#064E89\", textAlign: \"left\" }}\r\n                >\r\n                  Track your objectives using Trail.\r\n                </h3>\r\n                <p className=\"loginP\">\r\n                  Access to the most powerfull tool that allows you track your Objectives and Goals.\r\n                </p>\r\n              </div>\r\n              <img src={LoginImg} width=\"350px\" className=\"loginImg\" />\r\n            </div>\r\n          </Col>\r\n          <Col xs={{ span: 20 }} lg={{ span: 14 }} className=\"logins_container\">\r\n            <div className=\"right_container\">\r\n              <div className=\"logo\"></div>\r\n              <div className=\"cardWrap\">\r\n                <div style={{ marginBottom: \"30px\" }}>\r\n                  <Link to=\"/login\">\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"16px\",\r\n                        fontWeight: \"900\",\r\n                        color: \"#fff\",\r\n                        paddingBottom: \"10px\",\r\n                        marginRight: \"20px\",\r\n                        borderBottom: \"2px solid white\",\r\n                        marginBottom: \"30px\",\r\n                      }}\r\n                    >\r\n                      Login\r\n                    </span>\r\n                  </Link>\r\n                  <Link to=\"/signup\">\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"400\",\r\n                        color: \"#5183AD\",\r\n                        paddingBottom: \"10px\",\r\n                        marginRight: \"20px\",\r\n                        borderBottom: \"2px solid #5183AD\",\r\n                        marginBottom: \"30px\",\r\n                      }}\r\n                    >\r\n                      Register\r\n                    </span>\r\n                  </Link>\r\n                </div>\r\n                <div>\r\n                  <AlertInfo />\r\n                  <br />\r\n                  <Form\r\n                    name=\"normal_login\"\r\n                    className=\"login-form\"\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={onFinish}\r\n                  >\r\n                    <Form.Item\r\n                      name=\"email\"\r\n                      rules={[\r\n                        { required: true, message: \"Confirm your Input\" },\r\n                      ]}\r\n                      style={{ marginBottom: \"15px\" }}\r\n                    >\r\n                      <Input\r\n                        style={{\r\n                          height: \"40px\",\r\n                          borderRadius: \"7px\",\r\n                          fontSize: \"0.9rem\",\r\n                          border: \"1px solid rgba(10,46,101,.1)\",\r\n                        }}\r\n                        placeholder=\"E-mail Address\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={onChange}\r\n                      />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      name=\"password\"\r\n                      rules={[\r\n                        { required: true, message: \"Confirm your Input\" },\r\n                      ]}\r\n                    >\r\n                      <Input.Password\r\n                        style={{\r\n                          height: \"40px\",\r\n                          borderRadius: \"7px\",\r\n                          fontSize: \"0.9rem\",\r\n                          border: \"1px solid rgba(10,46,101,.1)\",\r\n                        }}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={onChange}\r\n                      />\r\n                    </Form.Item>\r\n                    <Row>\r\n                      <Col xs={{ span: 12 }} lg={{ span: 6 }}>\r\n                        {\" \"}\r\n                        <Form.Item>\r\n                          <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className=\"loginBtn\"\r\n                          >\r\n                            Login\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </Col>\r\n                      {/* <Col xs={{ span: 12 }} lg={{ span: 12 }}>\r\n                        {\" \"}\r\n                        <Link to=\"/\">\r\n                          <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className=\"forgetBtn\"\r\n                          >\r\n                            Forgot Password ?\r\n                          </Button>\r\n                        </Link>\r\n                      </Col> */}\r\n                    </Row>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst textLogin = {\r\n  textAlign: \"center\",\r\n  marginBottom: 10,\r\n  paddingBottom: 10,\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  login: PropTypes.func.isRequired,\r\n  clearErrors: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.auth.error,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, login, clearErrors })(\r\n  LoginForm\r\n);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Loader\\CatalogMagic.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\views\\FormPreview\\index.jsx",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\actions\\authAuctions.js",["441","442","443","444","445","446"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  CLEAR_ERRORS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"../constants/Types\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n\r\n//Load User\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n  // setAuthToken(localStorage.token);\r\n  // try {\r\n  //   const res = await axios.get(\"http://trail-api.test.vggdev.com/user\");\r\n  //   dispatch({\r\n  //     type: USER_LOADED,\r\n  //     payload: res.data,\r\n  //   });\r\n  // } catch (error) {\r\n  //   dispatch({\r\n  //     type: AUTH_ERROR,\r\n  //     payload: error.response,\r\n  //   });\r\n  // } \r\n};\r\n\r\n//Register User\r\n\r\nexport const register = (formData,ServiceBase,Constants) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    // const res = await axios.post(\r\n    //   \"http://trail-api.test.vggdev.com/user/\",\r\n    //   formData,\r\n    //   config\r\n    // );\r\n    const res = await ServiceBase.createItemV1(formData,Constants.USER)\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    loadUser();\r\n  } catch (error) {\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n      payload: error.response,\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\n\r\nexport const login = (formData, ServiceBase,Constants) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    // const res = await axios.post(\r\n    //   \"https://trail-api.test.vggdev.com/authenticate/\",\r\n    //   formData,\r\n    //   config\r\n    // );\r\n    const res = await ServiceBase.createItemV1(formData,Constants.AUTHENTICATE)\r\n      localStorage.setItem(\"TRAIL_TOKEN\",JSON.stringify(res.data.data.accessToken))\r\n      localStorage.setItem(\"TRAIL_USER\",JSON.stringify(res.data.data))\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    loadUser();\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n      payload: error.response,\r\n    });\r\n  }\r\n};\r\n\r\n//Logout\r\nexport const logout = () => async (dispatch) => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n\r\n//Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\actions\\projectAction.js",["447","448","449","450","451","452"],"import {\r\n  CREATE_PROJECT,\r\n  GET_PROJECT,\r\n  TEST_DISPATCH,\r\n  GET_INDICATORS,\r\n  PROJECT_ERROR,\r\n  GET_PROGRAMS,\r\n  GET_BUDGET_AND_BENEFICIARIES,\r\n} from \"../constants/Types\";\r\nimport { message as alert, message } from \"antd\";\r\nimport { appHelpers } from \"../appHelpers/appHelpers\";\r\nimport { GET_BUDGET_AND_BENEFICIARIES as BAB } from \"../Constants\";\r\nimport axios from \"axios\";\r\n\r\nexport const getPrograms = (token, ServiceBase, Constants) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      accessToken: token,\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.get(\r\n      \"https://trail-api.test.vggdev.com/programs\",\r\n      config\r\n    );\r\n    // const res = await ServiceBase.getItems(Constants.PROGRAMS)\r\n    dispatch({\r\n      type: GET_PROGRAMS,\r\n      payload: res.data.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROJECT_ERROR,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProject = () => {\r\n  return {\r\n    type: GET_PROJECT,\r\n  };\r\n};\r\n\r\nexport const createProject = (project) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    // const res = await axios.post(\r\n    //   \"/api/plans\",\r\n    //   project,\r\n    //   config\r\n    // );\r\n    dispatch({\r\n      type: CREATE_PROJECT,\r\n      payload: project,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROJECT_ERROR,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBudgetandBeneficiaries = (service) => async (dispatch) => {\r\n  try {\r\n    const response = await service.getItems(BAB);\r\n    const { data } = response.data;\r\n    dispatch({\r\n      type: GET_BUDGET_AND_BENEFICIARIES,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_BUDGET_AND_BENEFICIARIES,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n\r\n//http://trail-api.test.vggdev.com/\r\n\r\n/*{\r\n  \"data\": {\r\n    \"totalbudget\": 32.0,\r\n    \"totalbeneficiaries\": 88\r\n},\r\n\"message\": \"Total budget and beneficaries\"\r\n}*/\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\constants\\app.constants.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Card\\ImageCard.js",["453","454","455","456"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Row, Col } from \"antd\";\r\nimport modulestyle from \"./imagecard.module.css\"\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    // maxWidth: 345,\r\n  },\r\n});\r\n\r\nconst ImageCard = ({ name, image, code ,handleOverview,id,sdgs}) => {\r\n  const classes = useStyles();\r\n\r\n\r\n const renderSdgs = (sdgs) =>{\r\n    let sdgElems = [];\r\n    for(let i in sdgs){\r\n      const lastIndex = sdgs.length - 1;\r\n      sdgElems.push(\r\n            <>\r\n        <label className=\"p-0 m-0\">SDG {`${sdgs[i].sdgId} `} {i != (sdgs.length-1) ? ', ' : ''}</label>\r\n            </>\r\n        )\r\n    }\r\n    return sdgElems;\r\n}\r\n  return (\r\n    <Card className={classes.root}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"Contemplative Reptile\"\r\n          height=\"290\"\r\n          image={image}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>\r\n              {\" \"}\r\n              <h3>{name}</h3>\r\n            </div>\r\n            <div>\r\n              {\" \"}\r\n              <h4 style={{color:\"#53d1be\",fontWeight:\"bold\"}}>{code}</h4>\r\n            </div>\r\n          </div>\r\n          <Row>\r\n              <Col md=\"3\">\r\n                <div>\r\n                  <label className=\"p-0 m-0\">LOCATION</label>\r\n                </div>\r\n                <div>\r\n                  <label className=\"p-0 m-0\">Nigeria</label>\r\n                </div>\r\n              </Col>\r\n              <div className={modulestyle.vl}></div>\r\n              <Col md=\"5\"style={{marginLeft:\"10px\"}}>\r\n                <div>\r\n                  <label className=\"p-0 m-0\">IMPACT</label>\r\n                </div>\r\n                <div style={{width:\"max-content\"}}>\r\n                  <div style={{ display: \"flex\" }}>\r\n                    {renderSdgs(sdgs)}\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Lizards are a widespread group of squamate reptiles, with over 6,000\r\n            species, ranging across all continents except Antarctica\r\n          </Typography> */}\r\n        </CardContent>\r\n      <CardActions>\r\n        <Button size=\"large\" color=\"primary\" onClick={(e)=>handleOverview(id,name)} className=\"projectButton\">\r\n          Overview\r\n        </Button>\r\n        \r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ImageCard;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FormBuilder.js\\BuildForm.js",["457","458","459","460","461","462"],"import React, { useEffect, useReducer, useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  Divider,\r\n  message,\r\n  InputNumber,\r\n  Dropdown,\r\n  Menu\r\n} from \"antd\";\r\nimport \"./index.css\";\r\nimport { COMPONENT_TYPES } from '../../appHelpers/constants'\r\nimport { MinusCircleOutlined} from \"@ant-design/icons\";\r\nimport { connect,useDispatch, useSelector } from \"react-redux\";\r\nimport { createForm, getPrograms,getIndicatorQuestion, getForm, updateForm } from '../../actions/formActions'\r\nimport { camelCase, flatten, isEmpty, omit } from \"lodash\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport { dummyQuestionLibrary } from \"./constants\";\r\nimport {useParams} from 'react-router-dom'\r\n\r\nconst { Option } = Select;\r\n\r\nconst reducer = (state, { type, payload }) => {\r\n  switch (type) {\r\n    case 'components':\r\n     return {...state, components: payload}\r\n    case 'formData':\r\n      return {...state, [payload.name]: payload.value}\r\n    case 'builderType':\r\n      return { ...state, builderType: payload }\r\n    case 'customQuestionInput':\r\n      return {...state, customQuestionInput: {...state.customQuestionInput, [payload.id]: payload.value}}\r\n    case 'updateForm':\r\n      console.log('testing',{...state,...payload})\r\n      return {...state, ...payload}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst transformNonEventChange = ({ name, value }) => {\r\n    const event = {\r\n        target: {},\r\n    };\r\n    event.target.name = name;\r\n    event.target.value = value;\r\n\r\n    return event;\r\n};\r\n\r\nconst BuildForm = ({service}) => {\r\n  const initialState = {\r\n    title: \"\",\r\n    display: \"form\",\r\n    type: \"form\",\r\n    name: \"\",\r\n    program: \"\",\r\n    instructions: \"\",\r\n    buttonType:\"submit\",\r\n    buttonValue: \"Submit\",\r\n    customQuestionInput: {},\r\n    components: []\r\n  }\r\n  const {id} = useParams()\r\n  const [state, dispatch] = useReducer(reducer,initialState)\r\n  const { title,name,program,instructions, components, customQuestionInput } = state\r\n\r\n  const reduxDispatch = useDispatch()\r\n  const token = useSelector(state => state.auth.token)\r\n  const projects = useSelector(state => state.projects.projects)\r\n  const loadingState = useSelector(state => state.form.loading)\r\n  const programs = useSelector(state => state.form.programs)\r\n  const {form} = useSelector(state => state.form)\r\n  const indicatorQuestions = useSelector(state =>  state.form.indicatorQuestions)\r\n\r\n  console.log({indicatorQuestions})\r\n  const history = useHistory()\r\n  const [indicatorId, setIndicatorId] = useState(null)\r\n\r\n  useEffect(() => {\r\n    reduxDispatch(getPrograms(service))\r\n  },[service,reduxDispatch])\r\n\r\n  useEffect(() => {\r\n    if(id){\r\n      reduxDispatch(getForm(id,service,true))\r\n      // \r\n    }\r\n\r\n    //eslint-disable-next-line\r\n},[])\r\n\r\nuseEffect(() => {\r\n  if(id){\r\n    dispatch({payload: {...form, title: form['form-title']}, type: 'updateForm'})\r\n  }\r\n},[form,id])\r\n\r\nconst onChange = (e) => {\r\n    dispatch({ payload: { name: e.target.name,value:e.target.value }, type:'formData'})\r\n  };\r\n  console.log(form)\r\n\r\n  const onFinish = () => {\r\n    if (!state?.components || !state?.components.length) {\r\n      return message.error('Please create some question fields')\r\n    }\r\n    console.log('iddddddd',id)\r\n    id ? reduxDispatch(updateForm(omit(state,['customQuestionInput','builderType']), service, id, history)) : reduxDispatch(createForm(omit(state,['customQuestionInput','builderType']), service, history))\r\n  }; \r\n\r\n  const selectedProgramSdgs = (_programId) => {\r\n    const selectedProgram = programs?.filter((program) =>  program?.id === _programId)\r\n    return selectedProgram[0]?.sdgs || []\r\n  }\r\nconsole.log(state)\r\n  const indicators = (sdgs) => flatten(sdgs?.map(({indicators}) => indicators))\r\n\r\n  const handleChangeBuilderType = (_type) => {  \r\n    if(isEmpty(state?.program)) return message.error('Please select a program')\r\n    dispatch({ payload: _type, type: 'builderType' })\r\n    switch (_type) {\r\n      case COMPONENT_TYPES.radio:\r\n       return dispatch({\r\n            payload: [\r\n                ...components,\r\n                {\r\n                question: \"\",\r\n                targetValue : null,\r\n                targetType : \"percentage\",\r\n                // type: COMPONENT_TYPES.radio,\r\n                inputType: COMPONENT_TYPES.radio,\r\n                input: true,\r\n                placeholder: \"\",\r\n                linkedIndicator : null,\r\n                indicatorquestion: \"\",\r\n                value:'number',\r\n                // values: [\r\n                //   {\r\n                //     label: \"Yes\",\r\n                //     value: \"1\",\r\n                //     shortcut: \"\"\r\n                //   },\r\n                //   {\r\n                //     label: \"No\",\r\n                //     value: \"2\",\r\n                //     shortcut: \"\"\r\n                //   },\r\n                // ],\r\n                },\r\n            ],\r\n            type: 'components',\r\n        });\r\n\r\n      case COMPONENT_TYPES.text:\r\n       return dispatch({\r\n            payload: [\r\n                ...components,\r\n                {\r\n                  input: true,\r\n                  // type: COMPONENT_TYPES.text,\r\n                  inputType: COMPONENT_TYPES.text,\r\n                  value: \"text\",\r\n                  placeholder: \"\",\r\n                  question: \"\",\r\n                  linkedIndicator : null,\r\n                  targetValue : null,\r\n                  targetType : \"percentage\",\r\n                  indicatorquestion: \"\"\r\n                },\r\n            ],\r\n            type: 'components',\r\n        });\r\n    \r\n      default:\r\n       return dispatch({payload:[...components], type: 'components'})\r\n    }\r\n \r\n  }\r\n\r\n  const BUILDER_TYPES = [\r\n    // {\r\n    //   name: 'Text Input',\r\n    //   value: COMPONENT_TYPES.text\r\n    // },\r\n    {\r\n      name: 'Radio Input',\r\n      value: COMPONENT_TYPES.radio\r\n    }\r\n  ]\r\n\r\n  const menu = (\r\n    <Menu style={{ display: 'flex', flexDirection: 'column' }}>\r\n      {BUILDER_TYPES?.map(({name,value}) => <Menu.Item key={value} onClick={()=> handleChangeBuilderType(value)}>{name}</Menu.Item> )}\r\n    </Menu>\r\n  )\r\n\r\n    const change = (e, idx) => {\r\n        const { name, value } = e.target;\r\n        components[idx][name] = value;\r\n        dispatch({ payload: [...components], type: 'components' });\r\n    };\r\n\r\n    const handleRemoveClick = (e, index) => {\r\n        e.stopPropagation();\r\n        const list = [...components];\r\n        const otherLists = list.filter((_, idx) => idx !== index);\r\n        dispatch({ payload: otherLists, type: 'components' });\r\n    };\r\n\r\n  const handleSelect = (id) => {\r\n    setIndicatorId(id)\r\n    reduxDispatch(getIndicatorQuestion(id, service))\r\n  }\r\n\r\n    return (\r\n    <div className=\"form-builder\">\r\n      <Row>\r\n        <Col span={24}>\r\n          <Form\r\n            name=\"normal_login\"\r\n            layout={\"vertical\"}\r\n            className=\"login-form\"\r\n            onFinish={onFinish}\r\n          >\r\n            <Card title={\"Create your custom form\"}>\r\n              <Row gutter={[16,16]}>\r\n                <Col span={8}>\r\n                  <Form.Item\r\n                    label={titleName}\r\n                    name=\"title\"\r\n                    rules={[{ required: true, message: \"Form title is required\" }]}\r\n                    style={{ marginBottom: \"15px\" }}\r\n                  >\r\n                    {/* {console.log(state['form-title'])} */}\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      value={title}\r\n                      onChange={onChange}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                  {/* {console.log(program)} */}\r\n                  <Form.Item\r\n                    label={titleName2}\r\n                    name={\"program\"}\r\n                    value={program}\r\n                    rules={[\r\n                      { required: true, message: \"Please select a program\" },\r\n                    ]}\r\n                  >\r\n                    <Select onChange={(value) => dispatch({ payload: { name: 'program',value: value.toString() }, type:'formData'})} placeholder=\"Select program\">\r\n                      {(programs||[])?.map((program) => (\r\n                          <Option key={program?.id} value={program?.id}>{program?.name}</Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Form.Item\r\n                    label={titleName4}\r\n                    name=\"name\"\r\n                    rules={[{ required: true, message: \"Form name is required\" }]}\r\n                    style={{ marginBottom: \"15px\" }}\r\n                  >\r\n                    {/* {console.log(name)} */}\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      value={name}\r\n                      onChange={onChange}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span={24}>\r\n                  <Form.Item label={titleName3} name=\"instructions\">\r\n                    {/* {console.log(instructions)} */}\r\n                    <Input.TextArea\r\n                      type=\"text\"\r\n                      name=\"instructions\"\r\n                      value={instructions}\r\n                      onChange={onChange}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n        </Card>\r\n            <Divider />\r\n\r\n            {/* Form Builder */}\r\n            <Card>\r\n              <Dropdown trigger={['hover','click']} overlay={menu}>\r\n                <Button style={{marginBottom:20}} type=\"primary\" ghost>Create Question</Button>\r\n              </Dropdown> \r\n\r\n              {components?.map((component, idx) => {\r\n                const { targetType,linkedindicator,question,placeholder,targetvalue } = component\r\n                console.log({targetvalue})\r\n                const handleSelectQuestion = (val) => {\r\n                  if (val === 'custom') {\r\n                    change(transformNonEventChange({ name: 'indicatorquestion', value: '' }), idx)\r\n                    return dispatch({payload:{value:true,id:idx}, type:'customQuestionInput'})\r\n                  }\r\n                  dispatch({payload:{value:false,id:idx}, type:'customQuestionInput'})\r\n                  change(transformNonEventChange({ name: 'indicatorquestion', value: val }), idx)\r\n                }\r\n                return (\r\n                <Form.Item>\r\n                  <Card>\r\n                    <Row gutter={[16,16]}>\r\n                      <Col span={7}>\r\n                        <Form.Item\r\n                          rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message:\r\n                                      \"Please select a question indicator\",\r\n                                  },\r\n                              ]}\r\n                          style={{ marginBottom: 0 }}\r\n                        >\r\n                          {/* {console.log(linkedindicator)} */}\r\n                          <Select onSelect={handleSelect} onChange={(val) => change(transformNonEventChange({name:'linkedIndicator', value:val }), idx)} placeholder=\"--Select Indicator--\" >\r\n                            {indicators(selectedProgramSdgs(+state?.program))?.map((indicator,idx) => <Option key={idx} value={indicator?.programIndicatorId}>{indicator?.description}</Option> )}\r\n                          </Select>\r\n                        </Form.Item>\r\n                       </Col>\r\n                       <Col span={8}>\r\n                              <Form.Item\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please select a Question\",\r\n                                  },\r\n                                ]}\r\n                                style={{ marginBottom: 0 }}\r\n                              >\r\n                                <Select\r\n                                  placeholder=\"Select Question\"\r\n                                  onChange={handleSelectQuestion}\r\n                            >\r\n                              <Option value=\"custom\">Custom Question</Option>\r\n                              {indicatorQuestions?.map(({question, id}) => <Option value={id}>{question}</Option> )}\r\n                                </Select>\r\n                              </Form.Item>\r\n                        </Col>\r\n                         {((customQuestionInput && customQuestionInput[idx]) || !isEmpty(question)) && <Col span={6}>\r\n                          <Form.Item\r\n                              placeholder=\"--Type Question--\"\r\n                              style={{marginBottom: 0}}\r\n                              >\r\n                                {/* {console.log(question)} */}\r\n                                <Input\r\n                                  type=\"text\"\r\n                                  name=\"question\"\r\n                                  placeholder=\"--Type Question--\"\r\n                                  onChange={(e) => change(e,idx)}\r\n                                  value={question}\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>}\r\n                         <Col span={4}>\r\n                              <Form.Item\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please select a metric\",\r\n                                  },\r\n                            ]}\r\n                            style={{ marginBottom: 0 }}\r\n                              >\r\n                                <Select\r\n                                  placeholder=\"Select indicator metric\"\r\n                                  label=\"--Select indicator metric--\"\r\n                                  onChange={(val) => change(transformNonEventChange({name:'targetType', value:val}), idx)}\r\n                                defaultValue={targetType}\r\n                                >\r\n                                  <Option value=\"number\">Number</Option>\r\n                                  <Option value=\"percentage\">Percentage</Option>\r\n                                </Select>\r\n                              </Form.Item>\r\n                            </Col>\r\n                        <Col span={4}>\r\n                              <Form.Item\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Target Value is required\",\r\n                                  },\r\n                                ]}\r\n                                style={{ marginBottom: 0 }}\r\n                              >\r\n                                <InputNumber\r\n                                //  value={targetvalue}\r\n                              min={0}\r\n                              max={targetType === 'percentage' ? 99 : null}\r\n                              style={{width:'100%'}}\r\n                              placeholder=\"--Target Value--\"\r\n                              onChange={(val) => change(transformNonEventChange({name:'targetValue', value:val}), idx)}\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                      <Col span={6}>\r\n                          <Form.Item\r\n                              placeholder=\"--Placeholder--\"\r\n                              style={{marginBottom: 0}}\r\n                              >\r\n                                {/* {console.log(placeholder)} */}\r\n                                <Input\r\n                                  type=\"text\"\r\n                                  name=\"placeholder\"\r\n                                  value={placeholder}\r\n                                placeholder={\"Input Placeholder\"}\r\n                                onChange={(e) => change(e,idx)}\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                        <Col span={1}>\r\n                              <Button\r\n                                type=\"danger\"\r\n                                onClick={(e) => handleRemoveClick(e, idx)}\r\n                                icon={<MinusCircleOutlined />}\r\n                                size={\"medium\"}\r\n                              />\r\n                            </Col>\r\n                    </Row>\r\n                  </Card>\r\n                </Form.Item>\r\n              )\r\n              })}\r\n              {!isEmpty(components) && <>\r\n                <Divider />\r\n                <Row gutter={[16, 16]}>\r\n                  <Col span={3}>\r\n                    <Form.Item>\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        className=\"forgetBtn\"\r\n                        onSubmit={onFinish}\r\n                        loading={loadingState}\r\n                      >\r\n                        Create Form\r\n                          </Button>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Item>\r\n                       <Dropdown trigger={['hover','click']} overlay={menu}>\r\n                        <Button\r\n                          type=\"link\"\r\n                          htmlType=\"submit\"\r\n                        >\r\n                          Create Field\r\n                        </Button>\r\n                      </Dropdown> \r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </>}\r\n            </Card>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Divider />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst titleName = (\r\n  <p\r\n    style={{\r\n      margin: \"0px\",\r\n      padding: \"0px\",\r\n      color: \"#001529\",\r\n      fontSize: \"14px\",\r\n      border: \"none\",\r\n      fontWeight: \"bold\",\r\n    }}\r\n  >\r\n    Form Title\r\n  </p>\r\n);\r\n\r\nconst titleName2 = (\r\n  <p\r\n    style={{\r\n      margin: \"0px\",\r\n      padding: \"0px\",\r\n      color: \"#001529\",\r\n      fontSize: \"14px\",\r\n      border: \"none\",\r\n      fontWeight: \"bold\",\r\n    }}\r\n  >\r\n    Link Form to programme\r\n  </p>\r\n);\r\nconst titleName3 = (\r\n  <p\r\n    style={{\r\n      margin: \"0px\",\r\n      padding: \"0px\",\r\n      color: \"#001529\",\r\n      fontSize: \"14px\",\r\n      border: \"none\",\r\n      fontWeight: \"bold\",\r\n    }}\r\n  >\r\n    Instruction (Optional)\r\n  </p>\r\n);\r\n\r\nconst titleName4 = (\r\n  <p\r\n    style={{\r\n      margin: \"0px\",\r\n      padding: \"0px\",\r\n      color: \"#001529\",\r\n      fontSize: \"14px\",\r\n      border: \"none\",\r\n      fontWeight: \"bold\",\r\n    }}\r\n  >\r\n    Name\r\n  </p>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.projects,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(BuildForm);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FormIO\\Index.js",["463"],"import React from \"react\";\r\nimport { FormBuilder } from \"react-formio\";\r\nimport \"./styles.scss\";\r\nimport \"./Index.css\";\r\nconst FormIO = () => {\r\n  return (\r\n    <div>\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormIO;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FormIO\\CreateForm.js",["464","465"],"import React,{useEffect, useState} from \"react\";\r\nimport { Row, Col, Layout, Card, Typography, Pagination, Skeleton,Dropdown,Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './styles.scss'\r\nimport {getForms,deleteForm} from '../../actions/formActions'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport background from '../../assets/background123.svg'\r\nimport {MoreOutlined} from '@ant-design/icons'\r\nimport { FORM } from \"../../constants/Types\";\r\n\r\nconst FormCard = ({title,id,page,service}) => {\r\n  const {token} = useSelector(state => state.auth)\r\nconst dispatch = useDispatch()\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item onClick={() => dispatch(deleteForm(id,service))} danger>Delete</Menu.Item>\r\n    </Menu>\r\n  )\r\n\r\n  return (\r\n    <Card\r\n    cover={<img alt=\"example\" className=\"form-card-image\" src={background} />}\r\n    className=\"form-card\"\r\n  >\r\n    <div className=\"form-card-text-wrapper\">\r\n    <Link to={`/app/dashboard/form/preview/${id}`}>\r\n        <Typography.Paragraph className=\"form-card-text\" ellipsis={{\r\n        rows:2,\r\n      }}>{title}</Typography.Paragraph>\r\n    </Link>\r\n    </div>\r\n    <div style={{textAlign:'right', cursor:'pointer'}}>\r\n      <Dropdown trigger={['click','hover']} placement=\"bottomCenter\" overlay={menu}>\r\n        <MoreOutlined />\r\n      </Dropdown>\r\n    </div>\r\n  </Card>\r\n  )\r\n} \r\n\r\nconst CreateForm = ({service}) => {\r\n  const dispatch = useDispatch()\r\n  const {token} = useSelector(state => state.auth)\r\n  const { forms, pagination,loading } = useSelector(state => state.form)\r\n  const [page, setPage] = useState(1)\r\n  const handlePageChange = (_page) => setPage(_page)\r\n\r\n  useEffect(() => {\r\n    dispatch(getForms(service, page))\r\n  },[dispatch, service,page])\r\n\r\n  const handleReset = () => dispatch({type: FORM.getFormSuccess,payload: {}})\r\nconsole.log(forms)\r\n  return (\r\n    <Layout className=\"create-form\">\r\n      <Row gutter={[16, 16]}>\r\n        <Col span={8}>\r\n          <h1 className=\"create-form-title\" >Create new form</h1>\r\n          <Link onClick={handleReset} to=\"/app/dashboard/build_form\">\r\n            <Card className=\"create-form-new-form\">\r\n              <h1 className=\"create-form-plus\">+</h1>\r\n            </Card>\r\n          </Link>\r\n        </Col>\r\n        <Col span={16}>\r\n          <h6 className=\"create-form-title\">Available Forms</h6>\r\n          <Row gutter={[16, 16]}>\r\n            {loading ? <Skeleton /> : forms?.map(({name,id},idx) => (\r\n              <Col key={name} span={6}>\r\n                  <FormCard title={name} id={id} page={page} service={service} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Row gutter={[16, 16]} style={{marginTop: 20}}>\r\n              <Col>\r\n              <Pagination\r\n                current={pagination?.currentPage || 1}\r\n                hideOnSinglePage\r\n                pageSize={pagination?.limit || 0}\r\n                pageSizeOptions={[10, 20, 50, 100]}\r\n                onChange={handlePageChange}\r\n                total={(+pagination?.totalPages || 0) * (+pagination?.limit || 0)}\r\n              />\r\n              </Col>\r\n           </Row>\r\n        </Col>\r\n      </Row>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CreateForm;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FormIO\\constants.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\actions\\alertActions.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Alert\\index.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\constants\\Types.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\ImpactManager\\ImpactManager.jsx",["466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490"],"import React from \"react\";\r\nimport Aux from \"../hocs/_Aux\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withStore } from \"@spyna/react-store\";\r\nimport { Row, Col, Card, Form, Divider } from \"antd\";\r\nimport ImpactManagerForm1 from \"./ImpactManagerForm1\";\r\nimport ImpactManagerForm2 from \"./ImpactManagerForm2\";\r\nimport ImpactManagerForm3 from \"./ImpactManagerForm3\";\r\nimport ImpactManagerSummary from \"./ImpactManagerSummary\";\r\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\r\n//import { sdgDump } from \"./sdgDump\";\r\nimport \"./index.css\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectAction\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\nimport axios from \"axios\";\r\nimport { Map, Marker, GoogleApiWrapper } from \"google-maps-react\";\r\nimport { appConstants } from \"../../constants/app.constants\";\r\nimport CustomButton from \"../CustomButton/CustomButton\";\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  padding: \"20px\",\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: \"#eeeeee\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#fafafa\",\r\n  color: \"#bdbdbd\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: \"#2196f3\",\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\",\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\",\r\n};\r\n\r\nconst thumbsContainer = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  flexWrap: \"wrap\",\r\n  marginTop: 16,\r\n};\r\n\r\nconst thumb = {\r\n  display: \"inline-flex\",\r\n  borderRadius: 2,\r\n  border: \"1px solid #eaeaea\",\r\n  marginBottom: 8,\r\n  marginRight: 8,\r\n  width: \"auto\",\r\n  height: 200,\r\n  padding: 4,\r\n  boxSizing: \"border-box\",\r\n};\r\n\r\nconst thumbInner = {\r\n  display: \"flex\",\r\n  minWidth: 0,\r\n  overflow: \"hidden\",\r\n};\r\n\r\nconst img = {\r\n  display: \"block\",\r\n  width: \"auto\",\r\n  height: \"100%\",\r\n};\r\n\r\nconst { Meta } = Card;\r\n\r\n// const locationsEnum = [\r\n//   { label: \"Nigeria\", value: \"ng\" },\r\n//   { label: \"Ghana\", value: \"gh\" },\r\n// ];\r\n\r\nconst CardTitleForm1 = (\r\n  <h1 style={{ fontSize: \"25px\", fontWeight: \"normal\", margin: 0 }}>\r\n    Create your custom impact\r\n  </h1>\r\n);\r\n\r\nconst CardTitleForm3 = (\r\n  <h1 style={{ fontSize: \"20px\", fontWeight: \"normal\", margin: 0 }}>\r\n    Select Indicators\r\n  </h1>\r\n);\r\n\r\nconst CardTitleForm2 = (\r\n  <h1 style={{ fontSize: \"25px\", fontWeight: \"normal\", margin: 0 }}>\r\n    Select the Sustainable Development Goals for this programme\r\n  </h1>\r\n);\r\n\r\nclass ImpactManager extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createBtn: (\r\n        <span>\r\n          Create Programme <i className=\"fa fa-angle-right\" />{\" \"}\r\n        </span>\r\n      ),\r\n      sdgDump: [],\r\n      name: \"\",\r\n      code: \"\",\r\n      programmeLocation: \"\",\r\n      description: \"\",\r\n      programmePlaces: \"\",\r\n      image: {},\r\n      impactManagerFormOne: true,\r\n      impactManagerFormTwo: false,\r\n      impactManagerFormThree: false,\r\n      impactManagerSummary: false,\r\n      sdgCheckBoxes: {},\r\n      sdgChecks: [],\r\n      totalNumberOfBeneficiaries: \"\",\r\n      budget: \"\",\r\n      indicatorCheckBoxes: {},\r\n      alert: null,\r\n      allIndicators: null,\r\n      mySdg: [],\r\n      creating: false,\r\n      indicators: [\r\n        {\r\n          id: 1,\r\n          description: \"No Poverty\",\r\n        },\r\n        {\r\n          id: 2,\r\n          description: \"No Hunger\",\r\n        },\r\n      ],\r\n      formOneErrors: {\r\n        name: false,\r\n        description: false,\r\n        // projectLocation: false,\r\n        programmeLocation: false,\r\n        code: false,\r\n        programmePlaces: \"\",\r\n        totalNumberOfBeneficiaries: false,\r\n        budget: false,\r\n        image: false,\r\n      },\r\n      formTwoErrors: {\r\n        sdg: false,\r\n      },\r\n      formThreeErrors: {\r\n        indicator: false,\r\n      },\r\n      imageData: null,\r\n      files: [],\r\n      fileForm: null,\r\n      // for google map places autocomplete\r\n      address: \"\",\r\n      showingInfoWindow: false,\r\n      location: {},\r\n      selectedPlace: {},\r\n      mapCenter: {\r\n        lat: 49.2827291,\r\n        lng: -123.1207375,\r\n      },\r\n    };\r\n    this.createProject = this.createProject.bind(this);\r\n    this.cancelProject = this.cancelProject.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { ServiceBase, Constants } = this.props;\r\n    ServiceBase.getDataById(\r\n      Constants.SDGS,\r\n      Constants.ALL,\r\n      Constants.INDICATORS\r\n    ).then((res) => {\r\n      if (res.data) {\r\n        const sdgDump = res.data.data;\r\n        this.setState({ sdgDump });\r\n      } else {\r\n        appHelpers.alertError(\"An Error Ocurred.\");\r\n      }\r\n    });\r\n  }\r\n\r\n  handleChangePlace = (address) => {\r\n    this.setState({ address });\r\n  };\r\n\r\n  handleSelectPlace = (address, selectedPlace, location) => {\r\n    this.setState({ address, selectedPlace, location });\r\n    geocodeByAddress(address)\r\n      .then((results) => getLatLng(results[0]))\r\n      .then((latLng) => {\r\n        console.log(\"Success\", latLng);\r\n        // update center state\r\n        this.setState({ mapCenter: latLng });\r\n      })\r\n      .catch((error) => console.error(\"Error\", error));\r\n  };\r\n\r\n  normFile = (e) => {\r\n    this.setState({ image: e.fileList[0].thumbUrl, imageData: e.fileList });\r\n    if (Array.isArray(e)) {\r\n      return e.fileList[0].thumbUrl;\r\n    }\r\n    return e.fileList[0].thumbUrl;\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSelectChange = (input) => ({ target: { value } }) => {\r\n    this.setState({ [input]: value });\r\n  };\r\n\r\n  openImageManagerFormTwo = () => {\r\n    if (appHelpers.validateImpactFormOne(this)) {\r\n      this.setState({\r\n        impactManagerFormOne: false,\r\n        impactManagerFormTwo: true,\r\n      });\r\n      const impactManager = {\r\n        name: this.state.name,\r\n        code: this.state.code,\r\n        description: this.state.description,\r\n        // projectLocation: this.state.projectLocation,\r\n        programmeLocation: this.state.programmeLocation,\r\n        totalNumberOfBeneficiaries: this.state.totalNumberOfBeneficiaries,\r\n        budget: this.state.budget,\r\n        image: this.state.image,\r\n        programmePlaces: this.state.programmePlaces,\r\n        sdgs: [],\r\n        indicators: [],\r\n      };\r\n    } else {\r\n      console.log(\"some fields are missing\");\r\n    }\r\n  };\r\n\r\n  openImageManagerFormThree = (sdgCheckBoxes, sdgNum) => {\r\n    if (sdgCheckBoxes[sdgNum] !== true) {\r\n      this.setState({\r\n        impactManagerFormOne: false,\r\n        impactManagerFormTwo: true,\r\n        impactManagerFormThree: false,\r\n      });\r\n    }\r\n    if (appHelpers.validateImpactFormTwo(this)) {\r\n      this.setState({\r\n        impactManagerFormOne: false,\r\n        impactManagerFormTwo: false,\r\n        impactManagerFormThree: true,\r\n      });\r\n    } else {\r\n      appHelpers.failedRequestAlert(\"Select at least One SDG\");\r\n    }\r\n  };\r\n\r\n  openImpactManagerSummary = () => {\r\n    if (appHelpers.validateImpactFormThree(this)) {\r\n      this.setState({\r\n        impactManagerFormTwo: false,\r\n        impactManagerFormThree: false,\r\n        impactManagerSummary: true,\r\n      });\r\n    } else {\r\n      appHelpers.failedRequestAlert(\"Please Select at least One Indicator\");\r\n      this.setState({\r\n        impactManagerFormTwo: false,\r\n        impactManagerFormThree: false,\r\n        impactManagerSummary: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  createProject() {\r\n    const indicatorStrings = [];\r\n    this.setState({ creating: true });\r\n    const {\r\n      name,\r\n      description,\r\n      code,\r\n      mySdg,\r\n      sdgCheckBoxes,\r\n      totalNumberOfBeneficiaries,\r\n      budget,\r\n      indicatorCheckBoxes,\r\n      image,\r\n      location,\r\n      address,\r\n      mapCenter,\r\n      imageData,\r\n    } = this.state;\r\n    const payload = {\r\n      name,\r\n      description,\r\n      code,\r\n      image,\r\n      location,\r\n      mapCenter,\r\n      sdgCheckBoxes,\r\n      totalNumberOfBeneficiaries,\r\n      budget,\r\n      mySdg,\r\n      indicatorCheckBoxes,\r\n    };\r\n    // this.props.createProject(payload);\r\n    // appHelpers.successMessageAlert(\"Programme Successfully Created\");\r\n    const { ServiceBase, Constants } = this.props;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        accessToken: this.props.auth.data.accessToken,\r\n      },\r\n    };\r\n    const locations = {\r\n      name: location.formattedSuggestion.mainText,\r\n      description: location.description,\r\n      lat: mapCenter.lat,\r\n      long: mapCenter.lng,\r\n    };\r\n    const activeMarker = {\r\n      name: location.formattedSuggestion.mainText,\r\n      description: location.description,\r\n      lat: mapCenter.lat,\r\n      long: mapCenter.lng,\r\n    };\r\n    // const sdgs = appHelpers.formatSdgsPayload(indicatorCheckBoxes,sdgCheckBoxes,this.state.sdgDump)\r\n\r\n    const finalSdgChecks = this.state.sdgChecks.map((q, i) => {\r\n      return {\r\n        ...q,\r\n        indicators: appHelpers.returnIndicatorsOnly(q.indicators),\r\n      };\r\n    });\r\n    const sdgs = appHelpers.formatSdgsIndicatorsPayload(finalSdgChecks);\r\n    let apiPayload = new FormData();\r\n    apiPayload.append(\"name\", name);\r\n    apiPayload.append(\"description\", description);\r\n    apiPayload.append(\"code\", code);\r\n    apiPayload.append(\"budget\", budget);\r\n    apiPayload.append(\"totalNumberOfBeneficiaries\", totalNumberOfBeneficiaries);\r\n    apiPayload.append(\"locations\", JSON.stringify(locations));\r\n    apiPayload.append(\"sdgs\", JSON.stringify(sdgs));\r\n    apiPayload.append(\"activeMarker\", JSON.stringify(activeMarker));\r\n    apiPayload.append(\"image\", this.state.fileForm, this.state.fileForm.name);\r\n\r\n    ServiceBase.uploadProgram(Constants.PROGRAMS, apiPayload)\r\n      .then(({ data }) => {\r\n        if (data) {\r\n          appHelpers.successMessageAlert(data.message);\r\n          this.setState({ creating: false });\r\n          this.resetPage();\r\n        } else {\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          appHelpers.failedRequestAlert(err.response.data.message, 3500);\r\n          this.setState({ creating: false });\r\n        }\r\n      });\r\n  }\r\n\r\n  cancelProject() {\r\n    appHelpers.canceledRequestAlert(\"Project Cancelled!\");\r\n    window.location.reload();\r\n  }\r\n\r\n  resetPage = () => {\r\n    this.setState({\r\n      impactManagerFormOne: true,\r\n      impactManagerFormTwo: false,\r\n      impactManagerFormThree: false,\r\n      impactManagerSummary: false,\r\n      name: \"\",\r\n      code: \"\",\r\n      address: \"\",\r\n      description: \"\",\r\n      files: [],\r\n      fileForm: null,\r\n      sdgCheckBoxes: {},\r\n      sdgChecks: [],\r\n      indicatorCheckBoxes: {},\r\n      location: {},\r\n    });\r\n  };\r\n\r\n  goBack = () => {\r\n    this.setState({ impactManagerFormOne: true, impactManagerFormTwo: false });\r\n  };\r\n\r\n  goBackTwo = () => {\r\n    this.setState({\r\n      impactManagerFormTwo: true,\r\n      impactManagerFormThree: false,\r\n    });\r\n  };\r\n\r\n  handleCheckboxChange = (\r\n    indicatorValue,\r\n    e,\r\n    indicatorIndex,\r\n    sdgIndex,\r\n    indicatorID\r\n  ) => {\r\n    const { allIndicators, sdgChecks } = this.state;\r\n    const newIndicators = allIndicators.map((indicator, id) => {\r\n      if (indicatorIndex !== id) return indicator;\r\n      return {\r\n        ...indicator,\r\n        status: e.target.checked,\r\n      };\r\n    });\r\n\r\n    const newSdgChecks = sdgChecks.map((q, i) =>\r\n      q.id === sdgIndex\r\n        ? {\r\n            ...q,\r\n            indicators: q.indicators.map((o, i) =>\r\n              i === indicatorIndex\r\n                ? {\r\n                    ...o,\r\n                    status: e.target.checked,\r\n                  }\r\n                : o\r\n            ),\r\n          }\r\n        : q\r\n    );\r\n    this.setState({\r\n      indicatorCheckBoxes: {\r\n        ...this.state.indicatorCheckBoxes,\r\n        [indicatorID]: indicatorValue,\r\n      },\r\n      allIndicators: newIndicators,\r\n      sdgChecks: newSdgChecks,\r\n    });\r\n  };\r\n\r\n  updateSvgState = (sdg) => {\r\n    const { sdgChecks, sdgDump } = this.state;\r\n\r\n    let filtered = sdgDump.filter((item) => {\r\n      return parseInt(item.id) === parseInt(sdg);\r\n    });\r\n    const obj = Object.assign({}, ...filtered);\r\n    const svgExist = appHelpers.containsObject(obj, sdgChecks);\r\n    if (svgExist === true) {\r\n      this.setState({\r\n        sdgCheckBoxes: {\r\n          ...this.state.sdgCheckBoxes,\r\n          [sdg]: !this.state.sdgCheckBoxes[sdg],\r\n        },\r\n      });\r\n      this.setState((prevState) => ({\r\n        sdgChecks: prevState.sdgChecks.filter((SDG) => SDG.id !== obj.id),\r\n      }));\r\n    } else {\r\n      this.setState(\r\n        {\r\n          sdgCheckBoxes: {\r\n            ...this.state.sdgCheckBoxes,\r\n            [sdg]: !this.state.sdgCheckBoxes[sdg],\r\n          },\r\n          sdgChecks: [...this.state.sdgChecks, Object.assign({}, ...filtered)],\r\n        },\r\n        () => {\r\n          //\r\n          this.setState({\r\n            allIndicators: appHelpers.returnIndicators(\r\n              this.state.sdgCheckBoxes,\r\n              sdgDump\r\n            ),\r\n          });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  handleSdgBoxChange = (sdgNum, event) => {\r\n    this.updateSvgState(sdgNum);\r\n  };\r\n\r\n  editProjectProfile = () => {\r\n    this.setState({\r\n      impactManagerSummary: false,\r\n      impactManagerFormOne: true,\r\n      impactManagerFormTwo: false,\r\n      impactManagerFormThree: false,\r\n    });\r\n  };\r\n  editSdgGoals = () => {\r\n    this.setState({\r\n      impactManagerSummary: false,\r\n      impactManagerFormOne: false,\r\n      impactManagerFormTwo: true,\r\n      impactManagerFormThree: false,\r\n    });\r\n  };\r\n  editProjectIndicators = () => {\r\n    this.setState({\r\n      impactManagerSummary: false,\r\n      impactManagerFormOne: false,\r\n      impactManagerFormTwo: false,\r\n      impactManagerFormThree: true,\r\n    });\r\n  };\r\n\r\n  handleDrop = (file) => {\r\n    this.setState({\r\n      fileForm: file[0],\r\n      files: file.map((file) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file),\r\n        })\r\n      ),\r\n    });\r\n  };\r\n  render() {\r\n    //this.props.project.projects\r\n    const { projects } = this.props.project;\r\n    const {\r\n      description,\r\n      code,\r\n      name,\r\n      //projectLocation,\r\n      programmeLocation,\r\n      programmePlaces,\r\n      image,\r\n      impactManagerFormOne,\r\n      impactManagerFormTwo,\r\n      impactManagerFormThree,\r\n      impactManagerSummary,\r\n      totalNumberOfBeneficiaries,\r\n      budget,\r\n      sdgCheckBoxes,\r\n      indicators,\r\n      indicatorCheckBoxes,\r\n      allIndicators,\r\n      formOneErrors,\r\n      formTwoErrors,\r\n      sdgDump,\r\n      sdgChecks,\r\n      createBtn,\r\n      creating,\r\n    } = this.state;\r\n    return (\r\n      <Aux>\r\n        <div>\r\n          <div\r\n            className=\"site-layout-background\"\r\n            style={{ padding: 24, minHeight: 360 }}\r\n          >\r\n            {\" \"}\r\n            <div>\r\n              {/* Page One */}\r\n              {impactManagerFormOne && (\r\n                <Card>\r\n                  <Meta\r\n                    title={CardTitleForm1}\r\n                    description=\"Design your own impact profile based on your programme priorities and needs\"\r\n                  />\r\n                  <Divider />\r\n                  <ImpactManagerForm1\r\n                    description={description}\r\n                    name={name}\r\n                    code={code}\r\n                    image={image}\r\n                    programmePlaces={programmePlaces}\r\n                    programmeLocation={programmeLocation}\r\n                    files={this.state.files}\r\n                    handleDrop={this.handleDrop}\r\n                    // projectLocation={projectLocation}\r\n                    handleInputChange={this.handleInputChange}\r\n                    handleSelectChange={this.handleSelectChange}\r\n                    handleBannerChange={this.handleBannerChange}\r\n                    normFile={this.normFile}\r\n                    formOneErrors={formOneErrors}\r\n                    totalNumberOfBeneficiaries={totalNumberOfBeneficiaries}\r\n                    budget={budget}\r\n                    // locationsEnum={locationsEnum}\r\n                    address={this.state.address}\r\n                    handleChangePlace={this.handleChangePlace}\r\n                    handleSelectPlace={this.handleSelectPlace}\r\n                  />\r\n                  <br />\r\n                  <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    onClick={this.openImageManagerFormTwo}\r\n                    style={{\r\n                      backgroundColor: \"#53D1BE\",\r\n                      color: \"white\",\r\n                      borderRadius: \"2rem\",\r\n                      textTransform: \"none\",\r\n                      boxShadow: \"none\",\r\n                      float: \"right\",\r\n                    }}\r\n                  >\r\n                    Save & Continue\r\n                  </Button>\r\n                </Card>\r\n              )}\r\n              {/* Page Two */}\r\n              {impactManagerFormTwo && (\r\n                <Card title={CardTitleForm2}>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#53d1be1a\",\r\n                      paddingLeft: \".5rem\",\r\n                      paddingBottom: \".5rem\",\r\n                      paddingTop: \".5rem\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        fontSize: \"small\",\r\n                        marginBottom: \"0rem\",\r\n                      }}\r\n                    >\r\n                      First, select the Sustainable Development Goals (SDGs).\r\n                    </p>\r\n                    <p\r\n                      style={{\r\n                        fontSize: \"small\",\r\n                        marginBottom: \"0rem\",\r\n                      }}\r\n                    >\r\n                      Next, further specify preferred Indicators that best match\r\n                      your project goals.\r\n                    </p>\r\n                    <p\r\n                      style={{\r\n                        fontSize: \"small\",\r\n                        marginBottom: \"0rem\",\r\n                      }}\r\n                    >\r\n                      Now your priorities are complete. Click Save & View\r\n                      Questions.\r\n                    </p>\r\n                  </div>\r\n                  <ImpactManagerForm2\r\n                    handleInputChange={this.handleInputChange}\r\n                    handleSdgBoxChange={this.handleSdgBoxChange}\r\n                    sdgCheckBoxes={sdgCheckBoxes}\r\n                    formTwoErrors={formTwoErrors}\r\n                    sdgDump={sdgDump}\r\n                    {...this.props}\r\n                  />\r\n\r\n                  <br />\r\n\r\n                  <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    onClick={this.goBack}\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      color: \"#53D1BE\",\r\n                      borderRadius: \"2rem\",\r\n                      textTransform: \"none\",\r\n                      boxShadow: \"none\",\r\n                      borderColor: \"#53D1BE\",\r\n                    }}\r\n                  >\r\n                    <ArrowLeftOutlined />\r\n                    {\"  \"}Back\r\n                  </Button>\r\n                  <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.openImageManagerFormThree}\r\n                    style={{\r\n                      backgroundColor: \"#53D1BE\",\r\n                      color: \"white\",\r\n                      borderRadius: \"2rem\",\r\n                      textTransform: \"none\",\r\n                      boxShadow: \"none\",\r\n                      float: \"right\",\r\n                    }}\r\n                  >\r\n                    Save & Continue\r\n                  </Button>\r\n                </Card>\r\n              )}\r\n              {impactManagerFormThree && (\r\n                <Card title={CardTitleForm3}>\r\n                  <ImpactManagerForm3\r\n                    handleCheckboxChange={this.handleCheckboxChange}\r\n                    sdgCheckBoxes={sdgCheckBoxes}\r\n                    indicators={indicators}\r\n                    indicatorCheckBoxes={indicatorCheckBoxes}\r\n                    allIndicators={allIndicators}\r\n                    sdgDump={sdgDump}\r\n                    sdgChecks={sdgChecks}\r\n                  />\r\n\r\n                  <br />\r\n\r\n                  <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    onClick={this.goBackTwo}\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      color: \"#53D1BE\",\r\n                      borderRadius: \"2rem\",\r\n                      textTransform: \"none\",\r\n                      boxShadow: \"none\",\r\n                      borderColor: \"#53D1BE\",\r\n                    }}\r\n                  >\r\n                    <ArrowLeftOutlined />\r\n                    {\"  \"}Back\r\n                  </Button>\r\n                  <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.openImpactManagerSummary}\r\n                    style={{\r\n                      backgroundColor: \"#53D1BE\",\r\n                      color: \"white\",\r\n                      borderRadius: \"2rem\",\r\n                      textTransform: \"none\",\r\n                      boxShadow: \"none\",\r\n                      float: \"right\",\r\n                    }}\r\n                  >\r\n                    Save & View Answers\r\n                  </Button>\r\n\r\n                  {this.state.alert}\r\n                </Card>\r\n              )}\r\n\r\n              {impactManagerSummary && (\r\n                <div>\r\n                  <ImpactManagerSummary\r\n                    {...this.state}\r\n                    {...this.props}\r\n                    editProjectProfileCallback={this.editProjectProfile}\r\n                    editSdgGoalsCallback={this.editSdgGoals}\r\n                    indicatorCheckBoxes={indicatorCheckBoxes}\r\n                    editProjectIndicatorsCallback={this.editProjectIndicators}\r\n                  />\r\n\r\n                  <br />\r\n\r\n                  <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={this.cancelProject}\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      color: \"red\",\r\n                      borderRadius: \"2rem\",\r\n                      textTransform: \"none\",\r\n                      boxShadow: \"none\",\r\n                      borderColor: \"#53D1BE\",\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  {this.state.alert}\r\n\r\n                  <CustomButton\r\n                    onClick={this.createProject}\r\n                    content={createBtn}\r\n                    loading={creating}\r\n                  />\r\n\r\n                  {this.state.alert}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\n//this.props.project.projects\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.projects,\r\n  auth: state.auth,\r\n});\r\n\r\nconst WrappedContainer = GoogleApiWrapper({\r\n  apiKey: \"AIzaSyB5vf0DbG-X2_Qdya9IPHl1ZbhPdn276gQ\",\r\n})(ImpactManager);\r\n\r\nexport default connect(mapStateToProps, { createProject })(WrappedContainer);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\ActionCard\\index.js",["491","492"],"import React, { Component, useEffect } from \"react\";\r\nimport { Row, Col, Card } from \"antd\";\r\nimport \"./index.css\";\r\nimport { flatten, size, uniqBy } from \"lodash\";\r\nimport { getBudgetandBeneficiaries } from \"../../actions/projectAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst ActionCard = ({ ServiceBase }) => {\r\n  const { programs } = useSelector((state) => state.projects);\r\n  const { totalbudget } = useSelector((state) => state.projects);\r\n  const { totalbeneficiaries } = useSelector((state) => state.projects);\r\n  const { token } = useSelector((state) => state.auth);\r\n  console.log(\"mrPrograms\", programs);\r\n  const handleSdgs = (_programs) => {\r\n    const sdgs = uniqBy(flatten(_programs?.map(({ sdgs }) => sdgs)), \"sdgId\");\r\n    return sdgs || [];\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getBudgetandBeneficiaries(ServiceBase));\r\n  }, [token, dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Col span={24}>\r\n        <Card className={\"actionCard\"}>\r\n          <Row>\r\n            <Col xs={{ span: 24 }} lg={{ span: 6 }}>\r\n              <span className={\"actionItemStyle\"}>Programmes</span>\r\n              <p className={\"actionItemParagraph\"}>{size(programs)}</p>\r\n            </Col>\r\n\r\n            <Col xs={{ span: 24 }} lg={{ span: 6 }}>\r\n              <span className={\"actionItemStyle\"}>Impact Targets (SDG)</span>\r\n              <p className={\"actionItemParagraph\"}>\r\n                {size(handleSdgs(programs))}\r\n              </p>\r\n            </Col>\r\n            <Col xs={{ span: 24 }} lg={{ span: 6 }}>\r\n              <span className={\"actionItemStyle\"}>Total Beneficiaries</span>\r\n              <p className={\"actionItemParagraph\"}>{totalbeneficiaries}</p>\r\n            </Col>\r\n            <Col xs={{ span: 24 }} lg={{ span: 6 }}>\r\n              <span className={\"actionItemStyle\"}>Budget</span>\r\n              <p className={\"actionItemParagraph\"}>{totalbudget}</p>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionCard;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\DoughnutChart\\index.js",["493","494","495"],"import React, { Component } from \"react\";\r\nimport { Card, Skeleton, Typography } from \"antd\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport \"./index.css\";\r\nimport { connect } from \"react-redux\";\r\nimport _, { flatten, uniqBy } from \"lodash\";\r\n\r\nconst renderObjects =  (programs) => {\r\n  const sdgs = uniqBy(flatten(programs?.map(({sdgs}) => sdgs)),'sdgId')\r\n  const sdgsNames = sdgs?.map(({name}) => name)\r\n  console.log(sdgsNames)\r\n  return sdgsNames; \r\n};\r\n\r\nconst renderOccurence = (programs) => {\r\n  const sdgs = flatten(programs?.map(({sdgs}) => sdgs))\r\n  const sdgsNames = sdgs?.map(({name}) => name)\r\n  const countOccurrences = (arr) => arr.reduce((prev, curr) => ((prev[curr] = ++prev[curr] || 1), prev), {});\r\n\r\n  const counts = countOccurrences(sdgsNames);\r\n  console.log(counts)\r\n  return Object.values(counts);\r\n};\r\n\r\nexport class DoughnutChart extends Component {\r\n\r\n  colorArray = [\r\n    \"#4DB380\",\r\n    \"#FF4D4D\",\r\n    \"#99E6E6\",\r\n    \"#6666FF\",\r\n    \"#FF6633\",\r\n    \"#FFB399\",\r\n    \"#FF33FF\",\r\n    \"#FFFF99\",\r\n    \"#00B3E6\",\r\n    \"#E6B333\",\r\n    \"#3366E6\",\r\n    \"#999966\",\r\n    \"#99FF99\",\r\n    \"#B34D4D\",\r\n    \"#80B300\",\r\n    \"#809900\",\r\n    \"#E6B3B3\",\r\n    \"#6680B3\",\r\n    \"#66991A\",\r\n    \"#FF99E6\",\r\n    \"#CCFF1A\",\r\n    \"#FF1A66\",\r\n    \"#E6331A\",\r\n    \"#33FFCC\",\r\n    \"#66994D\",\r\n    \"#B366CC\",\r\n    \"#4D8000\",\r\n    \"#B33300\",\r\n    \"#CC80CC\",\r\n    \"#66664D\",\r\n    \"#991AFF\",\r\n    \"#E666FF\",\r\n    \"#4DB3FF\",\r\n    \"#1AB399\",\r\n    \"#E666B3\",\r\n    \"#33991A\",\r\n    \"#CC9999\",\r\n    \"#B3B31A\",\r\n    \"#00E680\",\r\n    \"#4D8066\",\r\n    \"#809980\",\r\n    \"#E6FF80\",\r\n    \"#1AFF33\",\r\n    \"#999933\",\r\n    \"#FF3380\",\r\n    \"#CCCC00\",\r\n    \"#66E64D\",\r\n    \"#4D80CC\",\r\n    \"#9900B3\",\r\n    \"#E64D66\",\r\n    \"#4DB380\",\r\n    \"#FF4D4D\",\r\n    \"#99E6E6\",\r\n    \"#6666FF\",\r\n  ];\r\n  data = {\r\n    labels: renderObjects(this.props.project?.programs),\r\n    datasets: [\r\n      {\r\n        label: \"SDGs\",\r\n        backgroundColor: this.colorArray,\r\n        hoverBackgroundColor: [\r\n          \"#A21942\",\r\n          \"#DDA63A\",\r\n          \"#E5243B\",\r\n          \"#C5192D\",\r\n          \"#33991A\",\r\n          \"#CC9999\",\r\n          \"#B3B31A\",\r\n          \"#00E680\",\r\n        ], \r\n        data: renderOccurence(this.props.project?.programs),\r\n      },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <div>\r\n        <Card title={\"Impact Summary\"} className={\"doughnutCard\"}>\r\n          {renderOccurence(this.props.project?.programs).length === 0 ? (\r\n            <div style={{textAlign: 'center'}}>\r\n              <Skeleton active />\r\n            </div>\r\n          ) : (\r\n            <Doughnut\r\n              data={this.data}\r\n              width={100}\r\n              height={100}\r\n              options={{\r\n                legend: {\r\n                  display: true,\r\n                  position: \"bottom\",\r\n                },\r\n              }}\r\n            />\r\n          )}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.projects,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(DoughnutChart);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\ImpactMap\\index.js",["496","497","498"],"import React, { Component } from \"react\";\r\nimport { Card, Skeleton } from \"antd\";\r\nimport \"./index.css\";\r\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { random } from \"lodash\";\r\n\r\nexport class ImpactMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  displayMarkers = () => {\r\n    return this.props.programs.programs?.map((program) => {\r\n      console.log(program)\r\n      return (\r\n        <Marker\r\n          key={program?.locations[0]?.long}\r\n          id={program?.locations[0]?.long}\r\n          position={{\r\n            lat: program?.locations[0]?.lat,\r\n            lng: program?.locations[0]?.long,\r\n          }} \r\n          onClick={() => console.log(`You clicked me! ${program?.name}`)}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"impactT\">\r\n        <h4>Impact Map</h4>\r\n        {this.props.google == undefined ? (\r\n          <Card>\r\n            <Skeleton active />\r\n            <br/>\r\n          </Card> \r\n        ) : (\r\n          <div className=\"map-container\">\r\n            <Map\r\n              google={this.props.google}\r\n              zoom={8}\r\n              style={mapStyles}\r\n              initialCenter={{\r\n                lat:  this.props.programs.programs[0]?.locations[0]?.lat,\r\n                lng:  this.props.programs.programs[0]?.locations[0]?.long,\r\n              }}\r\n            >\r\n              {this.displayMarkers()}\r\n            </Map>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStyles = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  programs: state.projects,\r\n});\r\n\r\nconst WrappedContainer = GoogleApiWrapper({\r\n  apiKey: \"AIzaSyB5vf0DbG-X2_Qdya9IPHl1ZbhPdn276gQ\",\r\n})(ImpactMap);\r\n\r\nexport default connect(mapStateToProps, {})(WrappedContainer);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FundingGraph\\index.js",["499","500","501"],"import React, { Component } from \"react\";\r\nimport { Card, Skeleton } from \"antd\";\r\nimport \"./index.css\";\r\nimport { Bar, Line } from \"react-chartjs-2\";\r\nimport { data } from \"./data\";\r\n\r\nexport class FundingGraph extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"fundingTab\">\r\n        <Card title={\"Funding Status\"} >\r\n          <Skeleton active /> \r\n          {/* <Line\r\n            data={data}\r\n            options={{\r\n              legend: {\r\n                display: true,\r\n                position: \"bottom\",\r\n              },\r\n            }}\r\n          /> */}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FundingGraph;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\IndicatorsCard\\index.js",["502"],"import React, { Component } from \"react\";\r\nimport { Col, Row, Card } from \"antd\";\r\nimport \"./index.css\";\r\nimport CustomCircularProgress from \"../Loader/CustomCircularProgress\";\r\n\r\nconst IndicatorsCard = ({\r\n  loading,\r\n  sdgCount,\r\n  indicatorCount,\r\n  totalNumberOfBeneficiaries,\r\n  budget,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Col span={24}>\r\n          <Card className={\"cardStyle\"}>\r\n            <Row>\r\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\r\n                <span className={\"spanStyle\"}>No of SDGs</span>\r\n                {\r\n                  <p className={\"paragraphStyle\"}>\r\n                    {loading ? <CustomCircularProgress size={25} /> : sdgCount}\r\n                  </p>\r\n                }\r\n              </Col>\r\n\r\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\r\n                <span className={\"spanStyle\"}>Indicators</span>\r\n                {\r\n                  <p className={\"paragraphStyle\"}>\r\n                    {loading ? (\r\n                      <CustomCircularProgress size={25} />\r\n                    ) : (\r\n                      indicatorCount\r\n                    )}\r\n                  </p>\r\n                }\r\n              </Col>\r\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\r\n                <span className={\"spanStyle\"}>Total Beneficiaries</span>\r\n                {\r\n                  <p className={\"paragraphStyle\"}>\r\n                    {loading ? (\r\n                      <CustomCircularProgress size={25} />\r\n                    ) : (\r\n                      totalNumberOfBeneficiaries\r\n                    )}\r\n                  </p>\r\n                }\r\n              </Col>\r\n              <Col xs={{ span: 24 }} lg={{ span: 6 }}>\r\n                <span className={\"spanStyle\"}>Budget</span>\r\n                {\r\n                  <p className={\"paragraphStyle\"}>\r\n                    {loading ? <CustomCircularProgress size={25} /> : budget}\r\n                  </p>\r\n                }\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndicatorsCard;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\PerformanceIndicators\\index.js",["503","504"],"import React, { Component } from \"react\";\r\nimport \"./index.css\";\r\nimport { Layout, Row, Col, Card, Skeleton, Select,Empty } from \"antd\";\r\nimport {Bar} from 'react-chartjs-2'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { getReport } from \"../../actions/reportActions\";\r\nimport {isEmpty } from 'lodash'\r\n\r\nconst { Content } = Layout;\r\n\r\nconst Indicators = ({service,programId, projectDetails}) => {\r\n  const dispatch = useDispatch()\r\n  const {reports,loading} = useSelector(state => state.report)\r\n  const [formName,setFormName] = React.useState('')\r\n\r\n  const generateDataObject = (report) => {\r\n    console.log('reports',report)\r\n    const data = {\r\n      labels: ['Mar'],\r\n      datasets: [\r\n        {\r\n          label: 'Yes',\r\n          data: [report?.submissions?.value?.positive || 0],\r\n          backgroundColor: \"#1a1aff\",\r\n          maxBarThickness: 20,\r\n        },\r\n        {\r\n          label: 'No',\r\n          data: [report?.submissions?.value?.negative || 0],\r\n          backgroundColor: \"#b0b0fc\",\r\n          maxBarThickness: 20,\r\n        },\r\n      ],\r\n    }\r\n\r\n    return data\r\n  }\r\n  \r\n\r\n  React.useEffect(() => {\r\n    if(!isEmpty(formName)){\r\n      dispatch(getReport(`${programId}/${formName}/`,service))\r\n    }\r\n  },[programId,service,dispatch, formName])\r\n  \r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n          gridLines:{\r\n            display: true\r\n          }\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          stacked: true,\r\n          gridLines:{\r\n            display: false\r\n          }\r\n        },\r\n      ],\r\n    }, \r\n  }\r\n\r\n  const handleChange = (value) => {\r\n    setFormName(value)\r\n  }\r\n\r\n      return (\r\n      <div>\r\n        <Content>\r\n          <h1 style={{ fontSize: \"16px\" }}> PERFORMANCE INDICATORS</h1>\r\n          <Select onChange={handleChange} placeholder=\"--Select Linked Form--\" style={{width: \"100%\", margin: \"10px 0\"}}>\r\n            {(projectDetails?.form || [])?.map(({name,path}) => <Select.Option key={path} value={path}>{name}</Select.Option>)}\r\n          </Select>\r\n          <Row>\r\n            {isEmpty(reports) ? <Empty style={{maxWidth:960, margin: \"10rem auto\"}} /> : reports?.map((report,idx) => (\r\n              <Col key={idx} xs={{ span: 24 }} lg={{ span: 12 }}>\r\n                <Card loading={loading} className={\"indicatorCard\"}>\r\n                  <div style={{display:\"flex\", flexDirection:\"row\", justifyItems:\"center\", justifyContent:\"space-between\", padding:\"0 2rem\"}}>\r\n                    <small style={{fontSize: 15}}>{report?.question || ''}</small>\r\n                    <small style={{fontSize: 15}}>{`Target: ${report?.targetValue || ''}`}</small>\r\n                  </div>\r\n                  <Bar\r\n                    data={generateDataObject(report)}\r\n                    width={100}\r\n                    height={60}\r\n                    options={options}\r\n                  />\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Content>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Indicators;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\layouts\\layout-components\\menu\\index.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\layouts\\layout-components\\sidebar\\index.js",["505","506"],"import React, { Component } from \"react\";\r\n\r\nimport {\r\n  DesktopOutlined,\r\n  PieChartOutlined,\r\n  FileOutlined,\r\n  HighlightOutlined,\r\n  ExportOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport LogoTrail from \"../../../assets/Trail2.svg\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport class SideBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: false,\r\n    };\r\n  }\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed: collapsed });\r\n  };\r\n  render() {\r\n    return (\r\n      <Sider\r\n        collapsed={this.state.collapsed}\r\n        onCollapse={this.onCollapse}\r\n        className=\"display-sider\"\r\n        style={{\r\n          border: \"none\",\r\n          backgroundColor: \"#001529\",\r\n          position: \"fixed\",\r\n          zIndex: \"999\",\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        <Menu\r\n          theme=\"dark\"\r\n          mode=\"inline\"\r\n          style={{ backgroundColor: \"#001529\", marginTop: \"100px\" }}\r\n        >\r\n          <div className=\"logos\"></div>\r\n          <Menu.Item\r\n            to=\"/app/dashboard\"\r\n            key=\"1\"\r\n            icon={<PieChartOutlined />}\r\n            style={{ marginBottom: \"20px\" }}\r\n          >\r\n            <Link to=\"/app/dashboard\">Dashboard</Link>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            key=\"2\"\r\n            to=\"/app/dashboard/projects\"\r\n            icon={<DesktopOutlined />}\r\n            style={{ marginBottom: \"20px\" }}\r\n          >\r\n            <Link to=\"/app/dashboard/projects\">Programme Report</Link>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            key=\"3\"\r\n            icon={<HighlightOutlined />}\r\n            style={{ marginBottom: \"20px\" }}\r\n            to=\"/app/dashboard/manager\"\r\n          >\r\n            <Link to=\"/app/dashboard/manager\">Programme Manager</Link>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            key=\"4\"\r\n            icon={<FileOutlined />}\r\n            style={{ marginBottom: \"20px\" }}\r\n            to=\"/app/dashboard/manager\"\r\n          >\r\n            <Link to=\"/app/dashboard/form\"></Link> Forms Management\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\layouts\\layout-components\\footer\\index.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\actions\\formActions.js",["507","508","509"],"import { FORM } from \"../constants/Types\";\r\nimport axios from \"axios\";\r\nimport { appConstants } from \"../constants/app.constants\";\r\nimport { message as alert, message } from \"antd\";\r\nimport { appHelpers } from \"../appHelpers/appHelpers\";\r\nimport {\r\n  FORM as FORM_CONSTANT,\r\n  INDICATOR_QUESTIONS,\r\n  PROGRAMS,\r\n} from \"../Constants\";\r\n\r\nexport const setLoadingState = (payload) => ({\r\n  payload,\r\n  type: FORM.setLoadingState,\r\n});\r\n\r\nexport const buildAnswers = (payload) => ({\r\n  payload,\r\n  type: FORM.buildAnswers,\r\n});\r\n\r\nexport const createForm = (form, service, history) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoadingState(true));\r\n    const response = await service.createItemV1(form, FORM_CONSTANT);\r\n    const { data, message } = response.data;\r\n    alert.success(message);\r\n    dispatch({\r\n      type: FORM.createFormSuccess,\r\n      payload: data,\r\n    });\r\n    history.push(`/app/dashboard/form/preview/${data?.id}`);\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert.error(\r\n      err?.response?.data?.message?.message ||\r\n        \"Something went wrong, Please try again later\"\r\n    );\r\n    dispatch({\r\n      type: FORM.errors,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  } finally {\r\n    dispatch(setLoadingState(false));\r\n  }\r\n};\r\n\r\nexport const getForms = (service, page) => async (dispatch) => {\r\n  dispatch(setLoadingState(true));\r\n  try {\r\n    const response = await service.getPaginatedData(FORM_CONSTANT, page);\r\n    const { data } = response.data;\r\n\r\n    dispatch({\r\n      type: FORM.getFormsSuccess,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err.response);\r\n    dispatch({\r\n      type: FORM.errors,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  } finally {\r\n    dispatch(setLoadingState(false));\r\n  }\r\n};\r\n\r\nexport const getForm = (id, service, endingSlash) => async (dispatch) => {\r\n  dispatch(setLoadingState(true));\r\n  try {\r\n    const response = await service.getDataWithId(\r\n      FORM_CONSTANT,\r\n      id,\r\n      endingSlash\r\n    );\r\n    const { data } = response.data;\r\n\r\n    dispatch({\r\n      type: FORM.getFormSuccess,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    console.log(err.response);\r\n    dispatch({\r\n      type: FORM.errors,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  } finally {\r\n    dispatch(setLoadingState(false));\r\n  }\r\n};\r\n\r\nexport const createSubmission = (id, answers, service) => async (dispatch) => {\r\n  dispatch(setLoadingState(true));\r\n  try {\r\n    const response = await service.createItemWithId(answers, FORM_CONSTANT, id);\r\n    const { data } = response.data;\r\n\r\n    dispatch({\r\n      type: FORM.createSubmissionSuccess,\r\n      payload: data,\r\n    });\r\n    appHelpers.successMessageAlert(\"Form Submitted Successfully\", 2000)\r\n    window.setTimeout(() => {\r\n      window.close()\r\n    },2000)\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: FORM.errors,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  } finally {\r\n    dispatch(setLoadingState(false));\r\n  }\r\n};\r\n\r\nexport const getPrograms = (service) => async (dispatch) => {\r\n  try {\r\n    const response = await service.getItems(PROGRAMS);\r\n    const { data } = response.data;\r\n    dispatch({\r\n      type: FORM.getPrograms,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: FORM.errors,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteForm = (id, service) => async (dispatch) => {\r\n  alert.loading(\"Deleting Form\", 0);\r\n  try {\r\n    await service.deleteItem(FORM_CONSTANT, id);\r\n    dispatch({\r\n      type: FORM.deleteForm,\r\n    });\r\n    appHelpers.successMessageAlert(\"Form Deleted Successfully\", 2000);\r\n    alert.destroy();\r\n    window.location.reload();\r\n  } catch (err) {\r\n    alert.destroy();\r\n    alert.error(\"There was an error deleting this form\");\r\n    dispatch({\r\n      type: FORM.errors,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getIndicatorQuestion = (id, service) => async (dispatch) => {\r\n  try {\r\n\r\n    const response = await service.getDataWithId(INDICATOR_QUESTIONS,id, true)\r\n    dispatch({\r\n      type: FORM.getIndicatorQuestionSuccess,\r\n      payload: response?.data?.data || [],\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    console.log(err.response);\r\n    dispatch({\r\n      type: FORM.errors,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateForm = (form, service, id, history) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoadingState(true));\r\n    const response = await service.updateItemWithId(form, FORM_CONSTANT, id);\r\n    const { data, message } = response.data;\r\n    alert.success(message);\r\n    dispatch({\r\n      type: FORM.createFormSuccess,\r\n      payload: data,\r\n    });\r\n    history.push(`/app/form/preview/${data?.id}`);\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert.error(\r\n      err?.response?.data?.message?.message ||\r\n        \"Something went wrong, Please try again later\"\r\n    );\r\n    dispatch({\r\n      type: FORM.errors,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  } finally {\r\n    dispatch(setLoadingState(false));\r\n  }\r\n};\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FormBuilder.js\\constants.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\appHelpers\\constants.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\PublishedForm\\index.jsx",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\CustomButton\\CustomButton.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\ImpactManager\\ImpactManagerSummary.jsx",["510","511","512","513","514","515"],"import React from \"react\";\r\nimport Aux from \"../hocs/_Aux\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withStore } from \"@spyna/react-store\";\r\nimport { Row, Col, Card } from \"antd\";\r\n//import { sdgDump } from \"./sdgDump\";\r\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\r\nimport SvgCardView from \"../SvgCard/SvgCardView\";\r\nimport IndicatorView from \"../Indicators/IndicatorView\";\r\nimport { EditOutlined } from \"@ant-design/icons\";\r\n\r\nclass ImpactManagerSummary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: this.props.name,\r\n      code: this.props.code,\r\n      projectLocation: this.props.projectLocation,\r\n      image: this.props.image,\r\n      programmeLocation: this.props.programmeLocation,\r\n      description: this.props.description,\r\n      sdgCheckBoxes: this.props.sdgCheckBoxes,\r\n      programmePlaces: this.props.programmePlaces,\r\n      indicators: this.props.indicators,\r\n      allImpacts: this.props.allImpacts,\r\n      sdgDump: this.props.sdgDump,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  editProjectProfile = () => {\r\n    this.props.editProjectProfileCallback();\r\n  };\r\n  editSdgGoals = () => {\r\n    this.props.editSdgGoalsCallback();\r\n  };\r\n\r\n  editProjectIndicators = () => {\r\n    this.props.editProjectIndicatorsCallback();\r\n  };\r\n\r\n  renderSvgCards = () => {\r\n    const filtered = appHelpers.returnSelectedSdgs(\r\n      this.state.sdgCheckBoxes,\r\n      this.state.sdgDump\r\n    );\r\n    const allSdgs = filtered.map((item, index) => {\r\n      return <SvgCardView key={index} path={item.image} width=\"10%\" />;\r\n    });\r\n\r\n    return allSdgs;\r\n  };\r\n\r\n  renderIndicators = () => {\r\n    const indicators = appHelpers.indicatorSummary(this.props.sdgChecks);\r\n    const allIndicators = indicators.map((item, index) => {\r\n      return <IndicatorView key={index} indicator={item.description} />;\r\n    });\r\n    return allIndicators;\r\n\r\n    // this.setState({ allImpacts: allIndicators });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      description,\r\n      code,\r\n      name,\r\n      programmeLocation,\r\n      programmePlaces,\r\n      //projectLocation,\r\n      image,\r\n      sdgChecks,\r\n      sdgDump,\r\n    } = this.state;\r\n    \r\n    return (\r\n      <Aux>\r\n        <Row>\r\n          <Col md={24}>\r\n            <div>\r\n              <Card\r\n                title={\"Programme Profile\"}\r\n                headStyle={{\r\n                  fontSize:\"20px\"\r\n                }}\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                 }}\r\n              >\r\n                <Button\r\n                  size=\"large\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  onClick={this.editProjectProfile}\r\n                  style={{\r\n                    backgroundColor: \"white\",\r\n                    color: \"#53D1BE\",\r\n                    borderRadius: \"2rem\",\r\n                    textTransform: \"none\",\r\n                    boxShadow: \"none\",\r\n                    borderColor: \"#53D1BE\",\r\n                  }}\r\n                >\r\n                  <EditOutlined />\r\n                  Edit\r\n                </Button>\r\n              </Card>\r\n              <Card>\r\n                <Row style={{ display: \"flex\" }}>\r\n                  <Col span={\"12\"}>\r\n                    <h3>Programme Name</h3>\r\n                    <h4 style={{ fontWeight: \"normal\", color: \"grey\" }}>\r\n                      {name}\r\n                    </h4>\r\n                  </Col>\r\n                  <Col span={12}>\r\n                    <h3>Project Code</h3>\r\n                    <h4 style={{ fontWeight: \"normal\", color: \"grey\" }}>\r\n                      {code}\r\n                    </h4>\r\n                  </Col>\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                  <Col span={12}>\r\n                    <h3>Programme Description</h3>\r\n                    <h4 style={{ fontWeight: \"normal\", color: \"grey\" }}>\r\n                      {description}\r\n                    </h4>\r\n                  </Col>\r\n                </Row>\r\n                <br />\r\n                <div>\r\n                  {/* <h6>Programme Location</h6> */}\r\n                  <h6 style={{ fontWeight: \"normal\", color: \"grey\" }}>\r\n                    {/* {programmeLocation} */}\r\n                    {/* {programmePlaces} */}\r\n                  </h6>\r\n                </div>\r\n              </Card>\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <Card\r\n                title={\"Sustainable Development Goals\"}\r\n                headStyle={{\r\n                  fontSize:\"20px\"\r\n                }}\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Button\r\n                  size=\"large\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  onClick={this.editSdgGoals}\r\n                  style={{\r\n                    backgroundColor: \"white\",\r\n                    color: \"#53D1BE\",\r\n                    borderRadius: \"2rem\",\r\n                    textTransform: \"none\",\r\n                    boxShadow: \"none\",\r\n                    borderColor: \"#53D1BE\",\r\n                  }}\r\n                >\r\n                  <EditOutlined />\r\n                  Edit\r\n                </Button>\r\n              </Card>\r\n              <Card>\r\n                <Row>\r\n                  <Col span={\"24\"}>\r\n                    <div style={{ paddingTop: 0 }}>{this.renderSvgCards()}</div>\r\n                  </Col>\r\n                </Row>\r\n              </Card>\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <Card\r\n                title={\"Programme Indicators\"}\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n                headStyle={{\r\n                  fontSize:\"20px\"\r\n                }}\r\n              >\r\n                <Button\r\n                  size=\"large\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  onClick={this.editProjectIndicators}\r\n                  style={{\r\n                    backgroundColor: \"white\",\r\n                    color: \"#53D1BE\",\r\n                    borderRadius: \"2rem\",\r\n                    textTransform: \"none\",\r\n                    boxShadow: \"none\",\r\n                    borderColor: \"#53D1BE\",\r\n                  }}\r\n                >\r\n                  <EditOutlined />\r\n                  Edit\r\n                </Button>\r\n              </Card>\r\n              <Card style={{ paddingTop: 0 }}>\r\n                <h6 style={{ fontWeight: \"normal\", color: \"grey\" }}>\r\n                  {this.renderIndicators()}\r\n                </h6>\r\n              </Card>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImpactManagerSummary;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\ImpactManager\\ImpactManagerForm3.jsx",["516","517","518","519","520","521","522","523","524","525","526","527"],"import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { Grid, Checkbox, FormControlLabel } from \"@material-ui/core\";\r\n//import { sdgDump } from \"./sdgDump\";\r\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Row, Col, Select } from \"antd\";\r\nimport SvgCard from \"../SvgCard/SvgCard\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nconst { Option } = Select;\r\nconst styles = (theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(),\r\n    marginRight: theme.spacing(),\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    display: \"block\",\r\n    margin: \"50px\",\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  formRoot: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  searchButton: {\r\n    backgroundColor: \" #66bb6a\",\r\n  },\r\n  select: {\r\n    marginTop: \"0px\",\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(),\r\n    marginTop: \"16px\",\r\n    color: \"#ffffff\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n    paddingTop: \"15px\",\r\n    paddingBottom: \"15px\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nconst renderIndicators = (indicators, props, sdgIndex) => {\r\n  const {sdgDump} = props\r\n  const { allIndicators } = props;\r\n  const allUIIndicators = indicators.map((item, index) => {\r\n    return (\r\n      <FormControlLabel\r\n        key={index}\r\n        style={{ width: \"100%\", }}\r\n        control={\r\n          <Checkbox\r\n            checked={item.status}\r\n            onChange={(e) =>\r\n              props.handleCheckboxChange(\r\n                item.description,\r\n                e,\r\n                index,\r\n                sdgIndex,\r\n                item.id\r\n              )\r\n            }\r\n            value={item.description}\r\n          />\r\n        }\r\n        label={item.description}\r\n      />\r\n    );\r\n  });\r\n  return allUIIndicators;\r\n};\r\n\r\nconst returnSdgPanels = (sdgChecks, classes, props, sdgDump) => {\r\n  const { allIndicators } = props;\r\n  const sdgPanels = sdgChecks.map((opt, index) => {\r\n    return (\r\n      <ExpansionPanel key={index}>\r\n        <Grid container spacing={1}>\r\n          <ExpansionPanelSummary\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n          >\r\n            <SvgCard\r\n              key={index}\r\n              path={opt.image}\r\n              alt={opt.image}\r\n              height={150}\r\n              opacity={\"1\"}\r\n              style={{ height: \"10px\" }}\r\n            />\r\n            <Grid item xs={3} sm={3}>\r\n              <Typography className={classes.heading}>{opt.description}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <div\r\n                style={{\r\n                  overflowX: \"auto\",\r\n                  width: \"100%\",\r\n                  height: \"200px\",\r\n                }}\r\n                className=\"impact\"\r\n              >\r\n                <form\r\n                  className={classes.container}\r\n                  style={{ width: \"100%\" }}\r\n                  noValidate\r\n                >\r\n                  {renderIndicators(opt.indicators, props, opt.id)}\r\n                </form>\r\n              </div>\r\n            </Grid>\r\n          </ExpansionPanelSummary>\r\n        </Grid>\r\n      </ExpansionPanel>\r\n    );\r\n  });\r\n\r\n  return sdgPanels;\r\n};\r\n\r\nfunction ImpactManagerForm3(props) {\r\n  const { classes } = props;\r\n  const {sdgDump} = props\r\n  const { allIndicators, sdgChecks } = props;\r\n\r\n  return (\r\n    <div className={`flex items-center ${classes.root}`}>\r\n      <Grid container spacing={8}>\r\n        {/* <Grid item sm={4} md={12}>\r\n          <form className={classes.container} noValidate>\r\n            {renderIndicators(allIndicators, props)}\r\n          </form>\r\n        </Grid> */}\r\n\r\n        <Grid item sm={4} md={12}>\r\n          <div className={classes.root}>\r\n            {returnSdgPanels(sdgChecks, classes, props, sdgDump)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(ImpactManagerForm3);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\ImpactManager\\ImpactManagerForm1.jsx",["528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561"],"import React, { useState, useEffect, useRef, useMemo } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  MenuItem,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\nimport { Upload, Form, Row, Col, Button } from \"antd\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport ImpactManagerSummary from \"./ImpactManagerSummary\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport ImageUpload from \"../Upload/ImageUpload\";\r\nimport TopSpace from \"../Space/TopSpace\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst styles = (theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: 0,\r\n    marginRight: theme.spacing(),\r\n    marginTop: 0,\r\n    width: \"100%\",\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  formRoot: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  searchButton: {\r\n    backgroundColor: \" #66bb6a\",\r\n  },\r\n  select: {\r\n    marginTop: \"0px\",\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(),\r\n    marginTop: \"16px\",\r\n    color: \"#ffffff\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n    paddingTop: \"15px\",\r\n    paddingBottom: \"15px\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  padding: \"20px\",\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: \"#eeeeee\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#fafafa\",\r\n  color: \"#bdbdbd\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: \"#2196f3\",\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\",\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\",\r\n};\r\n\r\nconst thumbsContainer = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  flexWrap: \"wrap\",\r\n  marginTop: 16,\r\n};\r\n\r\nconst thumb = {\r\n  display: \"inline-flex\",\r\n  borderRadius: 2,\r\n  border: \"1px solid #eaeaea\",\r\n  marginBottom: 8,\r\n  marginRight: 8,\r\n  width: \"auto\",\r\n  height: 200,\r\n  padding: 4,\r\n  boxSizing: \"border-box\",\r\n};\r\n\r\nconst thumbInner = {\r\n  display: \"flex\",\r\n  minWidth: 0,\r\n  overflow: \"hidden\",\r\n};\r\n\r\nconst img = {\r\n  display: \"block\",\r\n  width: \"auto\",\r\n  height: \"100%\",\r\n};\r\n\r\nfunction ImpactManagerForm1(props) {\r\n  const {\r\n    classes,\r\n    description,\r\n    code,\r\n    name,\r\n    //projectLocation,\r\n    programmeLocation,\r\n    formOneErrors,\r\n    //locationsEnum,\r\n    image,\r\n    programmePlaces,\r\n    address,\r\n    totalNumberOfBeneficiaries,\r\n    budget,\r\n    handleDrop,\r\n    files,\r\n  } = props;\r\n\r\n  const {\r\n    handleInputChange,\r\n    handleSelectChange,\r\n    handleBannerChange,\r\n    handleChangePlace,\r\n    handleSelectPlace,\r\n    normFile,\r\n  } = props;\r\n\r\n  return (\r\n    <div className={`flex items-center ${classes.root}`}>\r\n      <Row>\r\n        <Col span={5}>\r\n          <h4 className=\"m-0 p-0\">Banner Image</h4>\r\n          <TopSpace length={6} />\r\n          <ImageUpload handleDrop={handleDrop} files={files} />\r\n        </Col>\r\n      </Row>\r\n      <TopSpace length={10} />\r\n      <Row>\r\n        <Col span={8}>\r\n          <form className={classes.container} noValidate>\r\n            <h4 for=\"project-name\" style={{ margin: 0 }}>\r\n              Programme Name\r\n            </h4>\r\n            <TextField\r\n              id=\"project-name\"\r\n              error={formOneErrors.name}\r\n              name={\"name\"}\r\n              value={name}\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={handleInputChange}\r\n            />\r\n          </form>\r\n        </Col>\r\n        <Col span={1}></Col>\r\n        <Col span={4}>\r\n          <form className={classes.container} noValidate>\r\n            <h4 for=\"project-code\" style={{ margin: 0 }}>\r\n              Programme Budget\r\n            </h4>\r\n            <TextField\r\n              id=\"project-budget\"\r\n              name={\"budget\"}\r\n              error={formOneErrors.code}\r\n              value={budget}\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={handleInputChange}\r\n            />\r\n          </form>\r\n        </Col>\r\n        <Col span={1}></Col>\r\n        <Col span={5}>\r\n          <form className={classes.container} noValidate>\r\n            <h4 for=\"project-beneficiaries\" style={{ margin: 0 }}>\r\n              Total Number of Beneficiaries\r\n            </h4>\r\n            <TextField\r\n              id=\"project-beneficiaries\"\r\n              name={\"totalNumberOfBeneficiaries\"}\r\n              error={formOneErrors.code}\r\n              value={totalNumberOfBeneficiaries}\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              type=\"number\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={handleInputChange}\r\n            />\r\n          </form>\r\n        </Col>\r\n        <Col span={1}></Col>\r\n        <Col span={4}>\r\n          <form className={classes.container} noValidate>\r\n            <h4 for=\"project-code\" style={{ margin: 0 }}>\r\n              Programme Code\r\n            </h4>\r\n            <TextField\r\n              id=\"project-code\"\r\n              name={\"code\"}\r\n              error={formOneErrors.code}\r\n              value={code}\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={handleInputChange}\r\n            />\r\n          </form>\r\n        </Col>\r\n        <Col span={10}>\r\n          <form className={classes.container} noValidate>\r\n            <h4 for=\"outlined-select-currency\" style={{ margin: 0 }}>\r\n              Programme Location\r\n            </h4>\r\n            <FormControl fullWidth required>\r\n              <PlacesAutocomplete\r\n                className={classes.textField}\r\n                variant=\"outlined\"\r\n                value={address}\r\n                onChange={handleChangePlace}\r\n                onSelect={handleSelectPlace}\r\n              >\r\n                {({\r\n                  getInputProps,\r\n                  suggestions,\r\n                  getSuggestionItemProps,\r\n                  loading,\r\n                }) => (\r\n                  <div>\r\n                    <input\r\n                      style={{\r\n                        padding: \"15px\",\r\n                        width: \"100%\",\r\n                        border: \"1px solid rgba(0, 0, 0, 0.23)\",\r\n                        borderRadius: \"4px\",\r\n                      }}\r\n                      {...getInputProps({\r\n                        placeholder: \"Search Location\",\r\n                        className: \"location-search-input\",\r\n                      })}\r\n                    />\r\n                    <div className=\"autocomplete-dropdown-container\">\r\n                      {loading && <div>...</div>}\r\n                      {suggestions.map((suggestion) => {\r\n                        const className = suggestion.active\r\n                          ? \"suggestion-item--active\"\r\n                          : \"suggestion-item\";\r\n                        // inline style for demonstration purpose\r\n                        const style = suggestion.active\r\n                          ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\r\n                          : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\r\n                        return (\r\n                          <div\r\n                            {...getSuggestionItemProps(suggestion, {\r\n                              className,\r\n                              style,\r\n                            })}\r\n                          >\r\n                            <span>{suggestion.description}</span>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </PlacesAutocomplete>\r\n            </FormControl>\r\n          </form>\r\n        </Col>\r\n        <Col span={1}></Col>\r\n      \r\n      </Row>\r\n\r\n      <Grid container spacing={3}>\r\n        {/* Project Name */}\r\n\r\n        {/* Project Banner */}\r\n        <Grid item sm={3} md={3}></Grid>\r\n\r\n        {/* Project Location */}\r\n        <Grid item sm={3} md={3}></Grid>\r\n      </Grid>\r\n\r\n      {/* Second Row */}\r\n\r\n      <Grid container spacing={8}>\r\n        {/* Project Description */}\r\n        <Grid item sm={4} md={12}>\r\n          <form className={classes.container} noValidate>\r\n            <h4 for=\"project-description\" style={{ margin: 0 }}>\r\n              Programme Description\r\n            </h4>\r\n            <TextField\r\n              id=\"project-description\"\r\n              name={\"description\"}\r\n              value={description}\r\n              error={formOneErrors.description}\r\n              multiline\r\n              rows={4}\r\n              rowsMax={6}\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={handleInputChange}\r\n            />\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(ImpactManagerForm1);\r\n\r\n// export default GoogleApiWrapper({\r\n//   apiKey: \"AIzaSyB5vf0DbG-X2_Qdya9IPHl1ZbhPdn276gQ\",\r\n// })(MapContainer);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\ImpactManager\\ImpactManagerForm2.jsx",["562","563","564","565","566","567","568","569","570","571"],"import React, { useState, useEffect } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { withStore } from \"@spyna/react-store\";\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\n//import { sdgDump } from \"./sdgDump\";\r\nimport SvgCard from \"../SvgCard/SvgCard\";\r\nimport axios from \"axios\";\r\nconst styles = (theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(),\r\n    marginRight: theme.spacing(),\r\n    width: \"100%\",\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  formRoot: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  searchButton: {\r\n    backgroundColor: \" #66bb6a\",\r\n  },\r\n  select: {\r\n    marginTop: \"0px\",\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(),\r\n    marginTop: \"16px\",\r\n    color: \"#ffffff\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n    paddingTop: \"15px\",\r\n    paddingBottom: \"15px\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\n\r\n\r\nconst ImpactManagerForm2 = (props) => {\r\n  const [sdgDumping, setSdgDumping] = useState(\"\");\r\n\r\n\r\n  console.log(\"props in form 2\",props)\r\n  // useEffect(() => {\r\n  //   async function fetchSdgDump() {\r\n  //    const config = {\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\",\r\n  //         accessToken: props.auth.data.accessToken,\r\n  //       },\r\n  //     };\r\n  //     let result = await axios.get(\r\n  //       \"http://trail-api.test.vggdev.com/sdgs/all/indicators\",\r\n  //       config\r\n  //     );\r\n  //     setSdgDumping(result.data.data);\r\n  //   }\r\n\r\n  //   fetchSdgDump();\r\n  // }, []); \r\n  \r\n  const { classes } = props;\r\n\r\n  const setOpacity = (sdgCheckBoxes, sdgNum) => {\r\n    let opacity = \"\";\r\n    if (sdgCheckBoxes[sdgNum] === true) {\r\n      opacity = \"1\";\r\n    } else {\r\n      opacity = \"0.3\";\r\n    }\r\n    return opacity;\r\n  };\r\n\r\n  const {\r\n    handleInputChange,\r\n    handleSdgBoxChange,\r\n    sdgCheckBoxes,\r\n    formTwoErrors,\r\n    sdgDump,\r\n  } = props;\r\n\r\n  const renderSdgs = () => {\r\n    const allSdgs =props.sdgDump&& props.sdgDump.map((item, index) => {\r\n      return (\r\n        <SvgCard\r\n          key={index}\r\n          path={item.image}\r\n          width={120}\r\n          height={120}\r\n          sdgCheckBoxes={sdgCheckBoxes}\r\n          opacity={setOpacity(sdgCheckBoxes, item.id)}\r\n          onClick={handleSdgBoxChange.bind(this, item.id)}\r\n        />\r\n      );\r\n    });\r\n\r\n    return allSdgs;\r\n  };\r\n\r\n  return (\r\n    <div className={`flex items-center ${classes.root}`}>\r\n      <Grid>\r\n        <Grid item sm={4} md={12}>\r\n          <p\r\n            style={{\r\n              color: formTwoErrors.svg === true ? \"red\" : \"black\",\r\n              marginTop: \"15px\",\r\n            }}\r\n          >\r\n            Which SDGs aligns with your impact priorities?\r\n          </p>\r\n\r\n          <Grid item sm={12} md={12}>\r\n            {renderSdgs(sdgDump)}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ImpactManagerForm2);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\actions\\reportActions.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Loader\\CustomCircularProgress.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FundingGraph\\data.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\layouts\\layout-components\\menu\\RightMenu.js",["572","573","574","575","576","577","578","579","580"],"import React, { useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logout, loadUser } from \"../../../actions/authAuctions\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport { Menu, Grid } from \"antd\";\r\nimport { Link } from \"@material-ui/core\";\r\nimport { CLEAR_SESS } from \"../../../constants/Types\";\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const RightMenu = (props) => {\r\n  const { logout, user, loadUser, isAuthenticated, auth, history } = props;\r\n  const { data } = auth;\r\n  const { userData } = props;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // loadUser();\r\n    //eslint-disable-next-line\r\n\r\n    console.log(\"props in right menu\", props);\r\n  }, []);\r\n\r\n  const onLogout = () => {\r\n    localStorage.clear();\r\n    dispatch({\r\n      type: CLEAR_SESS,\r\n      payload: {},\r\n    });\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  const onDashboardClick = () => {\r\n    props.history.push(\"/app/dashboard\");\r\n  };\r\n\r\n  const onProgramClick = () => {\r\n    props.history.push(\"/app/dashboard/projects\");\r\n  };\r\n\r\n  const onManagerClick = () => {\r\n    props.history.push(\"/app/dashboard/manager\");\r\n  };\r\n\r\n  const onFormClick = () => {\r\n    props.history.push(\"/app/dashboard/form\");\r\n  };\r\n\r\n  const { md } = useBreakpoint();\r\n  return (\r\n    <Menu mode={md ? \"horizontal\" : \"inline\"}>\r\n      <SubMenu\r\n        key=\"sub1\"\r\n        title={`${userData && userData.firstName} ${\r\n          userData && userData.lastName\r\n        }`}\r\n      >\r\n        <Menu.Item key=\"setting:1\" className={\"blindMenu\"}>\r\n          <Link to=\"/app/dashboard\" onClick={onDashboardClick}>\r\n            Dashboard\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"setting:2\" className={\"blindMenu\"}>\r\n          <Link to=\"/app/dashboard/projects\" onClick={onProgramClick}>\r\n            Program Report\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"setting:3\" className={\"blindMenu\"}>\r\n          <Link to=\"/app/dashboard/manager\" onClick={onManagerClick}>\r\n            Programme Manager\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"setting:4\" className={\"blindMenu\"}>\r\n          <Link to=\"/app/dashboard/form\" onClick={onFormClick}>\r\n            Forms\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"setting:5\">\r\n          <Link onClick={onLogout}>Logout</Link>\r\n        </Menu.Item>\r\n      </SubMenu>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nRightMenu.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout, loadUser })(RightMenu);\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\layouts\\layout-components\\menu\\LeftMenu.js",["581","582"],"import \"./index.css\";\r\nimport React from \"react\";\r\nimport { Menu, Grid } from \"antd\";\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst LeftMenu = () => {\r\n  const { md } = useBreakpoint();\r\n  return <Menu mode={md ? \"horizontal\" : \"inline\"}></Menu>;\r\n};\r\n\r\nexport default LeftMenu;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\PublishedForm\\Summary.jsx",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\PublishedForm\\Questions.jsx",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FormPreview\\index.jsx",["583","584"],"import React, { useEffect } from \"react\";\r\nimport { ProgrammeSummary } from \"./ProgrammeSummary\";\r\nimport { PreviewQuestions } from \"./PreviewQuestions\";\r\nimport { Button, Col, Row, Skeleton, Typography } from \"antd\";\r\nimport \"./styles.scss\";\r\nimport { dummyForms } from \"../FormIO/constants\";\r\nimport { appHelpers } from \"../../appHelpers/appHelpers\";\r\nimport { getForm } from \"../../actions/formActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst FormPreview = ({ service }) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { token } = useSelector((state) => state.auth);\r\n  const { id } = useParams();\r\n  const { form, loading } = useSelector((state) => state.form);\r\n\r\n  const handleSubmit = () => {\r\n    appHelpers.successMessageAlert(\"Form Successfully Created\", 2000);\r\n    history.push(\"/app/dashboard/form\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"ran\");\r\n    dispatch(getForm(id, service, true));\r\n  }, [id, dispatch, service]);\r\n\r\n  if (loading) return <Skeleton />;\r\n\r\n  console.log(window.location.host);\r\n\r\n  return (\r\n    <section className=\"form-preview-section\">\r\n      <Row gutter={[20, 20]}>\r\n        <Col span={24}>\r\n          <Typography.Paragraph className=\"form-preview-section-link\">\r\n            Generated Link:{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              href={`https://${window.location.host}/app/form/${form.name}-${form.formid}`}\r\n            >\r\n              {\" \"}\r\n              {`https://${window.location.host}/app/form/${form.name}-${form.formid}`}\r\n            </a>\r\n          </Typography.Paragraph>\r\n        </Col>\r\n        <Col span={24}>\r\n          <ProgrammeSummary form={form} />\r\n        </Col>\r\n        <Col span={24}>\r\n          <Typography.Text className=\"form-preview-section-title\">\r\n            Preview Questions\r\n          </Typography.Text>\r\n        </Col>\r\n        <Col span={24}>\r\n          <PreviewQuestions form={form} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            shape=\"round\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default FormPreview;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Space\\TopSpace.js",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Indicators\\IndicatorView.jsx",["585"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst IndicatorView = props => {\r\n  return (\r\n      <>\r\n<label style={{fontSize:\"15px\"}}>{\" - \"}{props.indicator}</label>\r\n      </>\r\n  );\r\n};\r\n\r\nIndicatorView.defaultProps = {};\r\n\r\nIndicatorView.propTypes = {};\r\n\r\nexport default IndicatorView;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\SvgCard\\SvgCard.jsx",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\appHelpers\\Builder.jsx",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FormPreview\\PreviewQuestions.jsx",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Widgets\\ShortFreeText.jsx",["586","587","588"],"import { Typography, InputNumber, Form } from 'antd'\r\nimport { camelCase, isEmpty, startCase } from 'lodash'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { buildAnswers } from '../../actions/formActions'\r\nimport { Layout } from './Layout'\r\n\r\nexport const ShortFreeText = ({ content }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChange = (value) => dispatch(buildAnswers({\r\n        value: content?.inputType,\r\n        answer: value?.toString(),\r\n        questionId: content?.questionId\r\n    }))\r\n\r\n    return (\r\n        <Layout indicatorquestion={content?.indicatorQuestion || ''}  formId={content?.programform} isPreview={content?.isPreview} id={content?.id} question={content?.question} >\r\n            <Form.Item rules={[\r\n                      { required: true, message: \"This field is required\" },\r\n                    ]}>\r\n                <InputNumber onChange={handleChange} style={{width:'100%'}} name={camelCase(content?.key)} placeholder={content?.placeholder}  />\r\n            </Form.Item>\r\n        </Layout>\r\n    )\r\n}\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Widgets\\RadioInput.jsx",["589","590"],"import {Form,Radio} from 'antd'\r\nimport {Layout} from './Layout'\r\nimport React from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport { buildAnswers } from '../../actions/formActions'\r\nimport { isEmpty } from 'lodash'\r\n\r\nexport const RadioInput = ({ content }) => {\r\n    const dispatch = useDispatch()\r\n    console.log(content)\r\n    \r\n    const radioStyle = {\r\n        display: 'block',\r\n        height: '30px',\r\n        lineHeight: '30px',\r\n    };\r\n    console.log('reereas', content)\r\nconsole.log(content)\r\n    const handleChange = (e) => dispatch(buildAnswers({\r\n        value: content?.inputType,\r\n        answer: e.target?.value,\r\n        questionId: content?.questionId\r\n    }))\r\n    \r\n    return (\r\n          <Layout indicatorquestion={content?.indicatorQuestion || ''} formId={content?.programform} isPreview={content?.isPreview} id={content?.id} question={content?.question} >\r\n            <Form.Item>\r\n                <Radio.Group onChange={handleChange}>\r\n                    <Radio style={radioStyle} value={'1'}>Yes</Radio>\r\n                    <Radio style={radioStyle} value={'2'}>No</Radio>\r\n                 </Radio.Group>\r\n            </Form.Item>\r\n        </Layout>\r\n    )\r\n}\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Widgets\\Layout.jsx",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\FormPreview\\ProgrammeSummary.jsx",[],"C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\Upload\\ImageUpload.jsx",["591"],"import React from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport \"./style.css\";\r\n// for profile picture\r\nclass ImageUpload extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const thumbsContainer = {\r\n      width: \"250px\",\r\n      height: \"250px\",\r\n      borderRadius: \"5%\",\r\n      objectFit: \"cover\",\r\n      objectPosition: \"center\",\r\n    };\r\n    const thumbs = this.props.files.map((file) => (\r\n      <img\r\n        src={file.preview}\r\n        style={thumbsContainer}\r\n        alt=\"profile\"\r\n        key={file.size}\r\n      />\r\n    ));\r\n    const render =\r\n      Object.keys(this.props.files).length !== 0 ? (\r\n        this.props.files.map((file) => <aside>{thumbs}</aside>)\r\n      ) : (\r\n        <p className=\"hello\">+ image here to prompt users to click</p>\r\n      );\r\n    return (\r\n      <div className=\"App\">\r\n        <Dropzone\r\n          onDrop={this.props.handleDrop}\r\n          multiple={false}\r\n          style={{\r\n            width: \"10px\",\r\n            height: \"100px\",\r\n            borderRadius: \"50%\",\r\n            objectFit: \"cover\",\r\n            objectPosition: \"center\",\r\n            border: \" 1px dashed\",\r\n          }}\r\n          accept=\"image/png\"\r\n        >\r\n          {({ getRootProps, getInputProps }) => (\r\n            <>\r\n              <div {...getRootProps({ className: \"dropzone\" })}>\r\n                <input {...getInputProps()} />\r\n                <p>Drag'n'drop You logo, or browse</p>\r\n                {thumbs}\r\n              </div>\r\n            </>\r\n          )}\r\n        </Dropzone>\r\n        {/* <div>\r\n        <strong>Files:</strong>\r\n        <ul>\r\n          {this.props.files.map(fileName => (\r\n            <li key={fileName}>{fileName}</li>\r\n          ))}\r\n        </ul>\r\n      </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageUpload;\r\n","C:\\Users\\adbul-qudus.olajide\\Desktop\\ABDQUDUS\\Programming\\Projects\\vgg_dash\\src\\components\\SvgCard\\SvgCardView.jsx",["592"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SvgCardView = props => {\r\n  const {width} = props;\r\n  return (\r\n    <>\r\n      <img href=\"svg\" src={props.path} style={{ width: `${width}`,padding:\".2rem\" }} />\r\n    </>\r\n  );\r\n};\r\n\r\nSvgCardView.defaultProps = {\r\n  path: \"/sdgs/E_SDG_PRINT-01.svg\",\r\n  opacity:\"1\",\r\n  width:\"20%\"\r\n};\r\n\r\nSvgCardView.propTypes = {\r\n  path: PropTypes.string,\r\n  width:PropTypes.string\r\n};\r\n\r\nexport default SvgCardView;\r\n",{"ruleId":"593","severity":1,"message":"594","line":4,"column":10,"nodeType":"595","messageId":"596","endLine":4,"endColumn":23},{"ruleId":"597","replacedBy":"598"},{"ruleId":"599","replacedBy":"600"},{"ruleId":"593","severity":1,"message":"601","line":12,"column":8,"nodeType":"595","messageId":"596","endLine":12,"endColumn":16},{"ruleId":"593","severity":1,"message":"602","line":67,"column":7,"nodeType":"595","messageId":"596","endLine":67,"endColumn":19},{"ruleId":"603","severity":1,"message":"604","line":94,"column":40,"nodeType":"605","messageId":"606","endLine":94,"endColumn":42},{"ruleId":"603","severity":1,"message":"604","line":95,"column":49,"nodeType":"605","messageId":"606","endLine":95,"endColumn":51},{"ruleId":"603","severity":1,"message":"604","line":110,"column":33,"nodeType":"605","messageId":"606","endLine":110,"endColumn":35},{"ruleId":"603","severity":1,"message":"604","line":111,"column":55,"nodeType":"605","messageId":"606","endLine":111,"endColumn":57},{"ruleId":"603","severity":1,"message":"604","line":127,"column":52,"nodeType":"605","messageId":"606","endLine":127,"endColumn":54},{"ruleId":"603","severity":1,"message":"604","line":141,"column":37,"nodeType":"605","messageId":"606","endLine":141,"endColumn":39},{"ruleId":"603","severity":1,"message":"604","line":142,"column":61,"nodeType":"605","messageId":"606","endLine":142,"endColumn":63},{"ruleId":"593","severity":1,"message":"607","line":155,"column":9,"nodeType":"595","messageId":"596","endLine":155,"endColumn":14},{"ruleId":"603","severity":1,"message":"604","line":157,"column":52,"nodeType":"605","messageId":"606","endLine":157,"endColumn":54},{"ruleId":"593","severity":1,"message":"607","line":168,"column":9,"nodeType":"595","messageId":"596","endLine":168,"endColumn":14},{"ruleId":"603","severity":1,"message":"604","line":170,"column":37,"nodeType":"605","messageId":"606","endLine":170,"endColumn":39},{"ruleId":"603","severity":1,"message":"604","line":171,"column":61,"nodeType":"605","messageId":"606","endLine":171,"endColumn":63},{"ruleId":"593","severity":1,"message":"594","line":3,"column":17,"nodeType":"595","messageId":"596","endLine":3,"endColumn":30},{"ruleId":"593","severity":1,"message":"608","line":8,"column":8,"nodeType":"595","messageId":"596","endLine":8,"endColumn":13},{"ruleId":"593","severity":1,"message":"609","line":9,"column":8,"nodeType":"595","messageId":"596","endLine":9,"endColumn":20},{"ruleId":"593","severity":1,"message":"610","line":12,"column":8,"nodeType":"595","messageId":"596","endLine":12,"endColumn":21},{"ruleId":"593","severity":1,"message":"611","line":17,"column":8,"nodeType":"595","messageId":"596","endLine":17,"endColumn":21},{"ruleId":"593","severity":1,"message":"601","line":18,"column":8,"nodeType":"595","messageId":"596","endLine":18,"endColumn":16},{"ruleId":"593","severity":1,"message":"612","line":2,"column":10,"nodeType":"595","messageId":"596","endLine":2,"endColumn":13},{"ruleId":"593","severity":1,"message":"613","line":2,"column":15,"nodeType":"595","messageId":"596","endLine":2,"endColumn":18},{"ruleId":"593","severity":1,"message":"614","line":1,"column":17,"nodeType":"595","messageId":"596","endLine":1,"endColumn":26},{"ruleId":"593","severity":1,"message":"615","line":8,"column":8,"nodeType":"595","messageId":"596","endLine":8,"endColumn":20},{"ruleId":"593","severity":1,"message":"616","line":14,"column":8,"nodeType":"595","messageId":"596","endLine":14,"endColumn":13},{"ruleId":"593","severity":1,"message":"617","line":34,"column":13,"nodeType":"595","messageId":"596","endLine":34,"endColumn":24},{"ruleId":"593","severity":1,"message":"618","line":34,"column":26,"nodeType":"595","messageId":"596","endLine":34,"endColumn":35},{"ruleId":"619","severity":1,"message":"620","line":36,"column":6,"nodeType":"621","endLine":36,"endColumn":23,"suggestions":"622"},{"ruleId":"593","severity":1,"message":"623","line":7,"column":16,"nodeType":"595","messageId":"596","endLine":7,"endColumn":21},{"ruleId":"593","severity":1,"message":"616","line":9,"column":8,"nodeType":"595","messageId":"596","endLine":9,"endColumn":13},{"ruleId":"593","severity":1,"message":"624","line":10,"column":10,"nodeType":"595","messageId":"596","endLine":10,"endColumn":22},{"ruleId":"593","severity":1,"message":"625","line":77,"column":13,"nodeType":"595","messageId":"596","endLine":77,"endColumn":20},{"ruleId":"593","severity":1,"message":"612","line":2,"column":18,"nodeType":"595","messageId":"596","endLine":2,"endColumn":21},{"ruleId":"593","severity":1,"message":"613","line":2,"column":23,"nodeType":"595","messageId":"596","endLine":2,"endColumn":26},{"ruleId":"593","severity":1,"message":"616","line":9,"column":8,"nodeType":"595","messageId":"596","endLine":9,"endColumn":13},{"ruleId":"593","severity":1,"message":"624","line":10,"column":10,"nodeType":"595","messageId":"596","endLine":10,"endColumn":22},{"ruleId":"593","severity":1,"message":"626","line":2,"column":8,"nodeType":"595","messageId":"596","endLine":2,"endColumn":14},{"ruleId":"593","severity":1,"message":"612","line":3,"column":18,"nodeType":"595","messageId":"596","endLine":3,"endColumn":21},{"ruleId":"593","severity":1,"message":"613","line":3,"column":23,"nodeType":"595","messageId":"596","endLine":3,"endColumn":26},{"ruleId":"593","severity":1,"message":"626","line":2,"column":8,"nodeType":"595","messageId":"596","endLine":2,"endColumn":14},{"ruleId":"593","severity":1,"message":"612","line":3,"column":18,"nodeType":"595","messageId":"596","endLine":3,"endColumn":21},{"ruleId":"593","severity":1,"message":"613","line":3,"column":23,"nodeType":"595","messageId":"596","endLine":3,"endColumn":26},{"ruleId":"593","severity":1,"message":"627","line":7,"column":8,"nodeType":"595","messageId":"596","endLine":7,"endColumn":18},{"ruleId":"628","severity":1,"message":"629","line":13,"column":3,"nodeType":"630","messageId":"631","endLine":15,"endColumn":4},{"ruleId":"593","severity":1,"message":"632","line":4,"column":8,"nodeType":"595","messageId":"596","endLine":4,"endColumn":14},{"ruleId":"593","severity":1,"message":"633","line":5,"column":8,"nodeType":"595","messageId":"596","endLine":5,"endColumn":15},{"ruleId":"593","severity":1,"message":"634","line":7,"column":10,"nodeType":"595","messageId":"596","endLine":7,"endColumn":20},{"ruleId":"593","severity":1,"message":"635","line":8,"column":10,"nodeType":"595","messageId":"596","endLine":8,"endColumn":19},{"ruleId":"593","severity":1,"message":"636","line":22,"column":7,"nodeType":"595","messageId":"596","endLine":22,"endColumn":9},{"ruleId":"593","severity":1,"message":"637","line":3,"column":41,"nodeType":"595","messageId":"596","endLine":3,"endColumn":45},{"ruleId":"593","severity":1,"message":"638","line":3,"column":47,"nodeType":"595","messageId":"596","endLine":3,"endColumn":55},{"ruleId":"593","severity":1,"message":"639","line":3,"column":57,"nodeType":"595","messageId":"596","endLine":3,"endColumn":61},{"ruleId":"593","severity":1,"message":"640","line":4,"column":3,"nodeType":"595","messageId":"596","endLine":4,"endColumn":16},{"ruleId":"641","severity":1,"message":"642","line":18,"column":1,"nodeType":"643","endLine":41,"endColumn":3},{"ruleId":"641","severity":1,"message":"644","line":5,"column":1,"nodeType":"643","endLine":14,"endColumn":2},{"ruleId":"641","severity":1,"message":"642","line":14,"column":1,"nodeType":"643","endLine":44,"endColumn":2},{"ruleId":"641","severity":1,"message":"642","line":10,"column":1,"nodeType":"643","endLine":28,"endColumn":2},{"ruleId":"593","severity":1,"message":"637","line":3,"column":41,"nodeType":"595","messageId":"596","endLine":3,"endColumn":45},{"ruleId":"593","severity":1,"message":"638","line":3,"column":47,"nodeType":"595","messageId":"596","endLine":3,"endColumn":55},{"ruleId":"593","severity":1,"message":"639","line":3,"column":57,"nodeType":"595","messageId":"596","endLine":3,"endColumn":61},{"ruleId":"593","severity":1,"message":"645","line":4,"column":10,"nodeType":"595","messageId":"596","endLine":4,"endColumn":22},{"ruleId":"593","severity":1,"message":"646","line":4,"column":24,"nodeType":"595","messageId":"596","endLine":4,"endColumn":36},{"ruleId":"647","severity":1,"message":"648","line":69,"column":15,"nodeType":"649","endLine":69,"endColumn":72},{"ruleId":"593","severity":1,"message":"650","line":195,"column":7,"nodeType":"595","messageId":"596","endLine":195,"endColumn":16},{"ruleId":"593","severity":1,"message":"651","line":5,"column":3,"nodeType":"595","messageId":"596","endLine":5,"endColumn":14},{"ruleId":"593","severity":1,"message":"652","line":6,"column":3,"nodeType":"595","messageId":"596","endLine":6,"endColumn":13},{"ruleId":"593","severity":1,"message":"616","line":11,"column":8,"nodeType":"595","messageId":"596","endLine":11,"endColumn":13},{"ruleId":"593","severity":1,"message":"609","line":12,"column":8,"nodeType":"595","messageId":"596","endLine":12,"endColumn":20},{"ruleId":"593","severity":1,"message":"653","line":36,"column":9,"nodeType":"595","messageId":"596","endLine":36,"endColumn":15},{"ruleId":"593","severity":1,"message":"653","line":65,"column":9,"nodeType":"595","messageId":"596","endLine":65,"endColumn":15},{"ruleId":"593","severity":1,"message":"640","line":4,"column":3,"nodeType":"595","messageId":"596","endLine":4,"endColumn":16},{"ruleId":"593","severity":1,"message":"654","line":5,"column":3,"nodeType":"595","messageId":"596","endLine":5,"endColumn":17},{"ruleId":"593","severity":1,"message":"655","line":10,"column":21,"nodeType":"595","messageId":"596","endLine":10,"endColumn":26},{"ruleId":"593","severity":1,"message":"656","line":10,"column":28,"nodeType":"595","messageId":"596","endLine":10,"endColumn":35},{"ruleId":"593","severity":1,"message":"657","line":11,"column":10,"nodeType":"595","messageId":"596","endLine":11,"endColumn":20},{"ruleId":"593","severity":1,"message":"653","line":49,"column":9,"nodeType":"595","messageId":"596","endLine":49,"endColumn":15},{"ruleId":"593","severity":1,"message":"658","line":4,"column":8,"nodeType":"595","messageId":"596","endLine":4,"endColumn":22},{"ruleId":"593","severity":1,"message":"659","line":9,"column":8,"nodeType":"595","messageId":"596","endLine":9,"endColumn":18},{"ruleId":"593","severity":1,"message":"660","line":25,"column":13,"nodeType":"595","messageId":"596","endLine":25,"endColumn":22},{"ruleId":"661","severity":1,"message":"662","line":28,"column":65,"nodeType":"663","messageId":"664","endLine":28,"endColumn":67},{"ruleId":"593","severity":1,"message":"665","line":21,"column":10,"nodeType":"595","messageId":"596","endLine":21,"endColumn":19},{"ruleId":"593","severity":1,"message":"666","line":23,"column":10,"nodeType":"595","messageId":"596","endLine":23,"endColumn":30},{"ruleId":"593","severity":1,"message":"667","line":74,"column":9,"nodeType":"595","messageId":"596","endLine":74,"endColumn":14},{"ruleId":"593","severity":1,"message":"668","line":75,"column":9,"nodeType":"595","messageId":"596","endLine":75,"endColumn":17},{"ruleId":"593","severity":1,"message":"669","line":83,"column":10,"nodeType":"595","messageId":"596","endLine":83,"endColumn":21},{"ruleId":"593","severity":1,"message":"670","line":306,"column":36,"nodeType":"595","messageId":"596","endLine":306,"endColumn":51},{"ruleId":"593","severity":1,"message":"671","line":2,"column":10,"nodeType":"595","messageId":"596","endLine":2,"endColumn":21},{"ruleId":"593","severity":1,"message":"667","line":12,"column":10,"nodeType":"595","messageId":"596","endLine":12,"endColumn":15},{"ruleId":"593","severity":1,"message":"667","line":43,"column":10,"nodeType":"595","messageId":"596","endLine":43,"endColumn":15},{"ruleId":"593","severity":1,"message":"672","line":4,"column":10,"nodeType":"595","messageId":"596","endLine":4,"endColumn":19},{"ruleId":"593","severity":1,"message":"612","line":5,"column":10,"nodeType":"595","messageId":"596","endLine":5,"endColumn":13},{"ruleId":"593","severity":1,"message":"613","line":5,"column":15,"nodeType":"595","messageId":"596","endLine":5,"endColumn":18},{"ruleId":"593","severity":1,"message":"673","line":5,"column":26,"nodeType":"595","messageId":"596","endLine":5,"endColumn":30},{"ruleId":"593","severity":1,"message":"674","line":17,"column":10,"nodeType":"595","messageId":"596","endLine":17,"endColumn":21},{"ruleId":"593","severity":1,"message":"675","line":18,"column":8,"nodeType":"595","messageId":"596","endLine":18,"endColumn":26},{"ruleId":"593","severity":1,"message":"616","line":22,"column":8,"nodeType":"595","messageId":"596","endLine":22,"endColumn":13},{"ruleId":"593","severity":1,"message":"676","line":23,"column":10,"nodeType":"595","messageId":"596","endLine":23,"endColumn":13},{"ruleId":"593","severity":1,"message":"677","line":23,"column":15,"nodeType":"595","messageId":"596","endLine":23,"endColumn":21},{"ruleId":"593","severity":1,"message":"624","line":24,"column":10,"nodeType":"595","messageId":"596","endLine":24,"endColumn":22},{"ruleId":"593","severity":1,"message":"678","line":27,"column":7,"nodeType":"595","messageId":"596","endLine":27,"endColumn":16},{"ruleId":"593","severity":1,"message":"679","line":43,"column":7,"nodeType":"595","messageId":"596","endLine":43,"endColumn":18},{"ruleId":"593","severity":1,"message":"680","line":47,"column":7,"nodeType":"595","messageId":"596","endLine":47,"endColumn":18},{"ruleId":"593","severity":1,"message":"681","line":51,"column":7,"nodeType":"595","messageId":"596","endLine":51,"endColumn":18},{"ruleId":"593","severity":1,"message":"682","line":55,"column":7,"nodeType":"595","messageId":"596","endLine":55,"endColumn":22},{"ruleId":"593","severity":1,"message":"683","line":62,"column":7,"nodeType":"595","messageId":"596","endLine":62,"endColumn":12},{"ruleId":"593","severity":1,"message":"684","line":74,"column":7,"nodeType":"595","messageId":"596","endLine":74,"endColumn":17},{"ruleId":"593","severity":1,"message":"685","line":80,"column":7,"nodeType":"595","messageId":"596","endLine":80,"endColumn":10},{"ruleId":"593","severity":1,"message":"686","line":238,"column":13,"nodeType":"595","messageId":"596","endLine":238,"endColumn":26},{"ruleId":"593","severity":1,"message":"687","line":293,"column":11,"nodeType":"595","messageId":"596","endLine":293,"endColumn":27},{"ruleId":"593","severity":1,"message":"688","line":306,"column":7,"nodeType":"595","messageId":"596","endLine":306,"endColumn":14},{"ruleId":"593","severity":1,"message":"689","line":308,"column":7,"nodeType":"595","messageId":"596","endLine":308,"endColumn":16},{"ruleId":"593","severity":1,"message":"690","line":310,"column":11,"nodeType":"595","messageId":"596","endLine":310,"endColumn":18},{"ruleId":"593","severity":1,"message":"653","line":326,"column":11,"nodeType":"595","messageId":"596","endLine":326,"endColumn":17},{"ruleId":"593","severity":1,"message":"668","line":538,"column":13,"nodeType":"595","messageId":"596","endLine":538,"endColumn":21},{"ruleId":"593","severity":1,"message":"614","line":1,"column":17,"nodeType":"595","messageId":"596","endLine":1,"endColumn":26},{"ruleId":"619","severity":1,"message":"691","line":22,"column":6,"nodeType":"621","endLine":22,"endColumn":23,"suggestions":"692"},{"ruleId":"593","severity":1,"message":"659","line":2,"column":26,"nodeType":"595","messageId":"596","endLine":2,"endColumn":36},{"ruleId":"593","severity":1,"message":"693","line":6,"column":8,"nodeType":"595","messageId":"596","endLine":6,"endColumn":9},{"ruleId":"694","severity":1,"message":"695","line":18,"column":97,"nodeType":"696","messageId":"697","endLine":18,"endColumn":98},{"ruleId":"593","severity":1,"message":"698","line":6,"column":10,"nodeType":"595","messageId":"596","endLine":6,"endColumn":16},{"ruleId":"628","severity":1,"message":"629","line":9,"column":3,"nodeType":"630","messageId":"631","endLine":11,"endColumn":4},{"ruleId":"661","severity":1,"message":"699","line":33,"column":28,"nodeType":"663","messageId":"664","endLine":33,"endColumn":30},{"ruleId":"593","severity":1,"message":"700","line":4,"column":10,"nodeType":"595","messageId":"596","endLine":4,"endColumn":13},{"ruleId":"593","severity":1,"message":"701","line":4,"column":15,"nodeType":"595","messageId":"596","endLine":4,"endColumn":19},{"ruleId":"593","severity":1,"message":"702","line":5,"column":10,"nodeType":"595","messageId":"596","endLine":5,"endColumn":14},{"ruleId":"593","severity":1,"message":"614","line":1,"column":17,"nodeType":"595","messageId":"596","endLine":1,"endColumn":26},{"ruleId":"593","severity":1,"message":"614","line":1,"column":17,"nodeType":"595","messageId":"596","endLine":1,"endColumn":26},{"ruleId":"593","severity":1,"message":"703","line":3,"column":34,"nodeType":"595","messageId":"596","endLine":3,"endColumn":42},{"ruleId":"593","severity":1,"message":"704","line":8,"column":3,"nodeType":"595","messageId":"596","endLine":8,"endColumn":17},{"ruleId":"593","severity":1,"message":"705","line":13,"column":8,"nodeType":"595","messageId":"596","endLine":13,"endColumn":17},{"ruleId":"593","severity":1,"message":"616","line":2,"column":8,"nodeType":"595","messageId":"596","endLine":2,"endColumn":13},{"ruleId":"593","severity":1,"message":"624","line":3,"column":10,"nodeType":"595","messageId":"596","endLine":3,"endColumn":22},{"ruleId":"593","severity":1,"message":"656","line":4,"column":28,"nodeType":"595","messageId":"596","endLine":4,"endColumn":35},{"ruleId":"593","severity":1,"message":"672","line":4,"column":10,"nodeType":"595","messageId":"596","endLine":4,"endColumn":19},{"ruleId":"593","severity":1,"message":"706","line":70,"column":7,"nodeType":"595","messageId":"596","endLine":70,"endColumn":24},{"ruleId":"593","severity":1,"message":"707","line":71,"column":7,"nodeType":"595","messageId":"596","endLine":71,"endColumn":22},{"ruleId":"593","severity":1,"message":"708","line":73,"column":7,"nodeType":"595","messageId":"596","endLine":73,"endColumn":12},{"ruleId":"593","severity":1,"message":"709","line":74,"column":7,"nodeType":"595","messageId":"596","endLine":74,"endColumn":16},{"ruleId":"593","severity":1,"message":"710","line":75,"column":7,"nodeType":"595","messageId":"596","endLine":75,"endColumn":14},{"ruleId":"593","severity":1,"message":"657","line":5,"column":10,"nodeType":"595","messageId":"596","endLine":5,"endColumn":20},{"ruleId":"593","severity":1,"message":"711","line":8,"column":8,"nodeType":"595","messageId":"596","endLine":8,"endColumn":29},{"ruleId":"593","severity":1,"message":"712","line":10,"column":8,"nodeType":"595","messageId":"596","endLine":10,"endColumn":22},{"ruleId":"593","severity":1,"message":"713","line":11,"column":8,"nodeType":"595","messageId":"596","endLine":11,"endColumn":20},{"ruleId":"593","severity":1,"message":"612","line":12,"column":10,"nodeType":"595","messageId":"596","endLine":12,"endColumn":13},{"ruleId":"593","severity":1,"message":"613","line":12,"column":15,"nodeType":"595","messageId":"596","endLine":12,"endColumn":18},{"ruleId":"593","severity":1,"message":"714","line":14,"column":10,"nodeType":"595","messageId":"596","endLine":14,"endColumn":18},{"ruleId":"593","severity":1,"message":"715","line":16,"column":9,"nodeType":"595","messageId":"596","endLine":16,"endColumn":15},{"ruleId":"593","severity":1,"message":"710","line":71,"column":10,"nodeType":"595","messageId":"596","endLine":71,"endColumn":17},{"ruleId":"593","severity":1,"message":"716","line":72,"column":11,"nodeType":"595","messageId":"596","endLine":72,"endColumn":24},{"ruleId":"593","severity":1,"message":"716","line":101,"column":11,"nodeType":"595","messageId":"596","endLine":101,"endColumn":24},{"ruleId":"593","severity":1,"message":"716","line":151,"column":11,"nodeType":"595","messageId":"596","endLine":151,"endColumn":24},{"ruleId":"593","severity":1,"message":"717","line":1,"column":17,"nodeType":"595","messageId":"596","endLine":1,"endColumn":25},{"ruleId":"593","severity":1,"message":"718","line":1,"column":27,"nodeType":"595","messageId":"596","endLine":1,"endColumn":36},{"ruleId":"593","severity":1,"message":"719","line":1,"column":38,"nodeType":"595","messageId":"596","endLine":1,"endColumn":44},{"ruleId":"593","severity":1,"message":"720","line":1,"column":46,"nodeType":"595","messageId":"596","endLine":1,"endColumn":53},{"ruleId":"593","severity":1,"message":"638","line":6,"column":3,"nodeType":"595","messageId":"596","endLine":6,"endColumn":11},{"ruleId":"593","severity":1,"message":"721","line":7,"column":3,"nodeType":"595","messageId":"596","endLine":7,"endColumn":19},{"ruleId":"593","severity":1,"message":"722","line":8,"column":3,"nodeType":"595","messageId":"596","endLine":8,"endColumn":11},{"ruleId":"593","severity":1,"message":"723","line":11,"column":10,"nodeType":"595","messageId":"596","endLine":11,"endColumn":16},{"ruleId":"593","severity":1,"message":"673","line":11,"column":18,"nodeType":"595","messageId":"596","endLine":11,"endColumn":22},{"ruleId":"593","severity":1,"message":"724","line":11,"column":34,"nodeType":"595","messageId":"596","endLine":11,"endColumn":40},{"ruleId":"593","severity":1,"message":"725","line":13,"column":8,"nodeType":"595","messageId":"596","endLine":13,"endColumn":18},{"ruleId":"593","severity":1,"message":"726","line":14,"column":8,"nodeType":"595","messageId":"596","endLine":14,"endColumn":32},{"ruleId":"593","severity":1,"message":"727","line":15,"column":10,"nodeType":"595","messageId":"596","endLine":15,"endColumn":22},{"ruleId":"593","severity":1,"message":"674","line":16,"column":10,"nodeType":"595","messageId":"596","endLine":16,"endColumn":21},{"ruleId":"593","severity":1,"message":"728","line":17,"column":8,"nodeType":"595","messageId":"596","endLine":17,"endColumn":28},{"ruleId":"593","severity":1,"message":"729","line":19,"column":3,"nodeType":"595","messageId":"596","endLine":19,"endColumn":19},{"ruleId":"593","severity":1,"message":"730","line":20,"column":3,"nodeType":"595","messageId":"596","endLine":20,"endColumn":12},{"ruleId":"593","severity":1,"message":"731","line":22,"column":10,"nodeType":"595","messageId":"596","endLine":22,"endColumn":24},{"ruleId":"593","severity":1,"message":"732","line":22,"column":26,"nodeType":"595","messageId":"596","endLine":22,"endColumn":39},{"ruleId":"593","severity":1,"message":"715","line":26,"column":9,"nodeType":"595","messageId":"596","endLine":26,"endColumn":15},{"ruleId":"593","severity":1,"message":"678","line":76,"column":7,"nodeType":"595","messageId":"596","endLine":76,"endColumn":16},{"ruleId":"593","severity":1,"message":"679","line":92,"column":7,"nodeType":"595","messageId":"596","endLine":92,"endColumn":18},{"ruleId":"593","severity":1,"message":"680","line":96,"column":7,"nodeType":"595","messageId":"596","endLine":96,"endColumn":18},{"ruleId":"593","severity":1,"message":"681","line":100,"column":7,"nodeType":"595","messageId":"596","endLine":100,"endColumn":18},{"ruleId":"593","severity":1,"message":"682","line":104,"column":7,"nodeType":"595","messageId":"596","endLine":104,"endColumn":22},{"ruleId":"593","severity":1,"message":"683","line":111,"column":7,"nodeType":"595","messageId":"596","endLine":111,"endColumn":12},{"ruleId":"593","severity":1,"message":"684","line":123,"column":7,"nodeType":"595","messageId":"596","endLine":123,"endColumn":17},{"ruleId":"593","severity":1,"message":"685","line":129,"column":7,"nodeType":"595","messageId":"596","endLine":129,"endColumn":10},{"ruleId":"593","severity":1,"message":"706","line":142,"column":5,"nodeType":"595","messageId":"596","endLine":142,"endColumn":22},{"ruleId":"593","severity":1,"message":"708","line":145,"column":5,"nodeType":"595","messageId":"596","endLine":145,"endColumn":10},{"ruleId":"593","severity":1,"message":"707","line":146,"column":5,"nodeType":"595","messageId":"596","endLine":146,"endColumn":20},{"ruleId":"593","severity":1,"message":"733","line":156,"column":5,"nodeType":"595","messageId":"596","endLine":156,"endColumn":23},{"ruleId":"593","severity":1,"message":"734","line":157,"column":5,"nodeType":"595","messageId":"596","endLine":157,"endColumn":23},{"ruleId":"593","severity":1,"message":"735","line":160,"column":5,"nodeType":"595","messageId":"596","endLine":160,"endColumn":13},{"ruleId":"593","severity":1,"message":"718","line":1,"column":27,"nodeType":"595","messageId":"596","endLine":1,"endColumn":36},{"ruleId":"593","severity":1,"message":"672","line":3,"column":10,"nodeType":"595","messageId":"596","endLine":3,"endColumn":19},{"ruleId":"593","severity":1,"message":"736","line":5,"column":3,"nodeType":"595","messageId":"596","endLine":5,"endColumn":12},{"ruleId":"593","severity":1,"message":"638","line":7,"column":3,"nodeType":"595","messageId":"596","endLine":7,"endColumn":11},{"ruleId":"593","severity":1,"message":"721","line":8,"column":3,"nodeType":"595","messageId":"596","endLine":8,"endColumn":19},{"ruleId":"593","severity":1,"message":"722","line":9,"column":3,"nodeType":"595","messageId":"596","endLine":9,"endColumn":11},{"ruleId":"593","severity":1,"message":"616","line":13,"column":8,"nodeType":"595","messageId":"596","endLine":13,"endColumn":13},{"ruleId":"593","severity":1,"message":"737","line":64,"column":10,"nodeType":"595","messageId":"596","endLine":64,"endColumn":20},{"ruleId":"593","severity":1,"message":"738","line":64,"column":22,"nodeType":"595","messageId":"596","endLine":64,"endColumn":35},{"ruleId":"593","severity":1,"message":"739","line":99,"column":5,"nodeType":"595","messageId":"596","endLine":99,"endColumn":22},{"ruleId":"593","severity":1,"message":"740","line":6,"column":10,"nodeType":"595","messageId":"596","endLine":6,"endColumn":18},{"ruleId":"593","severity":1,"message":"741","line":12,"column":7,"nodeType":"595","messageId":"596","endLine":12,"endColumn":20},{"ruleId":"593","severity":1,"message":"742","line":17,"column":11,"nodeType":"595","messageId":"596","endLine":17,"endColumn":17},{"ruleId":"593","severity":1,"message":"743","line":17,"column":19,"nodeType":"595","messageId":"596","endLine":17,"endColumn":23},{"ruleId":"593","severity":1,"message":"744","line":17,"column":25,"nodeType":"595","messageId":"596","endLine":17,"endColumn":33},{"ruleId":"593","severity":1,"message":"745","line":17,"column":35,"nodeType":"595","messageId":"596","endLine":17,"endColumn":50},{"ruleId":"593","severity":1,"message":"746","line":17,"column":58,"nodeType":"595","messageId":"596","endLine":17,"endColumn":65},{"ruleId":"593","severity":1,"message":"747","line":18,"column":11,"nodeType":"595","messageId":"596","endLine":18,"endColumn":15},{"ruleId":"619","severity":1,"message":"620","line":26,"column":6,"nodeType":"621","endLine":26,"endColumn":8,"suggestions":"748"},{"ruleId":"593","severity":1,"message":"749","line":4,"column":7,"nodeType":"595","messageId":"596","endLine":4,"endColumn":14},{"ruleId":"593","severity":1,"message":"741","line":5,"column":7,"nodeType":"595","messageId":"596","endLine":5,"endColumn":20},{"ruleId":"593","severity":1,"message":"634","line":6,"column":10,"nodeType":"595","messageId":"596","endLine":6,"endColumn":20},{"ruleId":"593","severity":1,"message":"667","line":15,"column":11,"nodeType":"595","messageId":"596","endLine":15,"endColumn":16},{"ruleId":"593","severity":1,"message":"750","line":2,"column":8,"nodeType":"595","messageId":"596","endLine":2,"endColumn":17},{"ruleId":"593","severity":1,"message":"659","line":1,"column":10,"nodeType":"595","messageId":"596","endLine":1,"endColumn":20},{"ruleId":"593","severity":1,"message":"751","line":2,"column":21,"nodeType":"595","messageId":"596","endLine":2,"endColumn":28},{"ruleId":"593","severity":1,"message":"635","line":2,"column":30,"nodeType":"595","messageId":"596","endLine":2,"endColumn":39},{"ruleId":"593","severity":1,"message":"752","line":4,"column":10,"nodeType":"595","messageId":"596","endLine":4,"endColumn":17},{"ruleId":"593","severity":1,"message":"751","line":6,"column":10,"nodeType":"595","messageId":"596","endLine":6,"endColumn":17},{"ruleId":"593","severity":1,"message":"753","line":27,"column":11,"nodeType":"595","messageId":"596","endLine":27,"endColumn":17},{"ruleId":"647","severity":1,"message":"648","line":8,"column":7,"nodeType":"649","endLine":8,"endColumn":88},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["754"],"no-negated-in-lhs",["755"],"'NotFound' is defined but never used.","'initialValue' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'count' is assigned a value but never used.","'Login' is defined but never used.","'setAuthToken' is defined but never used.","'CreateAccount' is defined but never used.","'PublishedForm' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Component' is defined but never used.","'FundingGraph' is defined but never used.","'axios' is defined but never used.","'ServiceBase' is assigned a value but never used.","'Constants' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["756"],"'Paper' is defined but never used.","'appConstants' is defined but never used.","'classes' is assigned a value but never used.","'FormIO' is defined but never used.","'CreateForm' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Navbar' is defined but never used.","'SideBar' is defined but never used.","'dummyForms' is defined but never used.","'startCase' is defined but never used.","'h1' is assigned a value but never used.","'Card' is defined but never used.","'Checkbox' is defined but never used.","'Tabs' is defined but never used.","'TEST_DISPATCH' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous function","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'textLogin' is assigned a value but never used.","'USER_LOADED' is defined but never used.","'AUTH_ERROR' is defined but never used.","'config' is assigned a value but never used.","'GET_INDICATORS' is defined but never used.","'alert' is defined but never used.","'message' is defined but never used.","'appHelpers' is defined but never used.","'CardActionArea' is defined but never used.","'Typography' is defined but never used.","'lastIndex' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'camelCase' is defined but never used.","'dummyQuestionLibrary' is defined but never used.","'token' is assigned a value but never used.","'projects' is assigned a value but never used.","'indicatorId' is assigned a value but never used.","'linkedindicator' is assigned a value but never used.","'FormBuilder' is defined but never used.","'withStore' is defined but never used.","'Form' is defined but never used.","'useDropzone' is defined but never used.","'PlacesAutocomplete' is defined but never used.","'Map' is defined but never used.","'Marker' is defined but never used.","'baseStyle' is assigned a value but never used.","'activeStyle' is assigned a value but never used.","'acceptStyle' is assigned a value but never used.","'rejectStyle' is assigned a value but never used.","'thumbsContainer' is assigned a value but never used.","'thumb' is assigned a value but never used.","'thumbInner' is assigned a value but never used.","'img' is assigned a value but never used.","'impactManager' is assigned a value but never used.","'indicatorStrings' is assigned a value but never used.","'address' is assigned a value but never used.","'imageData' is assigned a value but never used.","'payload' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'ServiceBase'. Either include it or remove the dependency array.",["757"],"'_' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'random' is defined but never used.","Expected '===' and instead saw '=='.","'Bar' is defined but never used.","'Line' is defined but never used.","'data' is defined but never used.","'Skeleton' is defined but never used.","'ExportOutlined' is defined but never used.","'LogoTrail' is defined but never used.","'programmeLocation' is assigned a value but never used.","'programmePlaces' is assigned a value but never used.","'image' is assigned a value but never used.","'sdgChecks' is assigned a value but never used.","'sdgDump' is assigned a value but never used.","'ExpansionPanelDetails' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Autocomplete' is defined but never used.","'DataGrid' is defined but never used.","'Option' is assigned a value but never used.","'allIndicators' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useMemo' is defined but never used.","'FormControlLabel' is defined but never used.","'MenuItem' is defined but never used.","'Upload' is defined but never used.","'Button' is defined but never used.","'InputLabel' is defined but never used.","'GooglePlacesAutocomplete' is defined but never used.","'DropzoneArea' is defined but never used.","'ImpactManagerSummary' is defined but never used.","'geocodeByAddress' is defined but never used.","'getLatLng' is defined but never used.","'UploadOutlined' is defined but never used.","'InboxOutlined' is defined but never used.","'handleSelectChange' is assigned a value but never used.","'handleBannerChange' is assigned a value but never used.","'normFile' is assigned a value but never used.","'TextField' is defined but never used.","'sdgDumping' is assigned a value but never used.","'setSdgDumping' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'Redirect' is defined but never used.","'MenuItemGroup' is assigned a value but never used.","'logout' is assigned a value but never used.","'user' is assigned a value but never used.","'loadUser' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'history' is assigned a value but never used.","'data' is assigned a value but never used.",["758"],"'SubMenu' is assigned a value but never used.","'PropTypes' is defined but never used.","'isEmpty' is defined but never used.","'connect' is defined but never used.","'render' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"759","fix":"760"},{"desc":"761","fix":"762"},{"desc":"763","fix":"764"},"Update the dependencies array to be: [token, dispatch, props]",{"range":"765","text":"766"},"Update the dependencies array to be: [token, dispatch, ServiceBase]",{"range":"767","text":"768"},"Update the dependencies array to be: [props]",{"range":"769","text":"770"},[1382,1399],"[token, dispatch, props]",[911,928],"[token, dispatch, ServiceBase]",[845,847],"[props]"]